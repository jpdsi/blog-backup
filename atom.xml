<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Japan Developer Support Internet Team Blog</title>
  
  <subtitle>日本マイクロソフトの Azure Bot Service / Internet Information Services (IIS) / Internet Explorer / Microsoft Edge に関するサポート情報のブログです。</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://jpdsi.github.io/blog/"/>
  <updated>2020-04-20T05:13:02.048Z</updated>
  <id>https://jpdsi.github.io/blog/</id>
  
  <author>
    <name>Developer Support Internet Japan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基本設定で Internet Explorer 関連の設定を配布する</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/</id>
    <published>2020-04-19T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:02.048Z</updated>
    
    <content type="html"><![CDATA[<p>※ これまで Japan IE Support Team Blog にて公開していた３つの記事を整理してまとめました。</p><p>Internet Explorer 関連の設定を、ドメインのグループ ポリシーを使用してクライアントに配布する方法についての紹介です。</p><p>以下の赤枠の部分についてを本記事で扱います。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/GroupPolicyPreferences.png" class=""><hr><p>基本設定ポリシーにて Internet Explorer 関連の設定を構成する場合は以下の 3 つを使用します。</p><ul><li>インターネット設定 — インターネット オプションと類似の設定から構成できます</li><li>レジストリ — インターネット オプションの設定に対応するレジストリ値を配布できます</li><li>ショートカット — IEの観点では “お気に入り” を配布するときに利用できます</li></ul><p>ぞれぞれ順にみていきます。</p><hr><h2 id="インターネット設定"><a href="#インターネット設定" class="headerlink" title="インターネット設定"></a>インターネット設定</h2><p>インターネット設定は以下の手順で開きます。</p><ol><li>[グループ ポリシー管理エディター] を開きます。</li><li>[ユーザーの構成] &gt; [基本設定] &gt; [コントロール パネルの設定] &gt; [インターネット設定] を選択します。</li><li>[インターネット設定] を右クリックし、[新規作成] &gt; [Internet Explorer XX] (配布先のバージョン) を選択します。</li></ol><p>※ “Internet Explorer 11” という項目がありませんが、”Internet Explorer 10” を選択することで Internet Explorer 11 への配布が可能です。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/GroupPolicyPreferences-New.png" class=""><hr><p><strong><font color="red">重要</font></strong><br><font color="red">各設定項目では『緑は配布する』/『赤は配布しない』を表しています。</font></p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/GroupPolicyPreferences-New1.png" class=""><p>以下のようにファンクション キーで切り替えることができます。</p><ul><li>画面上の全項目を有効(全て緑)にする：F5</li><li>画面上の全項目を無効(全て赤)にする：F8</li><li>選択中の項目を有効にする(項目のみ緑)：項目選択中にF6</li><li>選択中の項目を無効にする(項目のみ赤)：項目選択中にF7</li></ul><p><font color="red">設定を配布するつもりのないタブを開いたとき、緑の線や丸印で表示されている項目は、”OK” ボタンで設定で閉じた時点で配布対象となります。<br>そのため、特に設定を配布する必要のない画面を開いた場合は、『キャンセル後再度編集する』か『F8で配布不可にする』ようお気をつけください。</font></p><hr><p>それでは、例としてプロキシの設定を配布する手順を紹介します。</p><p>なお、プロキシの設定については <a href="../LAN-Settings/">こちらの記事</a> で詳しく説明していますが、「よくあるお問い合わせ」に記載のとおりプロキシの情報はバイナリ データを含む複数のレジストリが自動的に同期をとりながら管理されています。<br>技術的な観点からは、これらのレジストリをまとめて配布することでプロキシの設定を行うことができますが、サポートされる方法としては、基本設定 - インターネット設定を利用することですので、以下の方法での対応をご検討ください。</p><h3 id="インターネット設定の構成手順"><a href="#インターネット設定の構成手順" class="headerlink" title="インターネット設定の構成手順"></a>インターネット設定の構成手順</h3><ol><li>上述の手順で設定画面を開きます。<img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/GroupPolicyPreferences-New1.png" class=""></li></ol><p>先ほどお伝えしたように『緑は配布する』/『赤は配布しない』を表しています。<br>今回はプロキシの設定だけを配布しようと考えていますので、F8 キーなどで画面上に見えている『緑』の項目を『赤』に切り替えます。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/GroupPolicyPreferences-New2.png" class=""><p><font color="red">繰り返しになりますが、全般タブを (緑の項目を目にしたあと) このまま “OK” ボタンで閉じると、[スタートアップ] の設定や [終了時に閲覧の履歴を削除する] の設定も配布対象となり、意図しない設定を配布してしまうことになるのでご注意ください。</font></p><ol start="2"><li><p>次に [接続] タブを開きますが、先ほどと同様に『緑』の項目 “プロキシ サーバーを構成する…” を配布つもりがない時は以下のように『赤』に変更しておきます。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/GroupPolicyPreferences-Connection.png" class=""></li><li><p>[LAN の設定] ボタンをクリックします。<br>この例では、自動構成スクリプトのアドレスを明示的に指定したものを配布することにします。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/GroupPolicyPreferences-LAN.png" class=""><p>pac の URL を入力し、F6 キーで『緑』にします。<br>※ [自動構成スクリプトを使用する] を構成する場合はアドレス欄を構成するのみで自動でチェックが入ります。</p></li></ol><p>ここでも、<font color="red">配布しない項目は『赤』にしておくこと</font>を忘れずに…</p><ol start="4"><li><p>最後に、いま構成した設定をクライアント環境に　“一度だけ”　適用したい場合は、[共通]　タブにおいて [1 度だけ適用し、再適用しない] にチェックを入れます。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/GroupPolicyPreferences-Common.png" class=""></li><li><p>[OK] で画面を閉じます。<br>実際に配布される項目は、グループ ポリシー オブジェクト (GPO) を選択した際に右側に表示される画面の [設定] タブにて確認できます。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/GroupPolicyPreferences-Report.png" class=""></li><li><p>クライアントに配布されたプロキシの設定をみてみましょう。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/GroupPolicyPreferences-Result.png" class=""></li></ol><p>[自動構成スクリプトを使用する] が、手順 3 で設定した pac の URL になっています。<br>[設定を自動的に検出する] は手順 3 で『赤』にしたのでユーザーが指定した設定が上書きされずに残されています。</p><hr><h2 id="レジストリ"><a href="#レジストリ" class="headerlink" title="レジストリ"></a>レジストリ</h2><p>次に基本設定でレジストリを配布してみます。<br>先ほどの『インターネット設定』はインターネット オプションと類似の設定画面を用いて配布項目を構成 / 配布できる非常に便利な項目ですが、セキュリティ ゾーン の URL の配布に対応していません。<br>(以下の画像のように[サイト]ボタンがグレーアウトしています)</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/GroupPolicyPreferences-Security.png" class=""><p>クライアント環境に対して『ユーザーが任意に変更可能な状態』でセキュリティ ゾーンの URL を配布したい場合は、基本設定の『レジストリ項目』を構成します。</p><font color="red">※ 管理用テンプレートにある「サイトとゾーンの割り当て一覧」を構成した場合、ユーザーが手動で設定した内容は無視され、本項目で設定した内容に強制されます。インターネット オプション上の当該の項目は、グレーアウトした状態でユーザーは変更できず、かつ、本項目で設定したサイト (ドメイン) のみが表示される動作となります。このため「サイトとゾーンの割り当て一覧」を使用するかどうかは、よく検討してください。</font><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/AdministrativeTemplates.png" class=""><p><strong>前提 1 : セキュリティ ゾーンの URL が登録されるレジストリ</strong><br>各セキュリティ ゾーンのレジストリは以下のように登録されます。</p><p>場所 : HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\Domains\トップレベルドメイン\サブドメイン<br>名前 : プロトコル（http / https）<br>種類 : REG_DWORD<br>値 : 1 (ローカル イントラネット) / 2 (信頼済みサイト) / 3 (インターネット) / 4 (制限付きサイト)</p><p>例えば、”<a href="https://www.microsoft.com&quot;" target="_blank" rel="noopener">https://www.microsoft.com&quot;</a> を “信頼済みサイト” として配布した場合は以下のようになります。<br>場所 : HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\Domains\microsoft.com\www<br>名前 : https<br>種類 : REG_DWORD<br>値 : 2</p><p><strong>前提 2 : Internet Explorer セキュリテ ィ強化の構成 (IE ESC)</strong><br>サーバー　OS　には『Internet Explorer セキュリティ強化の構成 (IE ESC)』と呼ばれる機能があります。（既定は “有効” です）<br>この機能の状態により、登録 / 参照するセキュリティ ゾーンのレジストリが異なります。</p><p>有効：HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\EscDomains<br>無効：HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\Domains</p><p>配布元 / 配布先の『IE ESC』の状態が異なる状態でセキュリティ ゾーンの URL を 配布すると、登録 / 参照先が異なるため値が反映されません。<br>(後述の “レジストリ項目” の設定手順 4 で直接値を入力すると回避できます)</p><p>このため、セキュリティ ゾーンの URL をグループ ポリシーで管理する場合、配布元 / 配布先 IE ESC の 状態にご注意ください。<br>(クライアント OS には IE ESC が存在しないため “無効” と同等です）</p><p>IE ESC機能についての詳細は以下にあります。</p><p>Internet Explorer セキュリティ強化の構成による Internet Explorer のユーザー操作の変更<br><a href="https://support.microsoft.com/ja-jp/help/815141/ie-enhanced-security-configuration-changes-browsing-experience" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/help/815141/ie-enhanced-security-configuration-changes-browsing-experience</a></p><p>上記の前提を踏まえて実際の設定方法を紹介します。</p><hr><h3 id="基本設定のレジストリ項目の設定手順"><a href="#基本設定のレジストリ項目の設定手順" class="headerlink" title="基本設定のレジストリ項目の設定手順"></a>基本設定のレジストリ項目の設定手順</h3><p>この例では “<a href="https://www.microsoft.com&quot;" target="_blank" rel="noopener">https://www.microsoft.com&quot;</a> を信頼済みサイトに登録してみます。</p><p>※ 誤入力防止のために、登録されるレジストリ キーを直接指定して基本設定を構成する方法としています。<br>サーバー上で設定ができない場合は、手順 5 でレジストリ ([キーのパス] / [値の名前] / [値の種類] / [値のデータ]) を直接入力します（手順6/7は不要です）。</p><ol><li><p>配布元端末の IE 上にて配布する URL (ここでは <a href="https://www.microsoft.com" target="_blank" rel="noopener">https://www.microsoft.com</a>) を信頼済みサイトとして設定します。</p></li><li><p>[グループ ポリシー管理エディター]を開きます。</p></li><li><p>[ユーザーの構成] &gt; [基本設定] &gt; [Windows の設定] &gt; [レジストリ] を選択します。</p></li><li><p>[レジストリ]を右クリックし、[新規作成] &gt; [レジストリ項目] を選択します。</p></li></ol><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/Registory.png" class=""><ol start="5"><li><p>最初に [全般タブ] が開かれます。[アクション] では既定の “更新” を、[ハイブ] は “HKEY_CURRENT_USER” を選択します。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/Registory01.png" class=""></li><li><p>[キーのパス] 項目の […] ボタンをクリックし、[レジストリ項目ブラウザー] から予め登録したドメインを選択します。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/Registory02.png" class=""></li></ol><p>※ この例ではレジストリ キーは以下のとおりです。<br>HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\Domains\microsoft.com\www</p><ol start="7"><li>画面下部に表示される [名前] / [種類] / [データ] 欄の [名前] をクリック (反転します) し、[選択] ボタンを押下します。<img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/Registory03.png" class=""></li></ol><p>自動的に値が入力されます。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/Registory04.png" class=""><p>※ 手順 6 をせずに直接入力することも可能ですが、パスや値を間違えないように気を付けてください。</p><ol start="8"><li><p>クライアント環境に “一度だけ” 適用したい場合は、[共通] タブにおいて [1 度だけ適用し、再適用しない] にチェックを入れます。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/Registory05.png" class=""></li><li><p>[OK] で設定画面を閉じると、作成した設定が登録されます。(ログオン等の GPO 適用のタイミングでクライアント環境に値が反映されるようになります)</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/Registory06.png" class=""></li><li><p>実際に配布される項目は、グループ ポリシー オブジェクト (GPO) を選択した際に右側に表示される画面の [設定] タブにて確認可能です。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/Registory07.png" class=""></li><li><p>クライアントに配布された信頼済みサイトの設定をみてみましょう。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/Registory08.png" class=""></li></ol><hr><h2 id="ショートカット"><a href="#ショートカット" class="headerlink" title="ショートカット"></a>ショートカット</h2><p>最後に、ショートカットでお気に入りを配布してみます。</p><ol><li><p>[グループ ポリシー管理エディター] を開きます。</p></li><li><p>[ユーザーの構成] &gt; [基本設定] &gt; [Windows の設定] &gt; [ショートカット] を選択します。</p></li><li><p>[ショートカット] を右クリックし、[新規作成] &gt; [ショートカット] を選択します。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/Shortcut.png" class=""></li><li><p>最初に [全般タブ] が開かれます。[アクション] は既定の “更新” のままとします。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/Shortcut01.png" class=""></li></ol><p>[名前] は %userprofile%\Favorites\ &lt;ショートカット名&gt; と入力します。<br>[ターゲットの種類] は “URL” を、[場所] は “&lt;完全なパスの指定&gt;” を選択します。<br>[ターゲット URL] に URL (この例では <a href="https://www.microsoft.com" target="_blank" rel="noopener">https://www.microsoft.com</a>) を指定します。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/Shortcut02.png" class=""><ol start="5"><li><p>[共通タブ] の [ログインしているユーザーのセキュリティ コンテキストで実行する (ユーザー ポリシーオプション)] はそのままにしておきます。<br>クライアント環境に “一度だけ” 適用したい場合は、[共通] タブにおいて [1 度だけ適用し、再適用しない] にチェックを入れます。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/Shortcut03.png" class=""></li><li><p>[OK] で設定画面を閉じると、作成した設定が登録されます。(ログオン等の GPO 適用のタイミングでクライアント環境に値が反映されるようになります)</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/Shortcut04.png" class=""></li><li><p>実際に配布される項目は、グループ ポリシー オブジェクト (GPO) を選択した際に右側に表示される画面の [設定] タブにて確認可能です。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/Shortcut05.png" class=""></li><li><p>クライアントに配布されたお気に入りをみてみましょう。</p><img src="/blog/internet-explorer-microsoft-edge/IE-GroupPolicyPreferences/Shortcut06.png" class=""></li></ol><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。<br>もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;※ これまで Japan IE Support Team Blog にて公開していた３つの記事を整理してまとめました。&lt;/p&gt;
&lt;p&gt;Internet Explorer 関連の設定を、ドメインのグループ ポリシーを使用してクライアントに配布する方法についての紹介です。&lt;/p
      
    
    </summary>
    
    
    
      <category term="Internet Explorer" scheme="https://jpdsi.github.io/blog/tags/Internet-Explorer/"/>
    
      <category term="基本設定" scheme="https://jpdsi.github.io/blog/tags/%E5%9F%BA%E6%9C%AC%E8%A8%AD%E5%AE%9A/"/>
    
      <category term="プロキシ" scheme="https://jpdsi.github.io/blog/tags/%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7/"/>
    
  </entry>
  
  <entry>
    <title>Web サーバー側でコンテンツを更新しても IE 上に反映されない (キャッシュのお話)</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/IE-Cache/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/IE-Cache/</id>
    <published>2020-04-19T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:02.013Z</updated>
    
    <content type="html"><![CDATA[<p>※ これまで Japan IE Support Team Blog にて公開していた記事を移しました。</p><p>「IE8 では Web サーバー側でファイルを更新したらすぐクライアントに反映されていたのに、IE9 以降にしたらすぐに反映されなくなった。。」というお問い合わせをいただくことがあります。<br>この現象は、IE9 以降の IE で [インターネット オプション] の [全般タブ] [インターネット一時ファイルと履歴の設定] で [自動的に確認する] (既定値) が設定されている場合に 発生することがあり、以下の技術文書でもご案内しています。</p><p>Internet Explorer 9 において Webサーバーとの通信なしでキャッシュからコンテンツを表示する場合がある<br><a href="https://support.microsoft.com/ja-jp/help/2530998" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/help/2530998</a></p><p>今回は、この IE の “キャッシュ” の動作について詳しくご紹介いたします。</p><hr><h2 id="まず最初に、キャッシュとは"><a href="#まず最初に、キャッシュとは" class="headerlink" title="まず最初に、キャッシュとは"></a>まず最初に、キャッシュとは</h2><p>Internet Explorer における “キャッシュ” とは、<strong>閲覧しているページを次回もっと早く表示できるように、PC に保存しておく Web ページ (html、aspx など)、画像 (jpg、gif など)、その他リソースファイル (スタイルシートファイル (.css)、JavaScript ファイル (.js)、動画や音声ファイル などなど) 等などのコピー</strong> のことです。<br>次回同じページにアクセスした時、Web サーバー側で特に更新されていなければキャッシュからファイルを取得することで、通信量を抑えたりページ表示の速度を速めたりするための仕組みです。</p><p>保存されているキャッシュは、[インターネット オプション] – [全般] タブ - 閲覧の履歴 – [設定] ボタンをクリックすると表示される [Web サイト データの設定] ダイアログ上で、[ファイルの表示] ボタンを押すと確認できます。</p><img src="/blog/internet-explorer-microsoft-edge/IE-Cache/TemporaryInternetFiles.jpg" class=""><p>エクスプローラが起動して、以下のようにキャッシュが表示されます。</p><img src="/blog/internet-explorer-microsoft-edge/IE-Cache/Explorer.jpg" class=""><p>いくつかの項目が表示されていますが、このうち <strong>“有効期限日時”</strong> は Web サーバーが指定してくる (具体的には、HTTP レスポンス ヘッダーの Set-Cookie ヘッダーで指定してくる) ものになります。指定がなければ、”なし” と表示されます。</p><p>一度閲覧した Web ページを次回表示した時、IE は基本的にファイル取得を以下の流れで行います。</p><p>ユーザーが Web ページのアドレスを IE のアドレスバーに入力して Enter キーを押す<br>IE は、対象のコンテンツのキャッシュがキャッシュフォルダに存在するかを確認する<br>→　キャッシュが存在していて、<br>→→　 有効期限内であればキャッシュから取得。<br>→ →　有効期限が切れていれば、Web サーバーへ更新確認 (If-Modified-Since ヘッダーを含む Get リクエスト) を行う。<br>→→→　更新確認の結果<br>→ →→→　Web サーバー側のファイルが更新されていたら、Web サーバーから取得。（ファイルをダウンロード。HTTP ステータスコード 200 OK が返る）<br>→ →→→　更新されていなければ (HTTP ステータスコード 304 Not Modified が返れば) 引き続きキャッシュから取得。</p><p>上記の流れを考えると、Web サーバー上のファイルが更新されれば Web サーバーから取得するのだから、「Web サーバー側でファイルを更新したのに、クライアントの IE で Web サイトにアクセスしても更新が反映されない。。」ということはなさそうに思われます。</p><p>が、</p><p>IE9 以降の IE では、以下両方に該当する場合、更新確認も行わずにコンテンツをキャッシュから取得するようになっています。</p><p>クライアント側の IE で [インターネット オプション] [インターネット一時ファイルと履歴の設定] で [自動的に確認する] (既定値) が設定されている<br>Web サーバー側で “有効期限日時” を指定していないコンテンツである</p><p>この動作変更は、IE9 以降 RFC2616 に準拠して、”表示の高速化、効率化のため、より積極的にキャッシュを利用する” ために行われました。</p><p>具体的には、<strong>[インターネット一時ファイルと履歴の設定] で [自動的に確認する] が設定されている場合、Web サーバーから “有効期限の指定のない” コンテンツを取得すると、IE は独自に有効期限を計算して設定し、キャッシュを作成する</strong> ようになりました。</p><p>この機能は “ヒューリスティックキャッシュ” と呼ばれます。</p><hr><p>(※) ヒューリスティック キャッシュについて</p><p>有効期限の指定のないコンテンツについて、従来の IE では限定されたリソース (画像ファイル) にのみ独自に期限を設定していましたが、IE9 以降ではキャッシュ可能な全てのリソースについて独自に期限を設定するようにしました。<br>ヒューリスティック キャッシュの詳細については、以下のブログ記事で紹介されています。</p><p>Caching Improvements in Internet Explorer 9<br><a href="https://docs.microsoft.com/en-us/archive/blogs/ie/caching-improvements-in-internet-explorer-9" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/archive/blogs/ie/caching-improvements-in-internet-explorer-9</a></p><p>ヒューリスティック キャッシュでは、以下の計算式で有効期限を算出します。最初にコンテンツを取得してキャッシュを作成するとき、算出した有効期限を設定します。</p><p>有効期間 = (最終チェック日時 - 最終更新日時) * 0.1</p><p>つまり最終チェック日時と最終更新時間の差が大きい、つまり更新されていない期間が長いコンテンツは有効期間が長く設定され、クライアントからの更新確認の頻度が下がる仕組みです。</p><p>なおエクスプローラー上では、”有効期限日時” は “なし” と表示され、IE が設定した有効期限は見ることができません。</p><hr><p>つまり、<br>例えば先ほどのエクスプローラー画面の iis-85.png の場合</p><img src="/blog/internet-explorer-microsoft-edge/IE-Cache/Cache-iis85.jpg" class=""><ul><li>最終チェック日時 :  2018/03/07 10:52</li><li>最終変更日時 : 2016/04/22 9:49</li></ul><p>であるため、キャッシュ作成時、有効期間は約 68 日間と設定されることとなります。<br>言い換えますと、IE が最初に iis-85.png を Web サーバーから取得してキャッシュを作成してから約 68 日間はキャッシュが有効期限内になり、この間に  Web サーバー側で更新しても、IE は Web サーバーへの更新確認は行わずキャッシュから取得します。</p><p>以上から、頻繁に更新したり、更新後すぐに確実にクライアントの IE に反映させたい！といったコンテンツについては、Web サーバー側で明示的に有効期限を指定されることをお勧めしています。</p><hr><h2 id="有効期限を設定していなかったコンテンツを-Web-サーバー上で更新した時、クライアントの-IE-に直ぐ反映させるにはどうすればいい？"><a href="#有効期限を設定していなかったコンテンツを-Web-サーバー上で更新した時、クライアントの-IE-に直ぐ反映させるにはどうすればいい？" class="headerlink" title="有効期限を設定していなかったコンテンツを Web サーバー上で更新した時、クライアントの IE に直ぐ反映させるにはどうすればいい？"></a>有効期限を設定していなかったコンテンツを Web サーバー上で更新した時、クライアントの IE に直ぐ反映させるにはどうすればいい？</h2><p>まず、クライアントには「IE が有効期限を独自に設定したキャッシュ」が既に存在している状態です。</p><p>[インターネット一時ファイルと履歴の設定] で [自動的に確認する] が選択されている場合、これが有効期限内であるうちは Web サーバーに更新確認を行わないので更新は反映されません。<br>Web サーバー側からは、クライアントのキャッシュを削除する方法がありません。<br>そのため、どうにかしてクライアントのキャッシュを削除する必要があります。</p><p>その他の方法として、[インターネット一時ファイルと履歴の設定] で [Web サイトを表示する度に確認する] または [Internet Explorer を表示する度に確認する] を指定すると、IE は有効期限内のコンテンツであっても Web サーバーに更新確認を行います。</p><p>キャッシュ削除の最もシンプルな方法は、ユーザー自身が [インターネット オプション] – [全般] タブから、閲覧の履歴を削除することです。</p><p>クライアント側でキャッシュを削除するには、インターネット オプション – 全般 タブ - 閲覧の履歴 の [削除] ボタンをクリックして [閲覧の履歴の削除] ダイアログから行います。</p><img src="/blog/internet-explorer-microsoft-edge/IE-Cache/DeleteBrowsingHistory.jpg" class=""><p>“キャッシュ” を削除するには、”インターネット一時ファイルおよび Web サイトのファイル” にチェックを入れて [削除] ボタンをクリックします。<br>Cookie や、フォームへの入力内容などを削除したくない場合には該当のチェックは外しても大丈夫です。</p><p>他の項目についての詳細は、以下の技術文書にてご案内しています。</p><p>Internet Explorer の閲覧履歴の表示および削除<br><a href="https://support.microsoft.com/ja-jp/help/17438/windows-internet-explorer-view-delete-browsing-history" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/help/17438/windows-internet-explorer-view-delete-browsing-history</a></p><p>社内の Active Directory 環境のクライアント端末を管理されているような方で、 ドメインに参加しているクライアント全部、キャッシュを削除したい、、ということであれば、 一つの手として「グループ ポリシーで [終了時に閲覧の履歴を削除する] を有効とするポリシーをクライアントに配布する」という方法もあります。<br>これが適用されたクライアントでは、IE を終了するときにキャッシュが削除されます。</p><hr><h2 id="今後、Web-サーバー側で更新したコンテンツを、すぐクライアントに反映させるためにはどうすればいい？"><a href="#今後、Web-サーバー側で更新したコンテンツを、すぐクライアントに反映させるためにはどうすればいい？" class="headerlink" title="今後、Web サーバー側で更新したコンテンツを、すぐクライアントに反映させるためにはどうすればいい？"></a>今後、Web サーバー側で更新したコンテンツを、すぐクライアントに反映させるためにはどうすればいい？</h2><p>頻繁に更新されるようなコンテンツでは、”Web サーバー側でコンテンツの有効期限を指定する” 方法をお勧めしています。<br>例えば以下のような HTTP 応答ヘッダー指定を行い、コンテンツのキャッシュの有効期限を制御します。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cache-Control : no-cache</span><br></pre></td></tr></table></figure><p>IE11 では、上記の HTTP 応答ヘッダーを含むファイルを受信すると有効期限切れのキャッシュを作成します。そのため次回アクセス時には Web サーバーへ更新確認を行い、更新されていれば Web サーバーから取得、更新がなければキャッシュから取得する、という動作になります。</p><p>なお HTTP 応答ヘッダーによる指定をクライアントのキャッシュに反映させるためには、Web サーバー側で指定を行った後、やっぱりクライアントのキャッシュを削除する必要がありますのでご注意ください。</p><p>キャッシュの有効期限を指定する HTTP 応答ヘッダーには以下があります。</p><p>Expires<br><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expires" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expires</a><br>キャッシュを有効期限切れとする日時を指定します。</p><p>Cache-Control<br><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control</a><br>キャッシュを有効とする期間 (秒) を指定します。キャッシュの作成を抑止する指定も可能です。</p><hr><h3 id="ご参考-META-タグによるキャッシュ制御の指定について"><a href="#ご参考-META-タグによるキャッシュ制御の指定について" class="headerlink" title="ご参考 : META タグによるキャッシュ制御の指定について"></a>ご参考 : META タグによるキャッシュ制御の指定について</h3><p>Web ページ (HTML、ASPX 等) 内では以下のような META 要素でキャッシュを制御できます。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;META http-equiv&#x3D;cache-control content&#x3D;no-cache&gt;</span><br><span class="line">&lt;META http-equiv&#x3D;expires content&#x3D;0&gt;</span><br></pre></td></tr></table></figure><p>ただしこの指定は、”記載されている Web ページ” のみが対象であり、ページに読み込まれる .css や .js 等の Web リソースファイルに対しては有効ではありません。Web リソースファイルのキャッシュを制御するには、後述の通り Web サーバーにて設定を行う必要があります。</p><p>また Web ページにおいても、キャッシュを確実に制御されたい場合、以下の理由から META タグではなく HTTP 応答ヘッダーによる指定を強くお勧めしております。</p><p>META タグでのキャッシュ制御は、あくまでも HTML ファイル内の “タグ” で行なうものであり、” HTML ファイルを読み込んでから解釈しキャッシュの処理をする” ものです。<br>キャッシュの制御を HTML パーサーで行なうこととなるためキャッシュは一旦作成されます。SSL の場合は直接キャッシュ自体を削除し、非 SSL の場合は、期限切れのキャッシュと同等に扱われます。</p><hr><h3 id="ご参考-キャッシュの削除について"><a href="#ご参考-キャッシュの削除について" class="headerlink" title="ご参考 :キャッシュの削除について"></a>ご参考 :キャッシュの削除について</h3><p>IE のキャッシュ削除の方法として、 正式にサポートされているのは以下となります。</p><ul><li>[インターネット オプション] – [閲覧の履歴の削除] ダイアログから削除</li><li>エクスプローラでキャッシュの場所を開いて削除</li><li>キャッシュ削除のためのアプリケーションを開発、実行して削除 (※)</li></ul><p>(※) キャッシュ削除のために用意された “DeleteURLCacheEntry” API を利用したアプリケーションを作成し、実行することによって削除できます。<br>“インターネット一時ファイルおよびWebサイトのファイル” のみを削除するような処理も実装可能です。</p><p>DeleteUrlCacheEntry function<br><a href="https://docs.microsoft.com/ja-jp/windows/win32/api/wininet/nf-wininet-deleteurlcacheentry" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/windows/win32/api/wininet/nf-wininet-deleteurlcacheentry</a></p><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。<br>もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;※ これまで Japan IE Support Team Blog にて公開していた記事を移しました。&lt;/p&gt;
&lt;p&gt;「IE8 では Web サーバー側でファイルを更新したらすぐクライアントに反映されていたのに、IE9 以降にしたらすぐに反映されなくなった。。」というお問い
      
    
    </summary>
    
    
    
      <category term="Internet Explorer" scheme="https://jpdsi.github.io/blog/tags/Internet-Explorer/"/>
    
      <category term="キャッシュ" scheme="https://jpdsi.github.io/blog/tags/%E3%82%AD%E3%83%A3%E3%83%83%E3%82%B7%E3%83%A5/"/>
    
  </entry>
  
  <entry>
    <title>IE のセキュリティ ゾーンについて</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/IE-SecurityZones/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/IE-SecurityZones/</id>
    <published>2020-04-19T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:02.092Z</updated>
    
    <content type="html"><![CDATA[<p>Internet Explorer の “セキュリティ ゾーン” についてお話をしたいと思います。</p><p>こちらの画面をご覧いただいたことはありますでしょうか？ [インターネット オプション] の、[セキュリティ] タブです。</p><img src="/blog/internet-explorer-microsoft-edge/IE-SecurityZones/SecurityTab.jpg" class=""><p>※ [インターネット オプション] ダイアログは、IE の [ツール] メニュー -  [インターネット オプション] をクリックすると表示されます。</p><p><strong>インターネット、ローカル イントラネット、信頼済みサイト、制限付きサイト</strong> の 4 つのアイコンが表示されていますが、これは IE の <strong>セキュリティ ゾーン</strong> を表しています。</p><hr><h2 id="“セキュリティ-ゾーン”-とは"><a href="#“セキュリティ-ゾーン”-とは" class="headerlink" title="“セキュリティ ゾーン” とは"></a>“セキュリティ ゾーン” とは</h2><p>Web サイトが 「ネットワーク上どの位置にあるか」を判定していずれかの “ゾーン” を割り当て、割り当てられたゾーンに基づいてセキュリティの管理を行う、IE 独自の機能です。</p><p>各ゾーンは、以下のようなイメージで設計されています。</p><p><strong><u>インターネット ゾーン</u></strong><br>一般的な、いわゆるインターネット上のサイトで利用されるゾーンです。悪意のあるサイトが含まれる可能性もあるため、既定でセキュリティは厳しめで、セキュリティレベルは「中高」です。</p><p><strong><u>ローカル イントラネットゾーン</u></strong><br>家庭内、社内など、内部ネットワークに存在するサイト向けのゾーンです。通常これらのサイトは信頼できる管理者によって管理されており、ユーザーがセキュリティ上の危険にさらされる可能性がほぼないことから、既定ではセキュリティは緩めでセキュリティレベルは「中低」です。</p><p><strong><u>信頼済みサイト ゾーン</u></strong><br>公開者、運営者がハッキリしていて、安全で信頼できるサイト向けのゾーンです。既定のセキュリティレベルは「中」で、4つのゾーンの中でローカル イントラネットゾーンの次に緩めです。具体的には、スクリプトの実行などが既定で許可されています。</p><p><strong><u>制限付きサイト ゾーン</u></strong><br>安全でない、信頼できないサイトを向けのゾーンです。既定のセキュリティレベルは 4 つのゾーンのうち最も厳しい、「高」で、スクリプト、ActiveX コントロールの実行や、ファイルのダウンロードなどはほぼ禁止されています。</p><p>通常、例えば <a href="http://www.microsoft.com/" target="_blank" rel="noopener">http://www.microsoft.com/</a> といった一般的な Web サイトは <strong>インターネット ゾーン</strong> と判定されます。</p><p>ユーザーが「安全で信頼できるので、このサイト上のスクリプト等は確認なしで実行してよい」と考えたサイトは、信頼済みサイトゾーン に追加することで、スクリプトなどの実行のたびに確認を求められることなく利用できます。</p><p>逆にあやしい、安全でないと判断したサイトは制限付きサイトゾーンに追加することで、アクセス時に意図せず有害なプログラムが実行されてしまったり、ウィルスを含むプログラムがダウンロードされてしまうことを防げます。</p><p><strong>ローカル イントラネットゾーン</strong> ではユーザーがサイトを追加する以外にも IE  が持つ “ローカル イントラネットゾーンの自動判別” の機能により、家庭内、企業内の Web サイトを自動で ローカル イントラネットゾーン と判断する場合もあります。自動判別については後述します。</p><hr><h2 id="表示中-Web-サイトの-セキュリティゾーンの確認方法"><a href="#表示中-Web-サイトの-セキュリティゾーンの確認方法" class="headerlink" title="表示中 Web サイトの セキュリティゾーンの確認方法"></a>表示中 Web サイトの セキュリティゾーンの確認方法</h2><p>表示している Web サイトがどのゾーンと判定されているかは、ページのプロパティ上に表示されます。</p><img src="/blog/internet-explorer-microsoft-edge/IE-SecurityZones/Property.jpg" class=""><p>もしくは、Web サイトを表示中に インターネット オプション を開いてセキュリティタブを見てみてください。4 つのゾーンの内選択状態になっている (文字が白くなっている) ゾーンが、表示中の Web サイトが割り当てられているゾーンになります。</p><hr><h2 id="各ゾーンのセキュリティ設定について"><a href="#各ゾーンのセキュリティ設定について" class="headerlink" title="各ゾーンのセキュリティ設定について"></a>各ゾーンのセキュリティ設定について</h2><p>それぞれのゾーンには、既定で適切なセキュリティレベルが設定されています。</p><ul><li>インターネットゾーン : 中高</li><li>ローカル イントラネットゾーン : 中低</li><li>信頼済みサイトゾーン : 中</li><li>制限つきサイトゾーン : 高</li></ul><p>IE のセキュリティ設定は、スクリプト、ActiveX コントロール、ファイルのダウンロードに関するもの、その他にも多くの項目を含んでいます。セキュリティレベルではこれらの項目をまとめて設定できますが、[レベルのカスタマイズ] ボタンをクリックして表示される [セキュリティ設定] ダイアログで個別に設定も可能です。例えば、インターネットゾーンのレベルは “中高” ですが、ほとんどのセキュリティ設定はそのままにして、ActiveX コントロール関係のセキュリティだけ緩めたい、という場合には [レベルのカスタマイズ] を利用します。</p><p>個別の項目を変更すると、セキュリティのレベル には “カスタム” と表示されます。</p><p>セキュリティ関連のレジストリにつきましては、以下でご紹介しています。</p><p>上級ユーザー向けの Internet Explorer セキュリティ ゾーン関連のレジストリ エントリ<br><a href="https://support.microsoft.com/ja-jp/help/182569/internet-explorer-security-zones-registry-entries-for-advanced-users" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/help/182569/internet-explorer-security-zones-registry-entries-for-advanced-users</a></p><hr><h2 id="セキュリティゾーンの判定について"><a href="#セキュリティゾーンの判定について" class="headerlink" title="セキュリティゾーンの判定について"></a>セキュリティゾーンの判定について</h2><p>IE が Web サイトのゾーンを判定する仕組みについても簡単にご紹介します。</p><p>こちらに フローチャートもございますので、併せてご覧ください。<br><a href="./IESecurityZone.pdf">ローカル イントラネット サイト判定フロー</a></p><h4 id="インターネットゾーン"><a href="#インターネットゾーン" class="headerlink" title="インターネットゾーン"></a>インターネットゾーン</h4><p>ローカル イントラネットゾーン、信頼済みサイトゾーン、制限つきサイトゾーンと判定されなかった Web サイトはすべて、インターネットゾーンと判定されます。</p><p>なおインターネット オプションでは、明示的に Web サイトをインターネットゾーンに追加することはできません。グループ ポリシーの [サイトとゾーンの割り当て一覧] を利用すると、特定のサイトをインターネットゾーンに追加することが可能です。</p><h4 id="信頼済みサイトゾーン、及び-制限つきサイトゾーン"><a href="#信頼済みサイトゾーン、及び-制限つきサイトゾーン" class="headerlink" title="信頼済みサイトゾーン、及び 制限つきサイトゾーン"></a>信頼済みサイトゾーン、及び 制限つきサイトゾーン</h4><p>各ゾーンに明示的に追加されているサイトが、それぞれ該当のゾーンと判定されます。それ以外の条件で、これらのゾーンと判定されることはありません。</p><h4 id="ローカル-イントラネットゾーン"><a href="#ローカル-イントラネットゾーン" class="headerlink" title="ローカル イントラネットゾーン"></a>ローカル イントラネットゾーン</h4><p>信頼済みサイトや制限付きサイトゾーンと同様、”ローカル イントラネットゾーン” に明示的に追加されているサイトは、問答無用でローカル イントラネットゾーンと判定されます。</p><p>どのゾーンにも追加されていない Web サイトは、以下のような複数の要素を総合的に評価し、ローカル イントラネットゾーンに振り分けられるかが決まります。</p><p><strong>ローカルイントラネットゾーンの自動判別について</strong><br>IE が、どのようにローカルイントラネットゾーンを判定するかは、以下のダイアログの指定によって決まります。</p><img src="/blog/internet-explorer-microsoft-edge/IE-SecurityZones/LocalIntranet.jpg" class=""><p>※ このダイアログは、インターネット オプション のセキュリティタブ上でローカル イントラネットゾーンのアイコンをクリックし、サイト ボタンをクリックすると表示されます。</p><p>[イントラネットのネットワークを自動的に検出する]　が有効の場合、<strong>ローカル イントラネットゾーンの自動判別</strong> の機能が有効となります。</p><p>自動判別では、まずは “この端末でローカル イントラネットゾーンを有効とするかどうか” の判定が行われます。</p><p>イントラネットゾーンが無効となった端末では、サイトが自動的に “イントラネットゾーン” と判定されることがありません。</p><p>自動判別の機能によってイントラネット設定が有効となるのは以下の場合です。</p><p><u>a. クライアントがドメイン ネットワーク (※) 上に存在する場合</u></p><p>クライアントがドメインに参加している場合、”ローカル イントラネット” ゾーンは利用可能であると判定されます。なお、ドメイン ネットワーク上に存在する場合でも、ドメインに参加していないクライアント (WORKGROUP など) の場合は、 “ローカル イントラネット” ゾーンは利用不可と判断されます</p><p><u>b. クライアントがドメイン ネットワーク上に存在しない場合</u></p><p>Network Location Awareness (NLA) API を利用し、クライアントが管理されたネットワークに接続されているかを確認します。<br>管理されたネットワークに接続されていると判断された場合、”ローカル イントラネット” ゾーンが利用可能と判定します。<br>NLA の機能では、クライアントがドメインに参加していない場合や、該当ドメイン ネットワークに物理的に接続していない場合は、 管理されたネットワークに接続されていないと判断されます。<br>しかし、NLA での確認前に IE のコンポーネントによって端末がドメインに参加しているかの確認が行われます。<br>そのため、ドメインに参加している端末の場合にはドメイン ネットワークに物理的に接続されていない場合でも “ローカル イントラネット” ゾーンが利用可能と判定します。</p><p>　(※) “ドメインネットワーク” とは、ドメイン コントローラーが所属するネットワークを表します。</p><p>上記の条件に該当せず、イントラネット ゾーンを有効とできなかった場合には、IE で ホスト名のみのURL などイントラネットのサイト にアクセスすると、以下のような情報バーが表示されます。</p><img src="/blog/internet-explorer-microsoft-edge/IE-SecurityZones/NotificationBar.jpg" class=""><p>このメッセージは、”自動判別” の機能が、”イントラネットゾーン” を有効とできる条件が不足していると判断し、イントラネットゾーンを無効としたことを表します。</p><ul><li>“今後、このメッセージを表示しない” を選択すると、引き続きイントラネット設定は無効となり、ローカル イントラネットゾーンは利用できません。</li><li>“イントラネットの設定を有効にする” を選択すると、 [イントラネットのネットワークを自動的に検出する] は無効、つまり自動判別の機能は無効になり、他の 3 つのオプションが有効になります。オプションの設定によって、該当するサイトをイントラネットゾーン として利用できます。</li></ul><p>各オプションは以下のような設定です。</p><p><strong>ほかのゾーンにないローカル (イントラネット) のサイトをすべて含める</strong><br>セキュリティゾーンに明示的に登録されていないローカルサイトを “ローカルイントラネット” セキュリティ ゾーンにマップするかどうかを制御します。この設定が有効な場合、”信頼済みサイト” または “制限付きサイト” ゾーンに明示的に登録にされていないローカルサイトを “ローカル イントラネット” ゾ―ンと判断します。またこの設定が無効の場合、ローカルサイトに対するゾーン判定動作は行いません。なお、ローカルサイトとは、ドット (.) 文字を含まないホスト名のみでアクセスするサイト (<a href="http://contoso" target="_blank" rel="noopener">http://contoso</a> など) を指します。</p><p><strong>プロキシ サーバーを使用しないサイトをすべて含める</strong><br>プロキシサーバーを経由せず直接アクセスするサイト、(例えば インターネットオプション - 接続タブの LAN の設定で プロキシの例外リストに追加されているサイト等) を “ローカルイントラネット” セキュリティ ゾーンにマップするかどうかを制御します。この設定が有効な場合、プロキシサーバーを使用しないサイトは “ローカル イントラネット” ゾーンと判断されます。またこの設定が無効の場合、プロキシサーバーを使用しないサイトに対するゾーン判定動作は行いません。なお、プロキシ サーバーを構成していないシステムでは、この設定は効果がありません。</p><p><strong>すべてのネットワーク パス (UNC) を含める</strong><br>UNC を表す URL (\contosotest など) を “ローカルイントラネット” セキュリティ ゾーンにマップするかどうかを制御します。この設定が有効な場合、すべての UNC ネットワークパス (UNC) は “ローカル イントラネット” ゾーンと判断されます。この設定が無効な場合、ネットワーク パス (UNC) に対するゾーン判定は行いません。</p><hr><p>※ 補足<br>ドメインに参加しているコンピュータで [イントラネットのネットワークを自動的に検出する] オプションを有効にすると、残りの 3 つのオプションも自動的に有効になります。この動作は以下の技術情報にて公開しています。</p><p>Enabling “Automatically Detect Intranet Network” on a domain member computer will enable all the three Intranet Options automatically.<br><a href="https://support.microsoft.com/ja-jp/help/2028170/enabling-automatically-detect-intranet-network-on-a-domain-member-comp" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/help/2028170/enabling-automatically-detect-intranet-network-on-a-domain-member-comp</a></p><p>ただし、これら 3 つのオプションは、ローカルイントラネットゾーンが有効である場合に効くものとなります。</p><p>例えば、[イントラネットのネットワークを自動的に検出する] オプションが有効で、これによってローカルイントラネットゾーンが “無効” と判断された場合、プロキシ サーバーを使用しないサイトにアクセスしても、ローカルイントラネットゾーンではなくインターネットゾーンと判定されます。</p><hr><p>今回のお話は以上となります。</p><p>インターネット上のサイトを IE で閲覧されている時に、ActiveX コントロールやスクリプトの警告が出て煩わしかったり、面倒だと感じられることがあるかもしれないのですが、インターネットゾーンのセキュリティレベルを下げる、、といったことは危険なのでお勧めできません。本当に信頼できるサイトは信頼済みサイトゾーンに追加して利用するなど、適切にセキュリティ管理していただきながら、IE をご利用いただければと思います。</p><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。<br>もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Internet Explorer の “セキュリティ ゾーン” についてお話をしたいと思います。&lt;/p&gt;
&lt;p&gt;こちらの画面をご覧いただいたことはありますでしょうか？ [インターネット オプション] の、[セキュリティ] タブです。&lt;/p&gt;
&lt;img src=&quot;/blog
      
    
    </summary>
    
    
    
      <category term="Internet Explorer" scheme="https://jpdsi.github.io/blog/tags/Internet-Explorer/"/>
    
      <category term="セキュリティ ゾーン" scheme="https://jpdsi.github.io/blog/tags/%E3%82%BB%E3%82%AD%E3%83%A5%E3%83%AA%E3%83%86%E3%82%A3-%E3%82%BE%E3%83%BC%E3%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>ローカル エリア ネットワーク (LAN) の設定について</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/LAN-Settings/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/LAN-Settings/</id>
    <published>2020-04-19T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:02.138Z</updated>
    
    <content type="html"><![CDATA[<p>これまで Japan IE Support Team Blog にて公開していた記事のうち、プロキシ関連の記事を整理しました。<br>長い記事になってしまうため、下記の 4 つの記事に分けています。</p><p><strong>(今回の記事) ローカル エリア ネットワーク (LAN) の設定について</strong><br><a href="../ProxySettings/">IE からみるプロキシの設定について</a><br><a href="../pac/">PAC について</a><br><a href="../wpad/">WPAD について</a></p><hr><h3 id="1-ローカルエリアネットワーク-LAN-の設定"><a href="#1-ローカルエリアネットワーク-LAN-の設定" class="headerlink" title="1. ローカルエリアネットワーク(LAN) の設定"></a>1. ローカルエリアネットワーク(LAN) の設定</h3><p>プロキシの設定は、Internet Explorer のインターネット オプション - [接続] タブの [LAN の設定] ボタンから開ける [ローカル エリア ネットワーク (LAN) の設定] ダイアログで行います。</p><img src="/blog/internet-explorer-microsoft-edge/LAN-Settings/LAN-Settings.png" class=""><p>Windows 10 では、[Windows の設定] – [ネットワークとインターネット] – [プロキシ] とも連動しています。</p><img src="/blog/internet-explorer-microsoft-edge/LAN-Settings/OS-Proxy.png" class=""><p>ここでは [ローカル エリア ネットワーク (LAN) の設定] ダイアログの表示内容に沿って解説します。</p><p>なお、よくあるお問い合せについて後述しましたので、そちらもご覧いただければと思います。</p><hr><h3 id="2-プロキシサーバーの利用を構成するための設定"><a href="#2-プロキシサーバーの利用を構成するための設定" class="headerlink" title="2. プロキシサーバーの利用を構成するための設定"></a>2. プロキシサーバーの利用を構成するための設定</h3><p>プロキシ サーバーの利用を構成するための設定は大きく分けると、赤い枠で囲んだ『プロキシ自動構成 (Proxy Auto-Configuration, PAC) スクリプトを使う方法』と、青い枠で囲んだ『プロキシ サーバーのアドレスやポートを直接指定する方法』の二つがあります。</p><img src="/blog/internet-explorer-microsoft-edge/LAN-Settings/LAN-Settings2.png" class=""><p>それぞれの項目について順に説明します。</p><p><strong>(1) 自動構成</strong><br>『自動構成』の欄では、『自動構成スクリプト ファイルの取得先を自動的に検出する』か、『自動構成スクリプト ファイルの取得先を手動で指定する』かを設定します。<br>※ 自動構成スクリプト (PAC) とは、<a href="https://docs.microsoft.com/ja-jp/internet-explorer/ie11-ieak/proxy-auto-config-examples" target="_blank" rel="noopener">アクセス先の URL や IP アドレスなどの条件</a> を基に、『プロキシ サーバーを経由せずに直接通信する』か『指定したプロキシ サーバーを経由して通信する』かのどちらかの結果を返す JavaScript で記述されたファイルです。</p><p>[設定を自動的に検出する] のチェックをオンにすると、WPAD (Web Proxy Auto-Discovery) という技術を利用して、PAC ファイルの取得先 (<a href="http://contoso.com/proxy.pac" target="_blank" rel="noopener">http://contoso.com/proxy.pac</a> や <a href="http://wpad.contoso.com/wpad.dat" target="_blank" rel="noopener">http://wpad.contoso.com/wpad.dat</a> のような URL) を自動的に検出してファイルをダウンロードします。<br>自動的な検出を構成せずに、PAC ファイルの取得先を直接指定する場合には、[自動構成スクリプトを使用する] のチェックをオンにして [アドレス] 欄に PAC ファイルの取得先を入力します。</p><p><strong>(2) プロキシ サーバー</strong></p><img src="/blog/internet-explorer-microsoft-edge/LAN-Settings/LAN-Settings3.png" class=""><p>『プロキシ サーバー』の欄では、利用するプロキシ サーバーのアドレスやポートを直接指定します。<br>[LAN にプロキシ サーバーを使用する] のチェックをオンにして設定します。<br>[アドレス] には、ホスト名、FQDN名、IPアドレスが使用できます。<br>[詳細設定] ボタンを押すと、[プロキシの設定] ダイアログが表示されます。こちらについては後述します。<br>[ローカル アドレスにはプロキシ サーバーを使用しない] のチェックをオンにすると、”ローカル アドレス” でアクセスした場合に、指定されたプロキシ サーバーを経由せずに直接通信します。</p><p><u>“ローカル アドレス” とは？</u><br><a href="http://contoso" target="_blank" rel="noopener">http://contoso</a> のように、ホスト名のみで指定された宛先です。簡単な見分け方は、ピリオド (.) を含んでいるかどうかです。IP アドレス (<a href="http://192.168.1.1" target="_blank" rel="noopener">http://192.168.1.1</a> など) や FQDN (<a href="http://contoso.com" target="_blank" rel="noopener">http://contoso.com</a> など) はピリオドを含んでいるためローカル アドレスではありません。</p><p>たとえば、contoso の IP アドレスが 192.168.1.1 だったとした場合に、[ローカル アドレスにはプロキシ サーバーを使用しない] のチェックをオンにした状態で通信すると、宛先によって以下のようになります。</p><p><a href="http://contoso" target="_blank" rel="noopener">http://contoso</a><br>→ローカル アドレスなので、プロキシ サーバーを経由せずに直接通信します。</p><p><a href="http://192.168.1.1" target="_blank" rel="noopener">http://192.168.1.1</a> または <a href="http://contoso.com" target="_blank" rel="noopener">http://contoso.com</a><br>→ローカル アドレスではないので、プロキシ サーバーを経由して通信します。</p><p>(参考情報)<br>Internet Explorer Uses Proxy Server for Local IP Address Even if the “Bypass Proxy Server for Local Addresses” Option Is Turned On<br><a href="https://support.microsoft.com/en-us/help/262981/" target="_blank" rel="noopener">https://support.microsoft.com/en-us/help/262981/</a></p><p>&lt;自動日本語訳版&gt;<br>[ローカル アドレスにはプロキシ サーバを使用しない] オプションが有効であるにもかかわらず、Internet Explorer がローカル IP アドレスにプロキシ サーバーを使用する<br><a href="https://support.microsoft.com/ja-jp/help/262981/" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/help/262981/</a></p><p><br><br></p><p>[詳細設定] ボタンを押すと表示される [プロキシの設定] ダイアログについて説明します。</p><img src="/blog/internet-explorer-microsoft-edge/LAN-Settings/ProxySettings.png" class=""><p><strong><u>使用するプロキシのアドレス/ポート</u></strong></p><p>プロキシ サーバーのアドレスとポート番号を入力します。プロトコル (http://、ftp:// など) で始まらない場合、HTTP プロキシであると見なされます。たとえば、「proxy」と入力すると、「http://proxy」として扱われます。<br>また、すべての種類で同じプロキシ サーバー設定を使用するときは、”すべてのプロトコルに同じプロキシ サーバーを使用する” をオンにします。この場合は上のスクリーンショットでお分かりいただけるかと思いますが、HTTP に指定したプロキシ サーバー情報が適用されます。<br>(Internet Explorer 8 以降では、プロトコルの種類 gopher: は存在しません)</p><p><strong><u>次で始まるアドレスにはプロキシを利用しない</u></strong></p><p>プロキシ サーバーを経由せずにアクセスしたいアドレスを指定します。複数のアドレスを、セミコロンで区切って複数指定できます。<br>例外リストに指定可能な文字列 (最大 2064 バイト) の表記形式は以下となります。下記表記形式中の [] で括られる部分は省略可能を意味し、”” で括られる部分は固定の文字列を意味します。<br>[&lt;プロトコル スキーム&gt;”://“]&lt;ホスト名、FQDN または IP アドレス&gt;[“:”&lt;ポート番号&gt;][“;”*]<br>&lt;プロトコル スキーム&gt; は http や ftp 等のプロトコル名を指します。<br>なお、プロキシ サーバーの例外リストに指定可能なプロトコル名に特に制限はございませんが、IE がサポートする通信プロトコルは http、https、ftp のみとなります。</p><p><strong><u>例外リストにワイルドカード (*) は利用できる？</u></strong></p><p>はい。ワイルドカード (<em>) も利用できます。<br>例)<br>*.example.com (“some.example.com” “<a href="http://www.example.com&quot;" target="_blank" rel="noopener">www.example.com&quot;</a> などにマッチ)<br>“www.</em>.com” (“<a href="http://www.example.com&quot;" target="_blank" rel="noopener">www.example.com&quot;</a> “<a href="http://www.department.example.com&quot;" target="_blank" rel="noopener">www.department.example.com&quot;</a> などにマッチ)<br>“<a href="http://www.example.*&quot;" target="_blank" rel="noopener">www.example.*&quot;</a> (“<a href="http://www.example.com&quot;" target="_blank" rel="noopener">www.example.com&quot;</a> “<a href="http://www.example.org&quot;" target="_blank" rel="noopener">www.example.org&quot;</a> “<a href="http://www.example.microsoft.com&quot;" target="_blank" rel="noopener">www.example.microsoft.com&quot;</a> などにマッチ)<br>“123.1<em>.66.</em>“ (“123.144.66.12” “123.133.66.15” “123.187.66.13.” などにマッチ)<br>“<em>contoso</em>“</p><p>なお、ワイルドカードの利用は充分にご注意ください。例えば “www.*.com” をプロキシ例外として指定した場合、非常に多くのサイトが該当してしまうので、意図しないアドレスがプロキシ サーバー経由せずにアクセスしてしまった、ということになりかねません。</p><hr><h3 id="3-よくあるお問い合わせ"><a href="#3-よくあるお問い合わせ" class="headerlink" title="3. よくあるお問い合わせ"></a>3. よくあるお問い合わせ</h3><p><strong><u>複数の項目が有効だった場合の優先順位は？</u></strong><br>[インターネットオプション] - [接続]タブの設定は、複数にチェックが入っていた場合、上から順に試行されます。つまり、優先順位は以下となります。</p><ol><li>設定を自動的に検出する</li><li>自動構成スクリプトを使用する</li><li>LAN にプロキシ サーバーを使用する</li></ol><p>「自動構成スクリプトを使用する」だけが設定されている場合、指定されたアドレスで自動構成スクリプトが取得できたかどうかによって、次にダイレクト接続を試行するかどうかが決定されます。<br>自動構成スクリプトの取得に失敗した場合は、プロキシを使用せずに対象の Web サイトへの接続を試みます。<br>自動構成スクリプトの取得に成功した場合は、自動構成スクリプトから返されたプロキシに接続を試みます。この場合、当該プロキシに接続できる/できないにかかわらず、以降のダイレクト接続の試行は行いません。<br>また「LAN にプロキシ サーバーを使用する」も同時に設定されている場合、IE自動構成スクリプトの取得に失敗すると、次に「LAN にプロキシ サーバーを使用する」のプロキシを使用した接続を試みます。<br>このプロキシに接続できなかった場合は、それ以上の試行は行わず「ページを表示できません」のエラーページを表示する動作となります。</p><p><strong><u>自動構成スクリプトを取得するタイミング</u></strong><br>Windows 7 までは、IE のプロセス起動後、最初に通信を行うタイミングで IE 自身が取得します。このとき、自動構成スクリプトのキャッシュが存在する場合は、一般的な Web ページのキャッシュと同じ仕組みでキャッシュが利用されます。ブラウザーのキャッシュについては こちら で詳しく説明していますので併せてご覧いただければと思いますが、有効期限内のキャッシュが存在する場合には自動構成スクリプトを Web サーバーに取得しにいくことなしに、キャッシュされた自動構成スクリプトを利用することなどにご注意いただければと思います。</p><p>一方、Windows 8 からは、WinHTTP Web Proxy Auto-Discovery Service (WinHttpAutoProxySvc) という OS の機能 (サービス) によって自動構成スクリプトを取得するようになり、IE などのアプリケーションはその情報を参照する形になりました。Windows 7 までのように IE の起動とは関係がなくなり、OS の起動時に取得されるほか、下記の状況下で再取得が試みられます。</p><p>  (A) WinHttpAutoProxySvc サービスの再起動時 (Windows 10 Version 1803 からはサービスの再起動はできません)<br>  (B) NLA (Network Location Awareness) サービスの再起動時<br>  (C) ネットワークへの接続時 (構成変更 (ネットワークアダプタの無効化／有効化、LAN ケーブルの抜き差し) を含む)</p><p>上記の状況下で再取得が試みられますが、Windows 7 までの IE 上での動作と同様にキャッシュが利用されます。そのため、キャッシュの期限を無視して強制的に再取得をさせたい場合は、IE 側で閲覧履歴の削除をしてから上記の A ～ C いずれかを実施します。</p><p><strong><u>自動プロキシキャッシュについて</u></strong><br>“自動プロキシ キャッシュ” とは、接続先のホスト名とプロキシ サーバーを紐づけて記憶する Internet Explorer の機能です。<br>“自動構成スクリプトのファイル (pac ファイル) 自体のキャッシュ” とは異なります。</p><p>自動プロキシ キャッシュ機能では、例えば、1 回目に <a href="http://www.microsoft.com/" target="_blank" rel="noopener">http://www.microsoft.com/</a> にアクセスを行った際には自動構成スクリプトを解析し対象となるプロキシを決定する必要がありますが、2 回目以降のアクセスでは自動構成スクリプトを再度解析することなく 1 回目に得られた結果を用いプロキシに対してアクセスを試みるような高速化に関わる動作を実現しています。</p><p>たとえば、以下のような pac で、192.168.100.100 がダウンして、192.168.100.200 が利用されたというシナリオを考えます。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function FindProxyForURL(url, host)</span><br><span class="line">&#123;</span><br><span class="line">if (shExpMatch(host, &quot;*.microsoft.com&quot;)) &#123;</span><br><span class="line">  return &quot;PROXY 192.168.100.100; PROXY 192.168.100.200&quot;; &#125;</span><br><span class="line"></span><br><span class="line">return &quot;DIRECT&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自動プロキシ キャッシュの機能によって *.microsoft.com へのアクセスは 192.168.100.200 を利用するということが Internet Explorer のメモリ上に保持され、プロセスを再起動するまで (※) キャッシュされた情報でプロキシへのアクセスをします。(つまり、最初から 192.168.100.200 からアクセスします)<br>※ Windows 10 Version 1607 からは、自動プロキシ キャッシュの機能の処理が WinHTTPAutoProxySvc に移動したため、Internet Explorer を再起動することでは自動プロキシ キャッシュの情報はクリアされず、WinHTTPAutoProxySvc の再起動 (または、Pac の再読み込み) でクリアされるように変わりました。</p><p>   Internet Explorer の自動プロキシ キャッシュを無効にする方法<br>   <a href="https://support.microsoft.com/ja-jp/help/271361/how-to-disable-automatic-proxy-caching-in-internet-explorer" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/help/271361/how-to-disable-automatic-proxy-caching-in-internet-explorer</a></p><p>これに加えて、プロキシ サーバーとの接続を確立できない場合は、当該プロキシ サーバーは「無効なプロキシ サーバー」の一覧というメモリ上で「30 分間」保持される情報として管理されるものがあります。<br>この動作により KB320507 で説明する、無効と判断したプロキシ サーバーに対しては、IE を再起動するか、30 分間経過するまでは接続を再試行しないという状態になり得ます。</p><p>   Internet Explorer が 30 分間に無効なプロキシ サーバーを再試行しません。<br>   <a href="https://support.microsoft.com/ja-jp/help/320507/internet-explorer-does-not-retry-bad-proxy-server-for-30-minutes" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/help/320507/internet-explorer-does-not-retry-bad-proxy-server-for-30-minutes</a></p><p><strong><u>IE11 以降における、file プロトコルでの自動構成スクリプトのアドレス指定について</u></strong><br>IE11 では、自動構成スクリプトのアドレスに file プロトコルでアドレスを指定できません。<br>例えば以下のような指定は無効で、この指定では自動構成スクリプトを利用することができません。</p><ul><li>C:\temp\proxy.pac</li><li>file://example/proxy.pac</li></ul><ul><li><p>動作変更の背景<br>もともと IE10 以前でも、上記のようなfile プロトコルによる指定は推奨されていませんでした。理由は、IE だけではなく、他のアプリケーションも自動構成スクリプトの設定を利用するものがあるためです。<br>具体的には、IE が通信に利用するモジュール “WinInet” では上の指定は有効なのですが、Windows Update などが利用する通信モジュール “WinHTTP” では、file プロトコルによる自動構成スクリプトのアドレス指定はサポートされていません。そのため、IE は問題なく自動構成スクリプトを利用でき、通信が行えても、Windows Update 等の他のアプリケーションが自動構成スクリプトを利用できず、問題が発生することがあるのです。これは以下の技術文書でも説明しています。</p><p>自動構成スクリプトの指定方法によって Windows Update が失敗する<br><a href="https://support.microsoft.com/ja-jp/help/890444" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/help/890444</a></p></li></ul><p>以上のような背景を踏まえ、file プロトコルでのアドレス指定は、Windows Update 等 WinHTTP を利用しているアプリケーションとの相互運用性を向上させるため、IE11から利用できなくなりました。</p><p>なお、Windows 10 Version 1607 より前の環境については、アドレス指定の見直しを進めていただく間の暫定的な対応策として、以下のレジストリを設定していただくと、IE11 でも file プロトコルでのアドレス指定が有効となります。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>キー</td><td>HKLM\SOFTWARE\Policies\Microsoft\Windows\CurrentVersion\Internet Settings</td></tr><tr><td>名前</td><td>EnableLegacyAutoProxyFeatures</td></tr><tr><td>種類</td><td>REG_DWORD</td></tr><tr><td>値</td><td>1</td></tr></tbody></table><p>あくまで暫定的な対応のために用意された方法であり、<font color="red">Windows 10 Version 1607 からはこの方法は利用できません。</font>お手数をおかけしますが、自動構成スクリプトは http または https プロトコルでアクセス可能な Web サーバーに配置してご利用いただけますようお願いいたします。</p><p><strong><u>プロキシサーバーの設定を、外部のアプリケーションやスクリプトなどから変更したい</u></strong><br>WinINet というモジュールに含まれる公開 API の InternetSetOption 関数を利用することでプロキシ サーバーの設定を行うことができます。</p><p> InternetSetOptionW function<br> <a href="https://docs.microsoft.com/en-us/windows/desktop/api/wininet/nf-wininet-internetsetoptionw" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/windows/desktop/api/wininet/nf-wininet-internetsetoptionw</a></p><p>実装例は以下のドキュメントにありますので併せてご覧ください。</p><p> Setting and Retrieving Internet Options<br> <a href="https://docs.microsoft.com/en-us/windows/desktop/WinInet/setting-and-retrieving-internet-options" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/windows/desktop/WinInet/setting-and-retrieving-internet-options</a><br>  ※ 「Setting Connection Options」の部分です。</p><p>なお、プロキシの情報は下記の DefaultConnectionSettings とそれに関連する複数のレジストリが自動的に同期をとりながら管理されています。</p><p>HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\Connections\DefaultConnectionSettings<br>HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\AutoConfigURL<br>HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\ProxyEnable<br>HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\ProxyOverride<br>HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\ProxyServer</p><p>DefaultConnectionSettings はフォーマットが非公開のバイナリー データであり、基本的にはこれらのレジストリが直接編集されることは想定しておらず、たとえば、ProxyEnable や ProxyOverride などを個別に直接変更するとレジストリ間で不整合が生じて予期しない動作 (プロキシの設定が消えてしまったり、想定した通信にならないなど) となる場合があります。<br>技術的な観点からは、これらのレジストリをまとめて配布することでプロキシの設定を行うことができますが、サポートされる方法としては、上記の InternetSetOption 関数を利用することです。</p><p>以上です。</p><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。<br>もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;これまで Japan IE Support Team Blog にて公開していた記事のうち、プロキシ関連の記事を整理しました。&lt;br&gt;長い記事になってしまうため、下記の 4 つの記事に分けています。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(今回の記事) ローカル エリア ネットワー
      
    
    </summary>
    
    
    
      <category term="Internet Explorer" scheme="https://jpdsi.github.io/blog/tags/Internet-Explorer/"/>
    
      <category term="プロキシ" scheme="https://jpdsi.github.io/blog/tags/%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7/"/>
    
  </entry>
  
  <entry>
    <title>IE からみるプロキシの設定について</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/ProxySettings/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/ProxySettings/</id>
    <published>2020-04-19T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:02.399Z</updated>
    
    <content type="html"><![CDATA[<p>これまで Japan IE Support Team Blog にて公開していた記事のうち、プロキシ関連の記事を整理しました。<br>長い記事になってしまうため、下記の 4 つの記事に分けています。</p><p><a href="../LAN-Settings/">ローカル エリア ネットワーク (LAN) の設定について</a><br><strong>(今回の記事) IE からみるプロキシの設定について</strong><br><a href="../pac/">PAC について</a><br><a href="../wpad/">WPAD について</a></p><hr><p>昨今、インターネットの通信をする機能や製品が多くなっており、「プロキシの設定」についてお問合せを頂く事があります。</p><p>プロキシの設定については “インターネットオプション – 接続 – LAN の設定” があります。</p><p>この設定「どのように管理されており、アプリケーションがどのようにこの設定を利用するか」ご存知でしょうか？この Blog では以下の目次の内容に沿って、この “プロキシの設定について” の理解を深めて頂ければと思います。</p><ol><li>はじめに ～ HTTP 通信に利用されるモジュール ～</li><li>インターネットオプションのプロキシ設定は誰のもの？</li><li>IE の設定はいつどのように設定値が利用されるのか</li><li>プロキシの設定についてよくある質問</li></ol><hr><h3 id="1-はじめに-～-HTTP-通信をするモジュール-～"><a href="#1-はじめに-～-HTTP-通信をするモジュール-～" class="headerlink" title="1. はじめに ～ HTTP 通信をするモジュール ～"></a>1. はじめに ～ HTTP 通信をするモジュール ～</h3><p>弊社から提供している HTTP の通信を行うモジュールには以下の 2 つがあります。</p><p>wininet.dll : 主にデスクトップにログインしたユーザーの権限で動くアプリケーションで利用する事を目的として作成されているモジュール。<br>winhttp.dll : 主にサービスなどログインをせずバックグラウンドで利用される事を目的として作成されているモジュール。</p><p>これらの 2 つのモジュールの API は一般向けにも公開されており、弊社製品以外でも様々なアプリケーションやサービスで利用することができます。</p><p>なお、IE はデスクトップでログオンし動作するアプリケーションであり、wininet.dll を利用しています。</p><hr><h3 id="2-インターネットオプションのプロキシ設定は誰のもの？"><a href="#2-インターネットオプションのプロキシ設定は誰のもの？" class="headerlink" title="2. インターネットオプションのプロキシ設定は誰のもの？"></a>2. インターネットオプションのプロキシ設定は誰のもの？</h3><p>プロキシの設定を行う際、よく目にするのは “IE の設定” として管理されている以下のインターネットオプションの画面になるとおもいます。</p><img src="/blog/internet-explorer-microsoft-edge/ProxySettings/LAN-Settings.png" class=""><p>弊社製品では多くの設定情報をレジストリに管理しており、代表的なものに「端末全体で共通した設定」を保持する場所(HKEY_LOCAL_MACHINE/HKLM)と、「ユーザー毎に行われた設定」を保持する場所が (HKEY_CURRENT_USER/HKCU)が存在します。</p><p>インターネットオプションで設定したプロキシの設定は、基本的には「ユーザー毎の情報」として HKCU で保存・維持管理されます。</p><img src="/blog/internet-explorer-microsoft-edge/ProxySettings/datastore.png" class=""><p>詳細については別の機会に譲りますが、このプロキシ設定は以下のような複数のレジストリキー配下にある複数の値を連動させて設定を管理するようになっています。</p><p>キー : HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings<br>キー : HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\Connections</p><hr><h3 id="3-IE-の設定はいつどのように設定値が利用されるのか"><a href="#3-IE-の設定はいつどのように設定値が利用されるのか" class="headerlink" title="3. IE の設定はいつどのように設定値が利用されるのか"></a>3. IE の設定はいつどのように設定値が利用されるのか</h3><p>上記の IE の設定はもちろん IE が通信を行う際に参照され利用されます。</p><p>では、その他のアプリケーションや機能ではどうでしょうか？</p><p>IE の管理するインターネットオプションから設定されたプロキシの設定を『利用するか否か』や『どのように利用するか』は各アプリケーションや機能の実装内容に依存します。</p><p>例えば、以下のようなシナリオが考えられます。</p><ol><li>IE と同様の通信モジュールである wininet.dll を利用しており、IE で設定された値をそのまま利用している</li><li>wininet.dll は利用しているが、プロキシの設定については独自の実装を行っており別に管理されている</li><li>サービスなど向けに用意されている winhttp.dll を利用しており、IE の設定を参照しその値を利用するようにしている</li><li>winhttp.dll を利用しているがサービスとして動作しており、(IEでプロキシの設定を行った)ユーザーの権限で動作しないため他の設定を (netsh コマンドで設定されたプロキシの値)が参照される</li><li>wininet/winhttp のいずれも利用していないが、プロキシの設定は IE の設定値をレジストリから参照しその情報を利用している</li><li>wininet/winhttp のいずれも利用しておらず、完全に独自の実装が行われている</li></ol><p>アプリケーションなどの実装によっては動作シナリオによって動きを柔軟に変化させられるよう上記の中の動作を組み合わせられていることなどもあります。<br>昨今ではサードパーティ製品も含めインターネットに接続し通信する機能やアプリケーションも増えており、一概に「いつどのように利用されるのか」をお伝えすることができません。</p><p>“IE の管理する” プロキシの設定値をどのように参照し利用するかについては個々のアプリケーションなどの実装についての確認をする必要があります。</p><p><u>ご参考</u></p><p>本題とは外れますが、上記に記載する wininet.dll や Winhttp.dll についてより知りたいという場合は、以下のような公開情報もご参照下さい。</p><p>Win32 Internet Extensions (WinInet)<br><a href="https://docs.microsoft.com/en-us/cpp/mfc/win32-internet-extensions-wininet?view=vs-2019" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/cpp/mfc/win32-internet-extensions-wininet?view=vs-2019</a></p><p>About WinHTTP<br><a href="https://docs.microsoft.com/en-us/windows/win32/winhttp/about-winhttp" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/windows/win32/winhttp/about-winhttp</a></p><p>WinINet vs. WinHTTP<br><a href="https://docs.microsoft.com/en-us/windows/win32/wininet/wininet-vs-winhttp" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/windows/win32/wininet/wininet-vs-winhttp</a></p><hr><h3 id="4-プロキシの設定についてよくある質問"><a href="#4-プロキシの設定についてよくある質問" class="headerlink" title="4. プロキシの設定についてよくある質問"></a>4. プロキシの設定についてよくある質問</h3><p>Q:<br>システムアカウントで動作するサービスがあるので、このアカウント用に(インターネットオプションからの設定と同等の) IE の設定を行いたいです。できますか？</p><p>A:<br>いいえ。IE の観点ではサポート可能な方法はありません。<br>前項で記載の通り、プロキシの設定の参照／利用の動作については対象のアプリケーションやサービス内での実装に依存します。<br>IE 自体はデスクトップなどにログオンしたユーザーが利用することを想定し開発されており、システムアカウントで IE を動作させること自体を想定していません。この為、システムアカウント用のプロキシの設定方法については IE の観点ではサポート可能な適切な方法がないという状況になります。</p><p>プロキシの設定の参照動作について、対象の製品／機能の観点での確認が必要な場合、弊社製の場合は対象の機能や製品の観点でのお問合せ、他社製品の場合には提供元へのお問合せなどをご検討下さい。</p><p>なお、以下の公開情報の通り IE 内部で利用している通信モジュールの wininet.dll はサービスなどのユーザーがログオンしない状態でのバックグラウンドでの利用はサポートしていません。</p><p>[INFO] サービスでは WinInet の使用はサポートされない<br><a href="https://support.microsoft.com/ja-jp/help/238425/info-wininet-not-supported-for-use-in-services" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/help/238425/info-wininet-not-supported-for-use-in-services</a></p><p><br><br><br>Q:<br>インターネットオプションのプロキシの設定を変更した場合の影響範囲は？</p><p>A:<br>「影響範囲」の内容が「どの程度の対象のアプリケーションがこの変更により動作が変わる可能性があるのか」であるとした場合、大変恐縮ながら “IE の観点” ではお答えすることができません。</p><p>ただし、すべてのアプリケーションや機能において事前に把握し動作を確認することも難しいかと思います。</p><p>設定変更に伴い「通信できなくなる」などの弊害が発生しないかについては、テスト環境などでもご確認をいただき特に弊社製品で何かお困りの状況が発生する場合には、専門の担当からのご支援も含め調整をいたしますのでお問い合わせください。</p><p><br><br><br>Q:<br>インターネットオプションで設定をしたプロキシはいつ利用されますか？</p><p>A:<br>もちろん “IE が利用する” 場合にはこの設定を使って通信しますが、”IE 以外” という観点では直接的が難しい部分です。</p><p>様々なアプリケーションやサービスが wininet や winhttp を利用して通信する可能性がありますが、IE で管理する設定を利用するか否か、いつ通信を行うかはそのアプリケーションやサービスに依存する為です。</p><p>実際の通信は上記のようなモジュールを利用していなくても、設定値のみ参照し独自のモジュールで実施する通信時に利用することもできます。</p><p>普段よく見かけるようでいて、あまり詳細を目にすることのない上記のような情報を何かお困りごとのある場合の検討材料や方向性のご検討にお役立ていただければ幸いです。</p><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。<br>もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;これまで Japan IE Support Team Blog にて公開していた記事のうち、プロキシ関連の記事を整理しました。&lt;br&gt;長い記事になってしまうため、下記の 4 つの記事に分けています。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;../LAN-Settings/&quot;&gt;ローカ
      
    
    </summary>
    
    
    
      <category term="Internet Explorer" scheme="https://jpdsi.github.io/blog/tags/Internet-Explorer/"/>
    
      <category term="プロキシ" scheme="https://jpdsi.github.io/blog/tags/%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7/"/>
    
  </entry>
  
  <entry>
    <title>PAC ファイルについて</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/pac/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/pac/</id>
    <published>2020-04-19T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:02.276Z</updated>
    
    <content type="html"><![CDATA[<p>これまで Japan IE Support Team Blog にて公開していた記事のうち、プロキシ関連の記事を整理しました。<br>長い記事になってしまうため、下記の 4 つの記事に分けています。</p><p><a href="../LAN-Settings/">ローカル エリア ネットワーク (LAN) の設定について</a><br><a href="../ProxySettings/">IE からみるプロキシの設定について</a><br><strong>(今回の記事) PAC について</strong><br><a href="../wpad/">WPAD について</a></p><hr><p>PAC ファイルを利用する場合、[インターネット オプション] – [接続] タブ – [LAN の設定] から以下のダイアログを開き、赤枠で囲った設定を有効とします。</p><p>なお、[アドレス] の項目には、PAC ファイルへの URL を記載する必要があります。ここが、WPAD とは異なる点です。WPAD を利用する場合は、URL の指定などは必要ありません。一方、PAC ファイルを利用する場合は、端末を利用するユーザーごとに PAC ファイルへの URL を明示的に設定する必要があります。</p><img src="/blog/internet-explorer-microsoft-edge/pac/LANSettings.jpg" class=""><hr><h3 id="1-自動構成スクリプト-PAC-ファイルの書き方について"><a href="#1-自動構成スクリプト-PAC-ファイルの書き方について" class="headerlink" title="1. 自動構成スクリプト (PAC) ファイルの書き方について"></a>1. 自動構成スクリプト (PAC) ファイルの書き方について</h3><p>PAC ファイルでは、「アクセス先の URL などの情報を元に、利用するプロキシ サーバーを指定する」ための処理条件をスクリプトで記載します。スクリプトの処理内では、URL のホスト名や IP アドレスなどの条件に合ったプロキシ サーバーの宛先 (URL、もしくは IP アドレス) とポート番号を返します。</p><p>PAC ファイルを記載する場合は、必ず FindProxyForURL 関数を記載する必要があります。PAC ファイルの処理時には、この FindProxyForURL の関数が実行されます。</p><p>FindProxyForURL 関数の第一引数である url はアクセス先の URL、第二引数である host はアクセス先の URL から取得したホスト名を表します。例えば、<a href="http://www.bing.com/" target="_blank" rel="noopener">http://www.bing.com/</a> という URL にアクセスする際には、url が <a href="http://www.bing.com/" target="_blank" rel="noopener">http://www.bing.com/</a> 、host が <a href="http://www.bing.com" target="_blank" rel="noopener">www.bing.com</a> となります。これらの値を様々な関数を用い条件分けし、最終的に経由するサーバーを返す (return) するような処理を作成します。以下に PAC ファイルの具体例を挙げて、ご説明します。</p><p><strong>PAC ファイルの具体例</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">function FindProxyForURL (url, host) &#123;</span><br><span class="line"> if (isPlainHostName (host)) &#123;</span><br><span class="line">    return &quot;DIRECT&quot;;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">  if (shExpMatch(url, &quot;http:&#x2F;&#x2F;www.bing.com&#x2F;&quot;)) &#123;</span><br><span class="line">      return &quot;PROXY www.bing-proxy.com:6060&quot;;</span><br><span class="line">    &#125; else if (shExpMatch(url, &quot;http:&#x2F;&#x2F;www.microsoft.com&#x2F;&quot;)) &#123;</span><br><span class="line">      return &quot;PROXY www.microsoft-proxy.com:7070&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      return &quot;PROXY www.other-proxy.com:8080&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上記の PAC ファイルには、isPlainHostName 関数と shExpMatch 関数が記載されています。isPlainHostName 関数は host に “.” (ピリオド) が含まれていなければ true、含まれていれば false を返す関数です。shExpMatch 関数は、文字列の部分比較を行う関数であり、第一引数に与えた文字列が第二引数に含まれている場合は true、含まれていない場合は false を返します。</p><p>上記の PAC ファイルを使用して <a href="http://www.bing.com/" target="_blank" rel="noopener">http://www.bing.com/</a> にアクセスした場合の戻り値は <a href="http://www.bing-proxy.coom" target="_blank" rel="noopener">www.bing-proxy.coom</a> というプロキシ サーバーに 6060 番ポート、<a href="http://www.google.com/" target="_blank" rel="noopener">http://www.google.com/</a> にアクセスした場合の戻り値は <a href="http://www.other-proxy.com" target="_blank" rel="noopener">www.other-proxy.com</a> というプロキシ サーバーに 8080 番ポートでアクセスします。IE では、この戻り値の結果に応じ、対象となるプロキシ サーバーへの接続を試み、接続が確立できる場合にはプロキシ サーバー経由で HTTP の通信が行われます。  </p><p>なお、host にピリオドが含まれていない場合は、isPlainHostName が true になり、”return DIRECT” が戻り値となります。IE では “return DIRECT” が戻り値として返された場合は、プロキシ サーバーを経由せずに直接接続する動作となります。</p><p>PAC ファイルで使用できる関数は <a href="https://docs.microsoft.com/ja-jp/internet-explorer/ie11-ieak/proxy-auto-config-examples" target="_blank" rel="noopener">こちらの弊社公開情報に記載されています</a> ので、ご参考いただけますと幸いです。</p><hr><h3 id="2-PAC-ファイルの配置方法について"><a href="#2-PAC-ファイルの配置方法について" class="headerlink" title="2. PAC ファイルの配置方法について"></a>2. PAC ファイルの配置方法について</h3><p>上記の方法で作成した PAC ファイルは、Web サーバーへ配置することで利用することができます。PAC ファイルへの URL を、[インターネット オプション] の [自動構成スクリプトを使用する] の項目に記載します。</p><p>なお、PAC ファイルを配置した Web サーバーには、.pac の拡張子に対する MIME タイプを併せて設定する必要があります。</p><p>　拡張子：.pac<br>　MIME の種類：application/x-ns-proxy-autoconfig<br>　※ 適切な指定を行っていない場合には、適切に PAC ファイルを解析し、条件判断をすることができなくなりますので、ご注意ください。</p><p>PAC ファイルは、通常の Web サイトと同様に HTTP 通信の GET リクエストで取得します。そのため、HTML コンテンツと同様にクライアントにキャッシュされますので、通信時に毎回取得する動作にはなりません。なお、Web のキャッシュと同じフォルダに保存されますので、IE のキャッシュを消去することで、PAC ファイルのキャッシュも消去されます。</p><hr><h3 id="3-PAC-ファイルに関するよくあるお問い合わせ"><a href="#3-PAC-ファイルに関するよくあるお問い合わせ" class="headerlink" title="3. PAC ファイルに関するよくあるお問い合わせ"></a>3. PAC ファイルに関するよくあるお問い合わせ</h3><p>ここでは、PAC ファイルに関連してよくお問い合わせいただく事例を紹介します。</p><p><strong>3-1. PAC ファイルを使用した場合に Web サイトへのアクセスに時間がかかる場合がある</strong></p><p>PAC ファイルを利用する場合に、Web ページへのアクセスに時間がかかるというお問い合わせをいただきます。この事象は、PAC ファイル内で URL を解析する処理を行っている際に発生する DNS の名前解決に失敗し、発生している可能性があります。</p><p>PAC ファイル内で以下の関数を利用する際には、DNS への名前解決が発生します。<br>・isResolvable<br>・isInNet<br>・dnsResolve</p><p>DNS サーバーへ問題なくアクセスができ、かつ名前解決にも成功する場合は、基本的に Web ページへのアクセスに時間がかかることはありません。しかし、DNS サーバーへのアクセスに失敗した場合や、アクセスは成功しても名前解決に失敗する場合は、その過程で時間がかかってしまうため、Web ページへのアクセスに時間がかかってしまいます。</p><p>そのため、PAC ファイル内で上記の関数を利用している環境で Web ページへのアクセスに時間がかかる場合は、DNS サーバーへの通信が正常に行えているかをご確認いただくのが有効です。</p><p><strong>3-2. “ローカル イントラネット” ゾーンの Web サイトが “インターネット” ゾーンと判断される場合がある</strong></p><p>PAC ファイルの解析結果は、セキュリティ ゾーンの自動判定にも使用されます。具体的には、PAC ファイルで “return DIRECT” が戻り値となる URL、つまり直接接続を行う Web サイトは “ローカル イントラネット” ゾーンとして表示されます。しかし、直接接続を行っているにもかかわらず、Web サイトが “インターネット” ゾーンとして表示されてしまうというお問い合わせをいただきます。この事象は、セキュリティ ゾーンの判定処理と PAC ファイルを取得/解析する処理が完了するタイミングによって発生します。</p><p>この事象は、[インターネット オプション] の [セキュリティ] タブから、Web サイトを明示的に “ローカル イントラネット” ゾーンに登録することで回避されます。明示的なゾーン登録を行うことで、PAC ファイルを使用したセキュリティ ゾーンの自動判定処理が行われず、Web サイトは必ず “ローカル イントラネット” ゾーンとして判定されます。</p><p>上記の事象については以下のサポート技術文書にも記載されておりますので、ご参考ください。</p><p>　FQDN または IP アドレスを使用すると、イントラネット サイトがインターネット サイトとして識別される<br>　<a href="https://support.microsoft.com/ja-jp/help/303650/" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/help/303650/</a></p><p>PAC ファイルをうまく活用することでネットワーク管理も容易になりますので、ぜひご利用ください！</p><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。<br>もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;これまで Japan IE Support Team Blog にて公開していた記事のうち、プロキシ関連の記事を整理しました。&lt;br&gt;長い記事になってしまうため、下記の 4 つの記事に分けています。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;../LAN-Settings/&quot;&gt;ローカ
      
    
    </summary>
    
    
    
      <category term="Internet Explorer" scheme="https://jpdsi.github.io/blog/tags/Internet-Explorer/"/>
    
      <category term="プロキシ" scheme="https://jpdsi.github.io/blog/tags/%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7/"/>
    
      <category term="pac" scheme="https://jpdsi.github.io/blog/tags/pac/"/>
    
  </entry>
  
  <entry>
    <title>WPAD について</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/wpad/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/wpad/</id>
    <published>2020-04-19T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:02.514Z</updated>
    
    <content type="html"><![CDATA[<p>これまで Japan IE Support Team Blog にて公開していた記事のうち、プロキシ関連の記事を整理しました。<br>長い記事になってしまうため、下記の 4 つの記事に分けています。</p><p><a href="../LAN-Settings/">ローカル エリア ネットワーク (LAN) の設定について</a><br><a href="../ProxySettings/">IE からみるプロキシの設定について</a><br><a href="../pac/">PAC について</a><br><strong>(今回の記事) WPAD について</strong></p><hr><p>今回は、お問い合わせいただくことが多い「プロキシの自動検出」について紹介します。</p><p>WPAD は、クライアントにプロキシの設定を自動配布するための方法として開発された技術です。</p><p>プロキシの設定はネットワーク管理者が DHCP サーバーや DNS サーバーに対して行います。クライアント (IE) 側では [設定を自動的に検出する] のチェックをオンにするだけで OK です。</p><p>これによりユーザーにプロキシ サーバー設定の手間をかけることなく、管理者がプロキシ サーバー経由の通信を管理できます。</p><p>[設定を自動的に検出する] のチェックがオンであると、IE はネットワーク管理者が DHCP サーバーや DNS サーバーに登録した自動構成スクリプトの宛先を「自動的に検出」して取得します。</p><p>そして、取得した自動構成スクリプトに記載された条件に従ってプロキシを利用します。</p><p>以下の順でスクリプトファイルの格納場所を検出します。</p><p>a. DHCP サーバーへ問い合わせ<br>b. DNS サーバーへ問い合わせ<br>c. NetBIOS 名を用いた問い合わせ</p><p>まず DHCP の “DHCPINFORM” プロトコルを使って自動構成スクリプトの URL を取得しようとします。</p><p>この取得に失敗した場合は、”wpad” というホスト名に対して HTTP 通信で “/wpad.dat” というファイルの取得を試みます。</p><p>wpad.dat というファイル名は固定ですが、ファイルの中身自体は一般的に .pac という拡張子が使われる自動構成スクリプトです。</p><p>ホスト名の解決は、DNS → NetBIOS の順に問合わせを行います。</p><p>DNS サーバーへの問い合わせは、具体的には以下の手順で行います。ここでは例として、クライアントのコンピュータ名が PC01.example.contoso.com とします。</p><p>i. <a href="http://wpad.example.contoso.com/wpad.dat" target="_blank" rel="noopener">http://wpad.example.contoso.com/wpad.dat</a> へ問い合わせを行う<br>ii. <a href="http://wpad.contoso.com/wpad.dat" target="_blank" rel="noopener">http://wpad.contoso.com/wpad.dat</a> へ問い合わせを行う</p><p>※ DHCP サーバーにて DHCPINFORM オプションが定義されていない場合のみ、DNS サーバーへの問い合わせを行います。DHCPINFORM オプションが定義されていた場合は、DNS サーバーへの問い合わせは行いません。</p><p>※ Windows 7 + Internet Explorer 11 の組み合わせでは、i. の問い合わせのみ行い、ii. の問い合わせは行いません。</p><hr><p>(※) NetBIOS 名を用いた問い合わせについて</p><p>中間者攻撃の脅威を低減するために、WPAD に関連した機能の動作変更が以下のセキュリティ更新プログラムにて行われています。</p><p>[MS16-077] WPAD のセキュリティ更新プログラムについて (2016 年 6 月 14 日)<br><a href="https://support.microsoft.com/ja-jp/help/3161949/" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/help/3161949/</a></p><p>セキュリティ更新プログラム適用以前は、WPAD の名前解決に DNS を利用している環境で、DNS の名前解決が失敗した場合でも NetBIOS を名前解決に利用する仕組みでした。 セキュリティ更新プログラム適用後は、更新プログラムで設定されるレジストリによって WPAD の名前解決に NetBIOS を使用しないようになります。 これにより、WPAD の名前解決が NetBIOS にフォールバックした際に、意図せず外部のネットワークへ到達することを制限し、WPAD の脆弱性を低減することを可能としています。</p><p>この動作変更により、WPAD 解決のために NetBIOS のみに依存している場合、失敗することがあります。 WPAD 解決のために NetBIOS の代わりに DHCP オプションまたは DNS を使用することをおすすめしますが、更新プログラム適用後の新しい既定の動作を変更するには、次のレジストリ エントリを作成します。</p><p>キー : HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\WinHttp<br>名前 : AllowOnlyDNSQueryForWPAD<br>種類 : REG_DWORD<br>値   : 0 (既定値 1)</p><hr><p>DHCP および DNS でスクリプト ファイルの場所が特定できない場合、NetBIOS 名を使用し「wpad.dat」ファイルの問い合わせを行います。</p><p>以下の弊社ブログにも情報がありますので、併せてご覧ください。</p><p>Insight WPAD proxy setting on IE<br><a href="https://docs.microsoft.com/en-us/archive/blogs/asiatech/insight-wpad-proxy-settings-on-ie" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/archive/blogs/asiatech/insight-wpad-proxy-settings-on-ie</a></p><p>また、プロキシ サーバーの設定については <a href="../LAN-Settings/">こちらの記事</a> をご覧ください。</p><hr><h2 id="DHCP-サーバーを使う方法"><a href="#DHCP-サーバーを使う方法" class="headerlink" title="DHCP サーバーを使う方法"></a>DHCP サーバーを使う方法</h2><p>DHCP サーバーに対してプロキシ設定の自動配布の設定を行うには、コード番号 252 の新しい種類のオプションを作成し、自動構成スクリプト ファイルの URL を設定します。</p><p>具体的な手順は以下をご覧ください。(ここでは Windows Server 2012 R2 の画面を例としていますが、これ以前のバージョンでも同様です)</p><img src="/blog/internet-explorer-microsoft-edge/wpad/DHCP01.png" class=""><p>上図のように、[IPv4] を右クリックし [既定のオプションの設定] をクリックします。</p><img src="/blog/internet-explorer-microsoft-edge/wpad/DHCP02.png" class=""><p>[既定のオプションと値] ダイアログで、[追加] ボタンをクリックします。</p><img src="/blog/internet-explorer-microsoft-edge/wpad/DHCP03.png" class=""><p>[名前] は、任意の文字列を入力します。<br>[データ型] は、”文字列” を選択します。<br>[コード] は、 252 と入力します。<br>[説明] は、任意の文字列を入力します。</p><p>入力後 [OK] ボタンをクリックします。</p><img src="/blog/internet-explorer-microsoft-edge/wpad/DHCP04.png" class=""><p>[既定のオプションと値] ダイアログに戻りますので、[オプション名] に今追加した コード 252 が選択されていることを確認し、[文字列] の部分に自動構成スクリプト ファイルの URL を入力します。</p><p>[OK] ボタンをクリックします。</p><img src="/blog/internet-explorer-microsoft-edge/wpad/DHCP05.png" class=""><p>[スコープ オプション] を右クリックし、[オプションの構成] をクリックします。</p><img src="/blog/internet-explorer-microsoft-edge/wpad/DHCP06.png" class=""><p>[スコープ オプション] ダイアログで、[全般] タブの [利用可能なオプション] から先ほど追加したコード 252 を選択します。</p><p>[文字列の値] に先ほど設定したものが表示されていることを確認し、[OK] ボタンをクリックします。</p><img src="/blog/internet-explorer-microsoft-edge/wpad/DHCP07.png" class=""><p>オプションに、コード 252 の設定ができたことを確認します。</p><hr><h2 id="DNS-サーバーを使う方法"><a href="#DNS-サーバーを使う方法" class="headerlink" title="DNS サーバーを使う方法"></a>DNS サーバーを使う方法</h2><p>DNS サーバーに対してプロキシ設定の自動配布の設定を行うには、まず、”wpad.dat” というファイル名で Web サーバーのルート ディレクトリに自動構成スクリプト ファイルを格納します。<br>次に、「wpad」という名前の DNS レコード (A レコードまたは CNAME レコード) を登録します。<br>以下に Windows Server 2012 R2 の画面での手順をまとめましたのでご参照ください。</p><img src="/blog/internet-explorer-microsoft-edge/wpad/DNS01.png" class=""><p>[前方参照ゾーン] に A レコードを追加します。</p><img src="/blog/internet-explorer-microsoft-edge/wpad/DNS02.png" class=""><p>[名前] には、”wpad” を入力します。<br>[IP アドレス] は、wpad.dat を配置した Web サーバーの IP アドレスを入力します。(この例では 192.168.1.1 としています)</p><hr><p>Windows Server 2008 から既定で wpad というホスト名の問い合わせを拒否します。</p><p>このため Windows Server 2008 以降で DNS を使用して WPAD を構成する場合は、以下の技術情報を参考にグローバル クエリ禁止リストを更新する必要があります。</p><p>Managing the Global Query Block List<br><a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc794902(v=ws.10)" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc794902(v=ws.10)</a></p><p>Removing WPAD from DNS block list<br><a href="https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc441517(v=technet.10)" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/previous-versions/tn-archive/cc441517(v=technet.10)</a></p><hr><h4 id="Smart-WPAD-について"><a href="#Smart-WPAD-について" class="headerlink" title="Smart WPAD について"></a>Smart WPAD について</h4><p>Windows 7 環境の IE8 以降では、Smart WPAD と呼ばれる機能があります。<br>Windows 7 より前の環境の IE では、WPAD による pac ファイルが『利用できない』ネットワーク環境においても [設定を自動的に検出する] が有効な場合に検出処理を行うため、IE 起動直後の初回のページ表示が遅いという報告が寄せられていました。</p><p>Smart WPAD の機能は処理の高速化のための機能であり、OS のネットワーク識別機能を利用し「WPAD により pac ファイルが取得できなかった環境」では同ネットワーク環境下において 30 日間検出を試みないようにするというものです。</p><p>Smart WPAD は、高速化のために、ネットワーク識別子ごとにかつての WPAD 解決結果を 30 日間保持する機能です。<br>解決結果には取得できなかった場合も含まれるので、”WPAD を使わない” という結果も保持されます。<br>WPAD 解決ができた場合は、解決した URL を保持します。<br>一度 WPAD が使用できないネットワークと判断された場合、そのネットワークに対して 30 日間は WPAD を使用しないように動作します。</p><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。<br>もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;これまで Japan IE Support Team Blog にて公開していた記事のうち、プロキシ関連の記事を整理しました。&lt;br&gt;長い記事になってしまうため、下記の 4 つの記事に分けています。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;../LAN-Settings/&quot;&gt;ローカ
      
    
    </summary>
    
    
    
      <category term="Internet Explorer" scheme="https://jpdsi.github.io/blog/tags/Internet-Explorer/"/>
    
      <category term="プロキシ" scheme="https://jpdsi.github.io/blog/tags/%E3%83%97%E3%83%AD%E3%82%AD%E3%82%B7/"/>
    
      <category term="pac" scheme="https://jpdsi.github.io/blog/tags/pac/"/>
    
      <category term="WPAD" scheme="https://jpdsi.github.io/blog/tags/WPAD/"/>
    
  </entry>
  
  <entry>
    <title>メモリ使用量が増える現象 (メモリリーク)</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/HighMemoryUsage/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/HighMemoryUsage/</id>
    <published>2020-04-16T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:01.912Z</updated>
    
    <content type="html"><![CDATA[<p>今回は Internet Explorer を利用している場合に発生するメモリ使用量が増える現象についてお話しします。<br>なお、本記事に掲載している内容は、Internet Explorer 以外の、例えば Microsoft Edge や Google Chrome、Firefox といったほかのブラウザーでも有効な部分があります。ぜひ参考にしてみてください。</p><p>もともと二回シリーズでの執筆を検討していましたが、記事の移動に合わせて一つの記事にまとめています。<br>Internet Explorer を利用しているときに「あれ？おかしいな…」と思ったら、下記手順に従い確認をしてみてください。</p><hr><p>本記事では、Internet Explorer を利用している場合のメモリ使用量が増える現象について、まずは一般的な知識と、それを切り分ける方法についてまとめました。<br>Internet Explorer 上でのメモリ使用量の増加の現象は、単純な方法での調査が難しく、本記事に記載したような内容をコツコツと時間をかけて確認する必要があり非常にお時間がかかるケースが多いですが、少しでも参考になれば幸いです。</p><p><strong><u>1. メモリ使用量が増えるのはなぜ？</u></strong><br>そもそも Internet Explorer で Web ページを閲覧していると、徐々にメモリ使用量が増えていくのはなぜなのでしょうか。</p><p>この疑問に答えるには、まずブラウザーって何？という点を理解する必要があります。</p><p>ご存じのとおり、Internet Explorer をはじめとする “Web ブラウザー” は Web コンテンツ (html や CSS、JavaScript、画像、動画などなど) を表示 / 動作させるための、いわば「プラットフォーム」です。これは、Windows や Mac などのプラットフォーム (OS) 上で任意のアプリケーションを動作させるのと同じイメージです。ブラウザーというプラットフォーム上で「Web コンテンツ」というアプリケーションを動作させています。</p><p>まず、OS 上で動作するアプリケーションが利用するメモリ使用量が増加する傾向がみられる場合を考えましょう。<br>この場合に考えられるポイントは、「プログラム内で確保したメモリ領域がきちんと解放されていない」ことです。いわゆる、メモリリークです。</p><p>では、Web コンテンツを表示しているブラウザーのメモリ使用量に増加傾向がみられる場合には何が考えられるでしょうか。<br>実は、基本的には通常のアプリケーションでの状況と同様に、ブラウザーというプラットフォーム上で動作する Web コンテンツの作りに強く依存していることが多く、Web コンテンツ自体の構成やその中で行われている処理が影響してメモリ使用量が増加している可能性があります。</p><p>また、Internet Explorer の場合には、ActiveX コントロールやブラウザー ヘルパー オブジェクト (BHO)、ツール バーといったアドオンを利用することができますが、これらの中で上記に記載したような「プログラム内で確保したメモリ領域がきちんと解放されていない」現象が発生しており、これらが影響してメモリ使用量が増加している可能性もあります。これらのアドオンは、C や C++ などのネイティブ言語で作成される場合が多く、通常のアプリケーションと同様に、プログラム内で独自に、自由に、メモリ領域を確保することができます。<br>さらに、何らかのソフトウェアが、Internet Explorer で行われている処理を外部から参照して (場合によってはフック (本来の処理を迂回させてオレオレな処理を実行する手法) して) いることなどが影響している可能性も考えられる一つのポイントです。</p><p><strong><u>2. メモリが枯渇すると何が起きる？</u></strong><br>では、メモリ使用量が増えていくと何かが起きるのでしょうか。</p><p>端的には「メモリの枯渇」という状態に内部的に陥ります。</p><p>Internet Explorer の場合、既定の状態では OS が 64bit 環境だとしても、コンテンツを表示するプロセス (タブ プロセスもしくはコンテンツ プロセス) は 32bit プロセスとして動作します。（参考 : <a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/process-model/">Internet Explorer のプロセス モデル</a>）</p><p>Windows OS の仕組み上、32bit プロセスでアプリケーションが自由に利用できるメモリ領域の上限は理論値として 2GB です。<br>アプリケーションは、この 2 GB のメモリ アドレス空間内で、必要なサイズのメモリ ブロックを確保します。<br>このメモリ ブロックの確保と解放を繰り返していると、使用済みの領域と空き領域が細かなサイズで混在し、合計では十分な空き領域があっても、まとまった大きなサイズのブロックを確保できない状態 (断片化) に陥ります。<br>なお、この動作は、端末上に搭載されている物理メモリ量に関係なく、また、タスク マネージャー上で確認のできるメモリの空き容量とも関係はありません。あくまでも、単一のプロセスで利用することのできるメモリ領域が対象となります。</p><p>Internet Explorer では、Web コンテンツを表示する際に内部的にメモリ領域を確保する必要がありますが、上記のように断片化が進んだ状態となっているとメモリ領域の確保に失敗する場合があり、この結果 Web コンテンツを正しく表示できない (表示が崩れる)、そもそも真っ白で何も表示されない、クラッシュしてしまう、などの影響が生じます。<br>このような問題が発生した場合には、タスク マネージャーなどで Internet Explorer のプロセス (iexplore.exe) の状態を確認し、メモリ使用量が 1GB – 1.5GB 以上使用している状態であれば、メモリ枯渇が原因である可能性が高いと判断ができます。</p><p>なお、64bit OS 環境下で、<a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/protected-mode/">拡張保護モードが 64 bit で動作するよう構成している場合</a> には 64bit でプロセスが動作するため、上述したような 2GB という制限はありません。理論値としては 8TB (テラ バイト) です。</p><p>参考: 仮想アドレス領域<br><a href="https://msdn.microsoft.com/ja-jp/library/windows/hardware/hh439648(v=vs.85).aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/ja-jp/library/windows/hardware/hh439648(v=vs.85).aspx</a></p><hr><p>参考 : VMMap - プロセス の仮想メモリと物理メモリの割り当て状況をグラフィカルに表示してくれるツール　-</p><p>Windows Sysinternals ツールの 1 つに、プロセスの仮想メモリと物理メモリの割り当て状況をグラフィカルに表示してくれるツールとして VMMap というものがありますので紹介します。</p><p><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/vmmap" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/sysinternals/downloads/vmmap</a></p><p>vmmmap.exe を起動し、確認したいプロセスを選びます。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/14_vmmap1.png" class=""><p>このようにメモリの使用状況について詳細を把握することができます。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/15_vmmap2.png" class=""><p>メニューの View - Fragmentation View を選択します。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/16_vmmap3.png" class=""><p>以下のようにメモリの割り当て状況をグラフィカルに表示してくれますので、未使用を示す “白色の領域” が充分にあるかどうか確認ができます。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/17_vmmap4.png" class=""><p>このツールを使えば、上述の断片化状態かどうかも視覚的に把握することができますので、ぜひご利用ください。</p><hr><p><strong><font color="red">重要 : メモリ使用量の見方について</font></strong></p><p>プロセスで実際にメモリ不足の問題が発生するかどうかは、「ワーキング セット」ではなく、「コミット サイズ」に着目することが重要です。<br>「ワーキング セット」とは、プロセスが利用しているメモリ領域のうち「物理メモリ上に展開されている部分」を指すものであり、「プロセスが使用しているメモリ全体のサイズ」はわかりません。<br>「プロセスが使用しているメモリ全体のサイズ」を示しているのは「コミット サイズ」です。</p><p>実際の例をみてみましょう。<br>タスク マネージャーでは既定では「メモリ (アクティブなプライベート ワーキング セット)」という項目が表示されています。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/1_taskmgr1.png" class=""><p>ここで問題です。このふたつのプログラムのうち、どちらがメモリを多く使用しているでしょうか？</p><p>上述のことを思い出してください。「コミット サイズ」を見なければ答えられません。<br>それではタスク マネージャーの表示項目にコミット サイズを追加してみましょう。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/2_taskmgr2.png" class=""><p>結果はこの通りです。片方はコミット サイズが 800MB ほどなのに対して、もう片方は 1MB ほどであることがわかります。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/3_taskmgr3.png" class=""><p>「プロセスが使用しているメモリ全体のサイズ」を示しているのは「コミット サイズ」なので、「PID:17652 の方が多くのメモリを使用している」が答えになります。</p><hr><p><strong><u>3. メモリリークなのか？</u></strong><br>タスク マネージャーなどで、メモリの使用量が多いことがわかったとしても、メモリリークが発生しているとは一概には言えません。<br>右肩上がりにメモリ使用量が増えるのか、ある一定の使用量を上限に横ばいとなるのか確認しましょう。<br>ある一定の使用量を上限に横ばいとなる場合には、Web コンテンツ上の構成が非常に大量のメモリを必要とするものの、コンテンツとしても、Internet Explorer の動作としても問題ない動作であると判断ができます。</p><p>Internet Explorer では、Web コンテンツを表示 / 動作させるためにメモリ領域を確保する動作となるため、一定量増えることは Web コンテンツを表示 / 動作させるうえでの想定動作となります。ページ遷移などに伴い、不要となったメモリ領域については “ガベージ コレクション” という仕組みの下で一定時間後に自動的に解放される動作となります。</p><p>ここで一つ例を挙げます。<br>ある Web アプリケーションで使い始めは以下のように 130 MB ほどのメモリが使用されていました。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/4_taskmgr4.png" class=""><p>アプリケーションを操作していると、いつのまにか 1GB 近くまでメモリ使用量が増えてしまいました。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/5_taskmgr5.png" class=""><p>もう少し操作をしていると、ブラウザーが応答しなくなり、数秒後に以下の通知バーが表示されました。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/6_notificationbar.png" class=""><p>何が起きたのでしょう？イベント ログをみてみると、iexplore.exe がクラッシュ (異常終了) してしまったことがわかります。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/7_eventlog.png" class=""><p>※ この例では例外コード 0x8007000e (E_OUTOFMEMORY) というメモリ不足を示すものでしたが、別の例外コードが記録されることもあります。</p><p>これはメモリリークが起きたことで、メモリ不足に陥ってクラッシュしてしまったのでしょうか？<br>もちろんそういう場合もありますが、この例では、多少はメモリリークしている状況ではあったものの、それが一番の理由ではありませんでした。<br>どのようにしてみていけばよいのでしょうか？</p><p>ポイントは繰り返しになりますが「右肩上がりにメモリ使用量が増えるのか、ある一定の使用量を上限に横ばいとなるのか」です。<br>先ほどは 32bit プロセスではメモリ不足の状態に陥ってしまいましたが、<a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/process-model/">IE のプロセスを 64bit で動作させて</a> 同じ Web アプリケーションでメモリ使用量の上がり具合をみていきます。</p><p>初めは 170MB くらいです。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/8_taskmgr6.png" class=""><p>しばらく操作をしていると 1.3GB ほどまで増えました。<br>32bit プロセスであれば、表示が崩れたり、クラッシュしてしまうなどの異常がいつ発生してもおかしくない状況です。<br>今回は 64bit プロセスなので問題なく動作しつづけます。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/9_taskmgr7.png" class=""><p>さらに操作をすると一時的に 2GB ほどまで上昇することがありました。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/10_taskmgr8.png" class=""><p>しかし、その直後に以下のように 1.5GB ほどまで下がり、このあとは、操作を繰り返しても、1.5 GB ～ 2 GB あたりを行き来するようになりました。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/11_taskmgr9.png" class=""><p>つまり、「右肩上がりにメモリ使用量が増える」状況ではないことが明らかになりました。</p><p>ここでのポイントは、いったんは上昇したメモリ使用量が下がった、つまり、不要となったメモリ領域を解放する “ガベージ コレクション” が実行されたことです。<br>もし、ガベージ コレクションで解放されないような参照状態をもつオブジェクトが存在した場合には、そのオブジェクトに紐づくメモリ領域は解放できないまま残り続けますので、メモリ使用量は右肩上がりになります。<br>今回は、ガベージ コレクションが有効に働き、ある一定の使用量を上限に横ばいとなりました。<br>つまり、Web アプリケーションの構造上非常に大量のメモリを必要とするものの、コンテンツとしても、Internet Explorer の動作としても問題ない動作であると言えます。</p><hr><p>参考 : ガベージ コレクションについて<br>Internet Explorer の JavaScript のガベージ コレクションの動作は非常に保守的であり、積極的にオブジェクトを回収する動きにはならないことが挙げられます。<br>たとえば、32bit プロセスの Internet Explorer が 800 MB ほどメモリを使用している状況で、ある処理を実行するために一時的に 300 MB ほどの大きなメモリ領域が必要になる場合を考えてみます。<br>このとき、上述の Internet Explorer のガベージ コレクションの性質上、事前にガベージ コレクションを実行して可能な限り不要なメモリ領域を解放してから、新たなメモリ領域を確保するような動作とはなりませんので、大きなサイズのメモリ確保が必要なときに、メモリの断片化が進んだ状態だと、まとまったメモリの確保が行えず、処理に失敗してしまいます。<br>その結果、描画の処理が適切に実行できなかったり、致命的なエラーでアプリケーションがクラッシュしたりします。</p><p>なお、基本的にはページの遷移 (再読み込み、ナビゲート) によって、ページに紐づくオブジェクトはガベージ コレクションの対象となり解放されます。<br>一方で、ページ遷移をせずに、スクリプトにより画面の一部や全体を動的に書き換える動作を繰り返す SPA (Single Page Application) では、メモリの確保と破棄が頻繁に行われ、再利用され得るオブジェクトがメモリに残存しやすいことも影響し、プロセスを長時間動作させていると、プロセス内の空きメモリが断片化する状況が発生します。</p><p>即時的な解決方法としては、起動中の Internet Explorer をすべて終了し再起動しなおすこと、になりますが、本格的に調査を進める場合には、後述の点を少しずつ切り分けていく必要があります。</p><p>なお、SPA のようにリッチな UI をもつモダンな Web アプリケーションは、Internet Explorer では快適な動作が難しいケースも多くみられますので、コンテンツにみあったブラウザー (Microsoft Edge などのモダン ブラウザー) で閲覧することをおすすめします。</p><hr><p><strong><u>4. どうやって切り分けができるか？</u></strong></p><p>このような状況となる原因を特定するために、何を確認すれば良いでしょうか。<br>私たちサポート チームにお問い合わせをいただいた際には、お客様に対してまずは以下の点の確認を依頼させていただくことが多いです。</p><p>お問い合わせをご検討される際には、下記の確認結果や作成いただいたサンプル プログラムとともに弊社までご連絡いただけるとスムーズに調査を開始することができます。なお、お問い合わせの際には「プレミア サポート」をご利用いただいたほうが詳細なデバッグ調査を含めた本格的な支援をさせていただくことが可能です。</p><p>•    メモリの増え方を確認する<br>•    ドキュメント モードを変更してみる<br>•    環境ごとに差異がないか確認する<br>•    最新の更新プログラムを適用する<br>•    アドオン無効を試す<br>•    サードパーティー製ソフトウェアをアンインストールする<br>•    クリーンな環境で試す<br>•    コンテンツを切り分ける</p><p>一つずつ見ていきましょう。</p><p><strong><u>メモリの増え方を確認する</u></strong><br>先ほど説明したように、まずは、右肩上がりにメモリ使用量が増えるのか、ある一定の使用量を上限に横ばいとなるのか確認しましょう。<br>ある一定の使用量を上限に横ばいとなる場合には、Web コンテンツ上の構成が非常に大量のメモリを必要とするものの、コンテンツとしても、Internet Explorer の動作としても問題ない動作であると判断ができます。<br>右肩上がりにメモリ使用量が増え続けるようであれば、その原因調査を進めるために、以下を確認していきましょう。</p><p><strong><u>ドキュメント モードを変更してみる</u></strong><br>Internet Explorer には過去のバージョンとの互換性を維持するために「ドキュメント モード」という機能が搭載されています。<br>この「ドキュメント モード」を変更することで現象に差異が生じるかどうか確認しましょう。</p><p>ドキュメント モードの変更には下記のいずれかが利用できます。<br>なお、&lt;meta&gt; による定義を行う場合には、現象に関連するすべての html ファイルに含める必要があるため、検証目的の場合には HTTP 応答ヘッダーに含める方が容易かと思います。</p><p>&lt;meta&gt; による定義 : 以下の定義を &lt;head&gt; 要素の先頭に追記します<br><code>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=xxx&quot; /&gt;</code></p><p>HTTP 応答ヘッダーによる定義 : 以下のヘッダーを HTTP 応答ヘッダーに含めるようにします<br>X-UA-Compatible: IE=xxx</p><p>※ IE=xxx の “xxx” 部分には 11/10/9/8/7/5 のいずれかを設定します</p><p><strong><u>環境ごとに差異がないか確認する</u></strong><br>一部の環境だけで発生するのか、すべての環境で発生するのか確認しましょう。<br>また、異なる OS 上の同一バージョンの Internet Explorer を利用した場合に動作に差異が出ないか確認しましょう。</p><p>一部の環境でのみ発生する現象の場合、当該の環境にのみインストールされている何らかのアドオンやソフトウェアの影響が推測されます。次項以降のアドオンの無効やサードパーティー製のソフトウェアのアンインストールなどを試してみましょう。</p><p><strong><u>最新の更新プログラムを適用する</u></strong><br>残念ながら、製品自体の動作が起因してメモリ使用量が増える場合もあります。<br>毎月公開されている Internet Explorer や Microsoft Edge 向けの更新プログラムを提供することで現象に差異が生じるかどうか確認しましょう。</p><p>なお、Windows 7 / 8.1 の環境では、Internet Explorer 向けの更新プログラムが個別に提供されていますが、Windows 10 においては Internet Explorer / Microsoft Edge ともに OS の更新プログラム (ロールアップ) に含まれています。</p><p><strong><u>アドオン無効を試す</u></strong><br>Web コンテンツ上で ActiveX コントロールを利用している場合にはその使用をやめてみる、BHO やツール バーなどが導入されている場合にはそれらのアドオンをアンインストールしてみる、ことにより現象が改善するかどうか確認しましょう。</p><p>アドオン無効により劇的に状況が改善する場合には、アドオンの動作が影響していると判断することができます。<br>この状況の場合には、アドオン内の処理において問題となる点がないかどうか確認してください。また、サードパーティー製のアドオンである場合には、開発元にお問い合わせしてみてください。</p><p>なお、下記の方法で一時的なアドオンの無効化を試すことも可能です。</p><p>方法 1)<br>Windows キー + R キーで起動する “ファイル名を指定して実行” で、下記を実行することでアドオン無効モードで Internet Explorer を起動することができます。</p><p>iexplore.exe -extoff</p><p>このような画面で Internet Explorer が起動します。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/12_extoff.png" class=""><p>方法 2)<br>Internet Explorer を起動し、[ツール] メニューの [アドオンの管理] 画面で、個別にアドオンを無効にすることができます。</p><img src="/blog/internet-explorer-microsoft-edge/HighMemoryUsage/13_addon.png" class=""><p>左ペインで [ツール バーと拡張機能] を選択し、”表示” 欄で [すべてのアドオン] を選択します。<br>その後、右ペインで無効にしたいアドオンを選択し、画面右下に表示されている [無効にする] ボタンをクリックすることでアドオンを無効とすることができます。<br>無効にした後、Internet Explorer を再起動します。</p><p><strong><u>サードパーティー製ソフトウェアをアンインストールする</u></strong><br>Windows OS 上に、サードパーティー製のソフトウェアが導入されている場合、製品を一つずつアンインストールしていき、いずれかのソフトウェアの動作が影響していないかどうか確認しましょう。</p><p>なお、一部のソフトウェアでは、ソフトウェアが動作しないように “無効” とする設定がありますが、当該ソフトウェアが動作していない状態でも Internet Explorer が起動する際に自動的に読み込まれてしまうような DLL もあるため、可能な限りアンインストールを試してください。</p><p>サードパーティー製のソフトウェアをアンインストールして改善する場合には、当該のソフトウェアの動作が影響していると判断することができます。<br>この状況の場合には、ソフトウェアの開発元にお問い合わせしてみてください。</p><p><strong><u>クリーンな環境で試す</u></strong><br>アドオンやサードパーティー製のソフトウェアが多数あり、アンインストールでの切り分けが難しい場合、クリーンな環境を用意して試してみる、という方法もあります。</p><p>ここでいう「クリーンな環境」とは、Windows OS のインストール ディスクを利用して OS をインストールしただけの状態、もしくはその状態で Windows Update のみを実行した状態、です。<br>上述しているような、アドオンやサードパーティー製のソフトウェアが一切インストールされていない環境です。</p><p>クリーンな環境では現象が発生しない場合には、問題の発生する環境に導入しているアドオンやソフトウェアを一つずつインストールしていき、現象の変化ポイントを特定してください。</p><p>なお、有効期限付きですが、下記のサイトより Hyper-V や VMWare などの仮想環境上で利用可能な仮想 PC をダウンロードすることができます。<br>クリーンな環境のご用意が難しい場合には是非有効活用ください。</p><p>Download virtual machines<br><a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/" target="_blank" rel="noopener">https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/</a></p><p><strong><u>コンテンツを切り分ける</u></strong><br>問題の発生する Web コンテンツの編集が可能である場合、現象の再現に必要な部分のみを抽出することができないか確認してください。<br>具体的には、現象の再現に必要のない下記のような要素を少しずつ削除する作業を繰り返します。</p><p>a) html ドキュメント内のタグを減らす<br>b) 画像や動画、音声ファイルを削除する<br>c) スタイルを外す (外部ファイルとしているスタイルシート、およびコンテンツ内で直接指定しているスタイル)<br>d) スクリプトを外す (外部ファイルとしている JavaScript や VBScript、およびコンテンツ内に直接記載しているスクリプト)</p><p>特に jQuery などのライブラリを利用している場合、当該ライブラリを読み込むだけでメモリ使用量が増加するため (ライブラリ内の処理が非常に複雑であることに起因します)、ライブラリを利用しない構成でも再現するかどうかご確認ください。</p><p>問題の発生ポイントが特定できた場合、どのようにコンテンツを改修するのかという調査を進めることになります。</p><p>こちらも併せてご確認ください。</p><p>今日からできる！再現サンプルを作成しよう！<br><a href="https://social.msdn.microsoft.com/Forums/ja-JP/d8f42bcc-ac3a-4978-ab19-10b0ea118067?forum=edgeiesupportteamja" target="_blank" rel="noopener">https://social.msdn.microsoft.com/Forums/ja-JP/d8f42bcc-ac3a-4978-ab19-10b0ea118067?forum=edgeiesupportteamja</a></p><p>少しでも問題解決のお役に立ちましたら幸いです。</p><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。<br>もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今回は Internet Explorer を利用している場合に発生するメモリ使用量が増える現象についてお話しします。&lt;br&gt;なお、本記事に掲載している内容は、Internet Explorer 以外の、例えば Microsoft Edge や Google Chrome、
      
    
    </summary>
    
    
    
      <category term="Internet Explorer" scheme="https://jpdsi.github.io/blog/tags/Internet-Explorer/"/>
    
      <category term="メモリ" scheme="https://jpdsi.github.io/blog/tags/%E3%83%A1%E3%83%A2%E3%83%AA/"/>
    
  </entry>
  
  <entry>
    <title>構成エディターの使用方法について</title>
    <link href="https://jpdsi.github.io/blog/web-apps/ConfigurationEditor/"/>
    <id>https://jpdsi.github.io/blog/web-apps/ConfigurationEditor/</id>
    <published>2020-04-09T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:02.666Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。</p><p>IIS サポート チームです！</p><p>[構成エディター] を使用することで、IIS マネージャー上の設定を変更する<br>コマンドレット（PowerShell）やコマンドを生成することが出来ます。</p><img src="/blog/web-apps/ConfigurationEditor/pic1.png" class=""><p>この [構成エディター] は、弊社の公開情報でも設定手順が紹介されておりますが、<br>実情として、日本語で丁寧に書かれた情報はございません。</p><p>　Editing Collections with Configuration Editor<br>　<a href="https://docs.microsoft.com/en-us/iis/manage/managing-your-configuration-settings/editing-collections-with-configuration-editor" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/iis/manage/managing-your-configuration-settings/editing-collections-with-configuration-editor</a></p><p>　Configuration Editor<br>　<a href="https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/hh831362(v=ws.11)" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/hh831362(v=ws.11)</a></p><p>そこで、可能な限り、丁寧に [構成エディター] を使用してコマンドレットや<br>コマンドを生成する方法を以下にてご案内いたします。<br>なお、[構成エディター] 上にある全ての UI の説明は割愛させていただき、<br>以下では最小限の手順となります。</p><h2 id="1-前提と周辺情報"><a href="#1-前提と周辺情報" class="headerlink" title=" 1. 前提と周辺情報 "></a><u> 1. 前提と周辺情報 </U></h2><p>まず、IIS マネージャー上で、以下の設定を変更するコマンドレットや<br>コマンドを生成したいという要望があると仮定します。</p><p>“Default Web Site”<br>　- [ログ記録]<br>　　　- 右ペインの [有効にする], または [無効にする]</p><img src="/blog/web-apps/ConfigurationEditor/pic2.png" class=""><img src="/blog/web-apps/ConfigurationEditor/pic3.png" class=""><p>その場合、まず上記の設定を [構成エディター] 上で探すことが必要となります。<br>[構成エディター] 上では、IIS マネージャー上の設定は “セクション” と<br>呼ばれる箇所においてツリー状で存在しています。</p><img src="/blog/web-apps/ConfigurationEditor/pic4.png" class=""><p>※ “セクション” は以下にある applicationHots.config ファイル内の要素に該当しています</p><p>　　%SystemRoot%\system32\inetsrv\config</p><p>　　故に、設定を変更したい項目を変更して、applicationHost.config 内のどの要素が<br>　　変更されたのかを確認（比較）することでも、当該設定が “セクション” 内の<br>　　いずれにあるかを探すことが出来ます</p><p>“セクション” 内のどの箇所に当該設定があるかを把握するためには、<br>以下のサイトにアクセスして検索することが可能です。</p><p>　Configuration Reference <configuration><br>　<a href="https://docs.microsoft.com/en-us/iis/configuration/" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/iis/configuration/</a></p><p>上記サイト左側にある configuration, administrators 等という項目が、<br>“セクション” に該当しています。</p><p>さて、この中から該当の設定を探すことになりますが、その場合に最も簡単な<br>方法といたしましては、[Filter by title] に関連するキーワードを入力する方法です。</p><p>それでは以下に、上記サイトにアクセスした後、コマンドレット、またはコマンドを<br>作成するまでの手順を記載いたします。</p><h2 id="2-手順"><a href="#2-手順" class="headerlink" title=" 2. 手順 "></a><u> 2. 手順 </U></h2><ol><li>英語での検索になりますが、[ログ記録] に関連するキーワードとして “log” で検索します</li></ol><img src="/blog/web-apps/ConfigurationEditor/pic5.png" class=""><p>　　複数の候補が選択されている場合には、それぞれをクリックしていただくことで、<br>　　設定に関する公開情報にアクセスすることが出来ます<br>　　今回の設定に該当する公開情報は以下の URL となります</p><p>　　 Log Files for a Web Site <logFile><br>　　 <a href="https://docs.microsoft.com/en-us/iis/configuration/system.applicationhost/sites/site/logfile/" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/iis/configuration/system.applicationhost/sites/site/logfile/</a><br>　<br>　　 ※URL 内に、[ログ記録] を [有効にする], または [無効する] に指定できる記載を確認できます<br>　　 ※URL から、当該設定は以下に存在することが分かります</p><p>　　(1)system.applicationhost – (2)sites – (3)site – (4)logfile</p><p>　　 この場所が、上述した “セクション” に該当するとお考えください</p><ol start="2"><li>IIS マネージャーを起動後、左ペインから Web サーバーを選択して、<br>[構成エディター] を開き、セクションから system.applicationHost – sites を選択します</li></ol><img src="/blog/web-apps/ConfigurationEditor/pic6.png" class=""><ol start="3"><li>[コレクション], [Count=1] と表示されている右端の […] をクリックして、<br>「コレクション エディター」を起動します</li></ol><img src="/blog/web-apps/ConfigurationEditor/pic7.png" class=""><ol start="4"><li>[項目:] 欄にて、“name” が “Default Web Site” である行（これが (3)site）を選択して、<br>[プロパティ: ] 欄にて、”logFile”（これが (4)logfile）を展開します</li></ol><img src="/blog/web-apps/ConfigurationEditor/pic8.png" class=""><p>5) “enabled” の値（既定では “True”）をクリックして指定したい値に変更します</p><p>　　 True: [有効にする]<br>　　 False: [無効にする]</p><p>6) 「コレクション エディター」を閉じることで、右ペインの [スクリプトの生成] が<br>　  活性化されますので [スクリプトの生成] をクリックします</p><img src="/blog/web-apps/ConfigurationEditor/pic9.png" class=""><p>7) 「スクリプト ダイアログ」から、生成したいコマンドのタブを選択します</p><p> 　　 コマンドレット: ”PowerShell” タブ<br> 　　 コマンド: ”コマンド ライン（AppCmd）” タブ</p><img src="/blog/web-apps/ConfigurationEditor/pic10.png" class=""><p>8) 例えばコマンド ラインの場合には、以下の様に AppCmd が出力されます</p><blockquote><p>　appcmd.exe set config  -section:system.applicationHost/sites /“[name=’Default Web Site’].logFile.enabled:”False””  /commit:apphost<br>　appcmd.exe set config  -section:system.applicationHost/sites /“[name=’Default Web Site’].logFile.enabled:”True””  /commit:apphost<br>　　※ AppCmd はカレント ディレクトリを C:\Windows\System32\inetsrv に移動して実行してください</p></blockquote><p>9) コマンドレット、コマンドのいずれの場合でも、管理者権限にて起動した PowerShell や<br>　  コマンド プロンプト上で実行して、以下の設定が変更されるかを確認します</p><p>　　 “Default Web Site”<br>　　　 - [ログ記録]<br>　　　　　 - 右ペインの [有効にする], または [無効にする]</p><p>　なお、上記の appcmd コマンドを実行した後、applicationHost.config ファイル内では<br>　以下の要素が書き換わっていることを確認することが出来ます</p><h5 id="AppCmd-実行後の-applicationHost-config-内でのイメージ（上-有効にする-下-無効にする-）"><a href="#AppCmd-実行後の-applicationHost-config-内でのイメージ（上-有効にする-下-無効にする-）" class="headerlink" title="AppCmd 実行後の applicationHost.config 内でのイメージ（上: [有効にする], 下: [無効にする]）"></a>AppCmd 実行後の applicationHost.config 内でのイメージ（上: [有効にする], 下: [無効にする]）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;logFile logTargetW3C&#x3D;&quot;File&quot; directory&#x3D;&quot;%SystemDrive%\inetpub\logs\LogFiles&quot; enabled&#x3D;&quot;true&quot; &#x2F;&gt;</span><br><span class="line">&lt;logFile logTargetW3C&#x3D;&quot;File&quot; directory&#x3D;&quot;%SystemDrive%\inetpub\logs\LogFiles&quot; enabled&#x3D;&quot;false&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>10) [適用] をクリックすると変更した値が反映されてしまうため、コマンドの<br>　   生成と取得のみを行いたい場合には、[キャンセル] をクリックする、または<br>　  IIS マネージャーにおいて他の画面に遷移した際に、以下のダイアログが<br> 　  出力されますので、[いいえ] をクリックすることで設定の反映を防げます</p><img src="/blog/web-apps/ConfigurationEditor/pic11.png" class=""><p>今回は以上です。 それでは、また次回！</p><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。 もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは。&lt;/p&gt;
&lt;p&gt;IIS サポート チームです！&lt;/p&gt;
&lt;p&gt;[構成エディター] を使用することで、IIS マネージャー上の設定を変更する&lt;br&gt;コマンドレット（PowerShell）やコマンドを生成することが出来ます。&lt;/p&gt;
&lt;img src=&quot;/blog/
      
    
    </summary>
    
    
    
      <category term="Internet Information Services" scheme="https://jpdsi.github.io/blog/tags/Internet-Information-Services/"/>
    
      <category term="Configuration Editor" scheme="https://jpdsi.github.io/blog/tags/Configuration-Editor/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft Edge を利用して Skype 会議を開催しよう</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/SkypeMeetingWithEdge/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/SkypeMeetingWithEdge/</id>
    <published>2020-04-08T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:02.476Z</updated>
    
    <content type="html"><![CDATA[<p>新型コロナウィルス対応の影響で直接の接触を可能な限り避けることが推奨されています。</p><p>お仕事、地域の活動、お友達との集まりをオンラインで実施する方法をご検討されていらっしゃる場合、Skype の “今すぐ会議” (Meet Now) をご利用いただけるかと思います。<br>以下のような手順で Skype のアカウントは不要で、ブラウザーのみで無料のオンライン会議を開催できます。</p><p><u><strong>事前準備</strong></u></p><p>サポートされているブラウザーは Microsoft Edge もしくは Google Chrome です。<br>最新の Microsoft Edge は以下のサイトからダウンロードできます。Windows 8.1 など以前の OS にも対応していますのでご利用のプラットフォームに合わせダウンロードしてインストールしておきます。</p><p>新しい Microsoft Edge をダウンロード<br><a href="https://www.microsoft.com/ja-jp/edge" target="_blank" rel="noopener">https://www.microsoft.com/ja-jp/edge</a></p><p>会議の参加者の方にも Microsoft Edge もしくは Google Chrome のインストールを事前に頂けるようお知らせください。<br>新しい Microsoft Edge には、日々のブラウジングをより快適にする、便利で安全な機能が多数あります。<br>以下のブログ記事でもその魅力を紹介しているので、いまこの機会に生まれ変わった Microsoft Edge をお試しください！</p><p>新しい Microsoft Edge に移行すべき 10 の理由<br><a href="https://blogs.windows.com/japan/2020/04/09/the-top-10-reasons-to-switch-to-the-new-microsoft-edge/" target="_blank" rel="noopener">https://blogs.windows.com/japan/2020/04/09/the-top-10-reasons-to-switch-to-the-new-microsoft-edge/</a></p><p><u><strong>会議の開催</strong></u></p><p>以下の URL にアクセスし “無料の会議を作成” をクリックします。</p><p><a href="https://www.skype.com/ja/free-conference-call/" target="_blank" rel="noopener">https://www.skype.com/ja/free-conference-call/</a></p><img src="/blog/internet-explorer-microsoft-edge/SkypeMeetingWithEdge/1_CreateMeeting.jpg" class=""><p>会議のリンクを作成中という表示の後、会議が作成されます。</p><img src="/blog/internet-explorer-microsoft-edge/SkypeMeetingWithEdge/2_CreateingMeeting.jpg" class=""><img src="/blog/internet-explorer-microsoft-edge/SkypeMeetingWithEdge/3_MeetingCreated.jpg" class=""><p>“招待を共有” をクリックすると、オンライン会議の招待用の URL を取得する方法を選べます。<br>今回は “リンクのコピー” をクリックします。</p><img src="/blog/internet-explorer-microsoft-edge/SkypeMeetingWithEdge/4_ShareMeeting.jpg" class=""><p>コピーしたリンクをメールなどに張り付け会議に招待します。</p><img src="/blog/internet-explorer-microsoft-edge/SkypeMeetingWithEdge/5_ShareMeetingviaemail.jpg" class=""><p><u><strong>会議の参加</strong></u><br>会議の開催時には “通話を開始” をクリックします。<br>ブラウザーを閉じてしまっていた場合、先ほどコピーしたリンクを Microsoft Edge で開きます。<br>招待された方は、開催者から共有された URL を Microsoft Edge で開きます。</p><img src="/blog/internet-explorer-microsoft-edge/SkypeMeetingWithEdge/6_StartMeeting.jpg" class=""><p>URL にアクセスするとご利用の PC の環境によっては以下のような通知が表示される場合があります。<br>今回はブラウザーで会議に参加しますので “キャンセル” をクリックします。</p><img src="/blog/internet-explorer-microsoft-edge/SkypeMeetingWithEdge/7_OpenSkype.jpg" class=""><p>Skypeアカウントなしで参加される場合、表示されたページで “ゲストとして参加” をクリックします。</p><img src="/blog/internet-explorer-microsoft-edge/SkypeMeetingWithEdge/8_JoinAsGuest.jpg" class=""><p>参加者の名前(ゲストアカウントの名前)を入力し、”参加” をクリックします。</p><img src="/blog/internet-explorer-microsoft-edge/SkypeMeetingWithEdge/9_CreateTempAccount.jpg" class=""><p>ブラウザー内にオンライン会議の画面が表示されます。<br>通話を開始するには右上の “通話の開始” をクリックします。</p><img src="/blog/internet-explorer-microsoft-edge/SkypeMeetingWithEdge/10_StartConversation.jpg" class=""><p>初めて利用される場合、画面上部に Skype オンライン会議のページが端末の機能の利用許可が表示されますので “許可” をします。</p><img src="/blog/internet-explorer-microsoft-edge/SkypeMeetingWithEdge/11_Notification.jpg" class=""><img src="/blog/internet-explorer-microsoft-edge/SkypeMeetingWithEdge/12_Audio.jpg" class=""><img src="/blog/internet-explorer-microsoft-edge/SkypeMeetingWithEdge/13_Camera.jpg" class=""><p>通話画面の下部のアイコンで、マイクやカメラの ON/OFF を切り替え通話します。</p><img src="/blog/internet-explorer-microsoft-edge/SkypeMeetingWithEdge/14_SkypeMeeting.jpg" class=""><p>過去 Skype などのビデオ通話やオンライン会議を利用されたことがないという方も対応ブラウザーがあれば会議に参加できます。<br>直接の接触を避けることが推奨されるなか、このようなツールをコミュニケーションの機会にご利用頂くのはいかがでしょうか。</p><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。<br>もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;新型コロナウィルス対応の影響で直接の接触を可能な限り避けることが推奨されています。&lt;/p&gt;
&lt;p&gt;お仕事、地域の活動、お友達との集まりをオンラインで実施する方法をご検討されていらっしゃる場合、Skype の “今すぐ会議” (Meet Now) をご利用いただけるかと思いま
      
    
    </summary>
    
    
    
      <category term="Microsoft Edge" scheme="https://jpdsi.github.io/blog/tags/Microsoft-Edge/"/>
    
      <category term="Chromium" scheme="https://jpdsi.github.io/blog/tags/Chromium/"/>
    
      <category term="Skype" scheme="https://jpdsi.github.io/blog/tags/Skype/"/>
    
  </entry>
  
  <entry>
    <title>保護モードをまたいだ Cookie について</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/cross-protected-mode-cookie/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/cross-protected-mode-cookie/</id>
    <published>2020-03-26T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:01.664Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。<br>本日は、最近お問い合わせをいただくことの多い気のする、何かと話題の Cookie についてのお話です。<br>とはいっても、SameSite の話ではないです。<br>Internet Explorer をご利用の際に良く陥りがちな問題についてお話しします。</p><h2 id="Cookie-が送信されない！"><a href="#Cookie-が送信されない！" class="headerlink" title="Cookie が送信されない！"></a>Cookie が送信されない！</h2><p>単一のドメイン、ホストのみで遷移するような仕組みの Web サイトでは問題となることはないですが、最近の Web サイトでは複数のサービスと連携をとるような複雑な構成をしていることが多くなってきました。<br>このように、異なるドメイン、ホスト間を行き来するような仕組みの Web サイトの場合、まれに Cookie が送信されない！という事象に出くわすことがあります。</p><p>これによって、例えば「認証したはずなのに最初のページに戻っちゃう」や「Cookie に情報を保存したはずなのに保存されていない」といった事象が発生する場合があります。<br>しかも、、、Microsoft Edge や Google Chrome では問題ないのに Internet Explorer だけで起きる…という状況となると、いよいよ「なんで？」という状況となります。</p><h2 id="Internet-Explorer-オリジナルの機能の影響"><a href="#Internet-Explorer-オリジナルの機能の影響" class="headerlink" title="Internet Explorer オリジナルの機能の影響"></a>Internet Explorer オリジナルの機能の影響</h2><p>Internet Explorer オリジナルの機能として、「<strong>保護モード</strong>」という機能があります。<br>保護モードの詳細については <a href="../protected-mode/">こちら</a> を参照いただきたいですが、Windows Vista 上の Internet Explorer 7 で初めて搭載された Internet Explorer のセキュリティ機能の一つです。</p><h3 id="どうしてこの機能が-Cookie-の送信に影響するのか"><a href="#どうしてこの機能が-Cookie-の送信に影響するのか" class="headerlink" title="どうしてこの機能が Cookie の送信に影響するのか"></a>どうしてこの機能が Cookie の送信に影響するのか</h3><p>答えは、保護モードの違い による Cookie の取り扱いが影響します。<br>具体的には、保護モードの有効 / 無効による Cookie の保存先の違いが影響します。</p><p>Cookie は下記のいずれかの方法で発行／作成されますが、これら以外にブラウザーが勝手に Cookie を作成することはありません。</p><ul><li>Set-Cookie ヘッダー</li><li>document.cookie プロパティ</li></ul><p>ファイルに保存される形式の Cookie (expires 属性や maxage 属性が指定された Cookie) は、Internet Explorer では保護モードの状態に合わせて インターネット一時ファイル と同様に Cookie も保存先が異なります。</p><ul><li>保護モード無効時 : %USERPROFILE%\AppData\Local\Microsoft\Windows\INetCookies</li><li>保護モード有効時 : %USERPROFILE%\AppData\Local\Microsoft\Windows\INetCookies\Low</li></ul><p>それぞれの Cookie は独立して存在しており、例えば、保護モードが「無効」な時に保存された Cookie は、保護モードが「有効」な時には利用されません。<br>対象の Cookie がどの Web サイトを閲覧したときに発行されて、どの Web サイトで対象の Cookie を利用しようとしているのか、そしてそれぞれの Web サイトの保護モードの状態がどうなっているか、という点がとても重要です。</p><h3 id="Cookie-が送信されない一例"><a href="#Cookie-が送信されない一例" class="headerlink" title="Cookie が送信されない一例"></a>Cookie が送信されない一例</h3><p>例えば、Azure AD (AAD) 認証を必要とする Web アプリケーションを例とした場合のことを考えましょう。</p><p>なお、下記を前提とします。</p><ul><li>login.microsoftonline.com は信頼済みサイト ゾーンに明示的に登録されている</li><li>対象の Web アプリケーションは明示的なゾーン登録をしておらず、インターネット ゾーンと判断される</li><li>インターネット ゾーンは保護モード有効、信頼済みサイト ゾーンは保護モード無効として構成している</li></ul><ol><li>最初に login.microsoftonline.com へ接続し AAD 認証が行われます。</li><li>認証に成功すると認証済みを示す Cookie が AAD から発行されます。<br>login.microsoftonline.com は <strong>信頼済みサイト ゾーン</strong> として認識されるため、発行された Cookie は保護モードが無効な場合の保存先に保存されます。</li><li>Web アプリケーションにリダイレクトされトップ ページが表示されます。<br>Web アプリケーションは、<strong>インターネット ゾーン</strong> として認識されるため、Cookie は保護モードが有効な場合の保存先が参照されます。</li><li>Web アプリケーションのトップ ページでは、処理に必要なトークンを取得するため、バックグラウンドで XMLHttpRequest を使って login.microsoftonline.com へリクエストを送信します。<br>Web アプリケーションは保護モードが有効な状態となっているため、XMLHttpRequest によるリクエストもこの制約を受けます。<br>Cookie の参照先は保護モードが有効な場合の保存先となり、2. で保存した Cookie は参照されず「認証済みを示す Cookie がリクエストに含まれない」動作となります。</li><li>login.microsoftonline.com から、対象ユーザーがログオンしていないとのレスポンスが返されます。</li><li>Web アプリケーションの実装により再度ログインを促す表示が行われます。</li></ol><h2 id="対処策について"><a href="#対処策について" class="headerlink" title="対処策について"></a>対処策について</h2><p>このような状況を避けるにはどうしたらよいでしょうか。</p><p>端的には、関連する Web サイトの <strong>セキュリティ ゾーンを統一する</strong> こと、です。<br>言い換えると、関連するすべての web サイトを、例えば、<strong>信頼済みサイト ゾーン</strong> に明示的に追加します。</p><p>単一のドメイン、ホストのみで運用していた場合には、特定のドメイン、ホストのみを登録すれば良かったのですが、今は様々なサービスと連携して Web サイトが構築されていることが多々あります。</p><p>このため、Web サイト閲覧時にどうも動きがおかしい…といった状況に遭遇した場合には、まずは、保護モードの状態をすべてのセキュリティ ゾーンで統一してみてどうかを確認してみましょう。</p><p>すべてのゾーンで保護モードを有効にすることで事象が改善するようであれば、今回お話しした Cookie の動作が影響している可能性があります。<br>この場合は、保護モードの状態をもとに戻したうえで、上述のとおり、関連する Web サイトをすべて <strong>信頼済みサイト ゾーン</strong> などに明示的に登録して事象が改善するかどうか確認してみましょう。</p><p>今回は以上です。<br>それでは、また次回！</p><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。<br>もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは。&lt;br&gt;本日は、最近お問い合わせをいただくことの多い気のする、何かと話題の Cookie についてのお話です。&lt;br&gt;とはいっても、SameSite の話ではないです。&lt;br&gt;Internet Explorer をご利用の際に良く陥りがちな問題についてお話ししま
      
    
    </summary>
    
    
    
      <category term="Internet Explorer" scheme="https://jpdsi.github.io/blog/tags/Internet-Explorer/"/>
    
      <category term="Cookie" scheme="https://jpdsi.github.io/blog/tags/Cookie/"/>
    
  </entry>
  
  <entry>
    <title>Web App Bot (C#) の応答遅延のログについて</title>
    <link href="https://jpdsi.github.io/blog/azure-bot-service/bot-cs-performance/"/>
    <id>https://jpdsi.github.io/blog/azure-bot-service/bot-cs-performance/</id>
    <published>2020-03-24T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:01.452Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。<br>Azure Bot Service サポートチームです。</p><p>今回は、Web App Bot (Azure Bot Service) と Bot Framework SDK (C#) 利用時の Bot アプリケーションの応答パフォーマンスの遅延系に関する現象の調査に役立つようなログの採取方法をご紹介いたします。</p><hr><h2 id="前提-1-常時接続機能の有効化と-App-Service-Plan-のスケールアップ"><a href="#前提-1-常時接続機能の有効化と-App-Service-Plan-のスケールアップ" class="headerlink" title="前提 1 : 常時接続機能の有効化と App Service Plan のスケールアップ"></a>前提 1 : 常時接続機能の有効化と App Service Plan のスケールアップ</h2><p>なお Web App Bot をご利用で “暫く経ってからアクセスした際にレスポンスが遅いように感じる”<br>といった場合には、まずは以下のブログ記事を参考に、“常時接続” 機能の有効化をご検討下さい。</p><p>参考 : Web App Bot の常時接続について</p><p><a href="https://social.msdn.microsoft.com/Forums/ja-JP/954765bb-66d8-41d5-89be-eccdc7284a2b/web-app-bot-123982412026178255093215412395123881235612390?forum=azurebotsupportteamja" target="_blank" rel="noopener">https://social.msdn.microsoft.com/Forums/ja-JP/954765bb-66d8-41d5-89be-eccdc7284a2b/web-app-bot-123982412026178255093215412395123881235612390?forum=azurebotsupportteamja</a></p><p>また、全体的な Bot アプリのレスポンスの一般的なパフォーマンス向上という観点では<br>App Service Plan のスケールアップも有効かと存じますので、こちらもご検討ください。</p><p>参考 : Azure でのアプリのスケールアップ</p><p><a href="https://docs.microsoft.com/ja-jp/azure/app-service/web-sites-scale" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/app-service/web-sites-scale</a></p><p>なお、下記のように運用環境では Standard 以上の App Service プランを利用頂く事を推奨しております。</p><p>参考 : Azure App Service プランの概要</p><p><a href="https://docs.microsoft.com/ja-jp/azure/app-service/overview-hosting-plans" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/app-service/overview-hosting-plans</a></p><p>今回は上記の常時接続やスケールアップを行っても、特定の処理が遅い場合に<br>有効と考えられる調査ログの採取方法について紹介いたします。</p><p>なお、このログは再現手順が確立されている、もしくは再現頻度が高く、再現が可能な場合に有効です。<br>再現手順が確立できていない場合には、まずは再現を行える条件を切り分けいただくようお願いいたします。</p><br /><hr><h2 id="前提-2-該当の-Web-App-Bot-について"><a href="#前提-2-該当の-Web-App-Bot-について" class="headerlink" title="前提 2 : 該当の Web App Bot について"></a>前提 2 : 該当の Web App Bot について</h2><p>以下の Web App Bot のリソースがあると仮定して手順をご紹介いたします。</p><ul><li>Web App Bot (C# - ASP.NET Core 2.1 / Echo Bot のテンプレートを選択)</li><li>Bot Framework SDK v 4.6.3 を利用 (2020 年 2 月現時点)</li><li>上述した Web App Bot に結び付く Azure App Service の App Service Plan は Standard プラン以上</li><li>上述した Azure App Service の常時接続機能が ON になっている</li></ul><hr><h2 id="具体的な情報採取手順"><a href="#具体的な情報採取手順" class="headerlink" title="具体的な情報採取手順"></a>具体的な情報採取手順</h2><h3 id="A-該当の-Web-App-Bot-のコード変更"><a href="#A-該当の-Web-App-Bot-のコード変更" class="headerlink" title="A. 該当の Web App Bot のコード変更"></a>A. 該当の Web App Bot のコード変更</h3><ol><li>Program.cs を書き換え<br>Program.cs 内の CreateWebHostBuilder を下記のように書き換えます。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public static IWebHostBuilder CreateWebHostBuilder(string[] args) &#x3D;&gt;</span><br><span class="line">            WebHost.CreateDefaultBuilder(args)</span><br><span class="line">                .UseStartup&lt;Startup&gt;()</span><br><span class="line">                .ConfigureLogging(logging &#x3D;&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    logging.AddEventSourceLogger();</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure><ol start="2"><li>appsettings.json にログ設定を追加<br>以下は appsettings.json を新たに新規作成し、以下の内容で保存します。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;Logging&quot;: &#123;</span><br><span class="line">        &quot;LogLevel&quot;: &#123;</span><br><span class="line">            &quot;Default&quot;: &quot;Information&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>App Service Editor や Kudu で編集した場合は変更後に build します。</li></ol><br /><p>[ご参考 : App Service Editor や Kudu でのコード変更後 (C# の場合)]</p><p>以下の通りビルドが必要となりますので、ご注意いただけますと幸いです。</p><p>3-1. Azure Portal 上の該当の Bot リソースを選択</p><p>3-2. 左パネルの [すべての App Service 設定] &gt; [高度なツール] &gt; [移動] で Kudu を開く</p><p>3-3. 上部の [Debug console] の [PowerShell] を選択</p><p>3-4. [site] フォルダをクリック</p><p>3-5. [wwwroot] フォルダをクリック</p><p>3-6.   ./build.cmd を実行</p><p>3-7. 実行結果として エラーがなく Finished successfully. が下部に出力されたことを確認します </p><img src="/blog/azure-bot-service/bot-cs-performance/buildcmd.png" class=""><p>build.cmd の実行イメージ</p><br /><h3 id="B-情報採取と再現確認"><a href="#B-情報採取と再現確認" class="headerlink" title="B. 情報採取と再現確認"></a>B. 情報採取と再現確認</h3><ol><li><p>Azure Portal 上にて、Web App Bot に結び付く Azure App Service のリソースページに移動します。<br>(Azure Portal 上の該当の Web App Bot &gt; [すべての App Service 設定] にて結び付く Azure App Service に移動)</p></li><li><p>[問題の診断と解決] パネルを選択</p></li><li><p>[Diagnostic Tools] に移動</p></li><li><p>[Collect .NET Profiler Trace] ボタンを選択</p></li><li><p>Instance(s) にてチェックボックスにチェックする</p></li><li><p>[Collect Profiler Trace] ボタンを押す。</p></li><li><p>下記の画面 (Step 2) になったら、Web App Bot の Web チャットでテスト 等で再現を行う。<br>(60 秒間で Profiler が停止するので、Step 3 に行くまでの 60 秒間以内に再現を行います)</p></li></ol><img src="/blog/azure-bot-service/bot-cs-performance/profiler.png" class=""><ol start="8"><li>先ほどの手順 6 の Profiler 取得の画面に戻り、zip ファイルがダウンロードできるようになっているのでダウンロードする。<br>(具体的な解析方法はご紹介できかねますが、本 zip ファイルを基に、PerfView (<a href="https://github.com/microsoft/perfview" target="_blank" rel="noopener">https://github.com/microsoft/perfview</a>) 等を利用し解析を行います。)</li></ol><br /><p>[ご参考]</p><p>参考情報 1 : App Service Diagnostics – Profiling an ASP.NET Web App on Azure App Service<br><a href="https://azure.github.io/AppService/2018/06/06/App-Service-Diagnostics-Profiling-an-ASP.NET-Web-App-on-Azure-App-Service.html" target="_blank" rel="noopener">https://azure.github.io/AppService/2018/06/06/App-Service-Diagnostics-Profiling-an-ASP.NET-Web-App-on-Azure-App-Service.html</a></p><p>参考情報 2 : PerfView Tutorial (Video)<br><a href="https://channel9.msdn.com/Series/PerfView-Tutorial" target="_blank" rel="noopener">https://channel9.msdn.com/Series/PerfView-Tutorial</a></p><p>今回は以上です。 それでは、また次回！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは。&lt;br&gt;Azure Bot Service サポートチームです。&lt;/p&gt;
&lt;p&gt;今回は、Web App Bot (Azure Bot Service) と Bot Framework SDK (C#) 利用時の Bot アプリケーションの応答パフォーマンスの遅延
      
    
    </summary>
    
    
    
      <category term="Azure Bot Service" scheme="https://jpdsi.github.io/blog/tags/Azure-Bot-Service/"/>
    
      <category term="C#" scheme="https://jpdsi.github.io/blog/tags/C/"/>
    
      <category term="パフォーマンス" scheme="https://jpdsi.github.io/blog/tags/%E3%83%91%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%B3%E3%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>新しい Microsoft Edge での file プロトコルの制限について</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/FileProtocol/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/FileProtocol/</id>
    <published>2020-03-03T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:01.789Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちわ！</p><p>今回は、新しい Microsoft Edge での file: プロトコルの制限についてお知らせします。<br>Chromium ベースの新しい Microsoft Edge では、セキュリティ上の制限により file: プロトコルのリンクは機能しません。<br>この制限は Chromium における制限となりますが、新しい Microsoft Edge 側でこの制限を解除可能なオプションを提供する予定は現状ありません。</p><blockquote><p>File system search result link does not open on Firefox or Chrome<br><a href="https://support.google.com/gsa/answer/2664790?hl=en" target="_blank" rel="noopener">https://support.google.com/gsa/answer/2664790?hl=en</a></p></blockquote><p>新しい Microsoft Edge においても file プロトコルが使用できるようにするには、<a href="https://chrome.google.com/webstore/detail/enable-local-file-links/nikfmfgobenbhmocjaaboihbeocackld" target="_blank" rel="noopener">Enable local file links</a> といった拡張機能をインストールいただくか、<a href="https://docs.microsoft.com/ja-jp/deployedge/edge-ie-mode" target="_blank" rel="noopener">IE モード</a>をご利用ください。</p><p>短いですが、今回は以上です。<br>それでは、また次回！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちわ！&lt;/p&gt;
&lt;p&gt;今回は、新しい Microsoft Edge での file: プロトコルの制限についてお知らせします。&lt;br&gt;Chromium ベースの新しい Microsoft Edge では、セキュリティ上の制限により file: プロトコルのリンクは機能
      
    
    </summary>
    
    
    
      <category term="Microsoft Edge" scheme="https://jpdsi.github.io/blog/tags/Microsoft-Edge/"/>
    
      <category term="Chromium" scheme="https://jpdsi.github.io/blog/tags/Chromium/"/>
    
  </entry>
  
  <entry>
    <title>ラピッド フェール保護機能について</title>
    <link href="https://jpdsi.github.io/blog/web-apps/Rapid-Fail-Protection/"/>
    <id>https://jpdsi.github.io/blog/web-apps/Rapid-Fail-Protection/</id>
    <published>2020-02-25T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:02.948Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。</p><p>IIS サポート チームです！</p><p>今回は、IIS サポート チームへのお問い合わせの中で、比較的お問い合わせ数が多い<br>ラピッド フェール保護機能（Rapid Fail Protection）について Blog 記事を執筆します。</p><p>英語の言葉の通り、<strong>”迅速に障害を検出する”</strong> 機能となりますが、より詳しく定義すると以下となります。</p><p><strong>「既定で有効であり、一定時間内に指定回数以上エラーが発生した際、”想定外のエラーが頻発している”<br>　とみなし、対象のアプリケーション プールを停止させることで、 システム全体を保護する機能」</strong><br>　※サーバーへの負荷増加を防ぐために、アプリケーション プールは自動的に起動しなくなります<br>　※上記の定義中にある “一定時間” と “一定回数” については後述いたします</p><p>　Process Management<br>　<a href="https://docs.microsoft.com/en-us/iis/get-started/introduction-to-iis/introduction-to-iis-architecture#process-management" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/iis/get-started/introduction-to-iis/introduction-to-iis-architecture#process-management</a></p><p>この機能により、最終的にアプリケーション プールを停止させますので、結果として、突然 IIS がHTTP 503<br>（Service Unavailable）エラーを返し、クライアントが IIS 上のサービスを利用できないこともございます。<br>ただ、この機能が働くトリガーとなった、頻発している想定外のエラーを把握・調査することが重要です。</p><p>実際に、IIS 上のサービスが使用できないとユーザーから申告があると仮定し、想定外のエラーの検知、<br>またラピッド フェール保護機能が働いたかどうかを、複数のログを見ながら一緒に確認していきましょう。</p><p>また、関連するよくあるお問い合わせや、ラピッド フェール保護機能に関する設定もご紹介いたします。</p><hr><h2 id="1-ログの確認方法"><a href="#1-ログの確認方法" class="headerlink" title=" 1. ログの確認方法 "></a><u> 1. ログの確認方法 </U></h2><h4 id="1-イベント-ログ（システム）"><a href="#1-イベント-ログ（システム）" class="headerlink" title="1.イベント ログ（システム）"></a>1.イベント ログ（システム）</h4><p>ラピッドフェール保護が機能したことを示すイベント WAS 5002 のイベントを確認します。</p><ol><li>ラピッド フェール保護機能が働いていたかどうか、またこの機能によりアプリケーション プールが<br>停止していたかどうかを確認するためにイベント ログの “システム” を開きます</li><li>問題発生時刻に 5002 のイベント ID が出力され、[全般] タブに以下のメッセージの出力を確認します</li></ol><p>　<strong>「アプリケーションプールを提供しているプロセス内での一連のエラーのため～」</strong></p><img src="/blog/web-apps/Rapid-Fail-Protection/pic-1.png" class=""><ol start="3"><li>ラピッド フェール保護機能は、既定では 5 分以内に 5 回のエラーが発生した際に働くため、<br>　 イベント ID 5002 が出力された時間の 5 分前を確認して、”ソース” が “WAS” となっている<br>　 イベントが出力されていないかを確認します</li></ol><p>　 なお、この “5 分” と “5 回” が上記の定義中にある “一定時間” と “一定回数” に該当します</p><h4 id="2-パケット-キャプチャ、HTTPERR-ログ"><a href="#2-パケット-キャプチャ、HTTPERR-ログ" class="headerlink" title="2.パケット キャプチャ、HTTPERR ログ"></a>2.パケット キャプチャ、HTTPERR ログ</h4><p>ラピッド フェール保護機能に伴い HTTPERR ログにアプリケーション プールが停止したこと<br>(AppOffline) で 503 が返されたことを示すログが多数記録されていることを確認します。</p><ol><li>WireShark や Network Monitor 等のパケット キャプチャ ソフト、また以下の Blog 記事中の<br>「4. HTTPERR ログ」を確認したところ、該当のアプリケーション プールで HTTP　503 エラーが記録されている</li></ol><p>　　IIS の調査に必要な基本的なログ情報について<br>　　<a href="https://jpdsi.github.io/blog/web-apps/LogCollection1/">https://jpdsi.github.io/blog/web-apps/LogCollection1/</a></p><ol start="2"><li>HTTPERR ログの場合、問題発生時刻に “AppOffline” が記録されている</li></ol><blockquote><p>　#Fields: date time c-ip c-port s-ip s-port cs-version cs-method cs-uri sc-status s-siteid s-reason s-queuename<br>　2020-XX-XX XX:XX:XX 10.XX.X.XX PORTNUM 10.XX.X.XX PORTNUM HTTP/1.1 GET /IISFolder / 503 1 AppOffline ApplicationPoolName</p></blockquote><p>　　HTTP Api のエラー ログ<br>　　<a href="https://support.microsoft.com/ja-jp/help/820729/error-logging-in-http-apis" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/help/820729/error-logging-in-http-apis</a></p><p>AppOffline    サービス利用不可のエラーには、(503 HTTP エラー) が発生しました。アプリケーション エラーの原因となったアプリケーションをオフラインにするため、サービスは使用できません。</p><h4 id="3-イベント-ログ（アプリケーション）"><a href="#3-イベント-ログ（アプリケーション）" class="headerlink" title="3.イベント ログ（アプリケーション）"></a>3.イベント ログ（アプリケーション）</h4><p>想定外のエラーの頻発状況、つまりラピッド フェール保護機能が働いた契機となる問題を確認します。<br>（すべて原因が、イベント ログのアプリケーションから確認できるわけではない点は注意が必要です）</p><ol><li>イベント ログの “アプリケーション” を開きます</li><li>問題発生時刻に、例えばイベント ID 1000 のアプリケーション クラッシュの出力されているかを確認します</li></ol><img src="/blog/web-apps/Rapid-Fail-Protection/pic-2.png" class=""><ol start="3"><li>アプリケーション クラッシュが出力されている場合は、当該イベントをクリックした上で、<br>　 [全般] タグにてクラッシュの概要を確認します</li></ol><img src="/blog/web-apps/Rapid-Fail-Protection/pic-3.png" class=""><p>　w3wp.exe がクラッシュしている場合には、その例外コードを使用し、以下の記事にある通り<br>　ダンプ ファイルを取得してクラッシュの根本原因を調査することも可能です</p><p>　　IIS の調査に必要なダンプ ファイルの採取について(Debug Diagnostic Tool)<br>　　<a href="https://jpdsi.github.io/blog/web-apps/LogCollection4/">https://jpdsi.github.io/blog/web-apps/LogCollection4/</a><br>　　※手順 11 に記載の「Exception Code 」や「Optional Exception Name」は変更が必要です</p><h2 id="2-アプリケーション-クラッシュに至る原因（よくある事例）について"><a href="#2-アプリケーション-クラッシュに至る原因（よくある事例）について" class="headerlink" title=" 2. アプリケーション クラッシュに至る原因（よくある事例）について"></a><u> 2. アプリケーション クラッシュに至る原因（よくある事例）について</u></h2><p>上記で確認した様なクラッシュは、アプリケーションの例外に起因して発生することが一般的です。</p><p>ただし、短時間で頻繁に発生している場合には、クラッシュに至るアプリケーション処理が行われたわけではなく、<br>IIS やアプリケーションの処理がウイルス対策ソフト等のフィルター ドライバーによって一時的に阻害されていた可能性が考えられます。</p><p>アンチ ウィルス ソフトのようなセキュリティ関連ソフト等により、IIS 関連のフォルダーやファイルへの<br>アクセスが阻害された、アプリケーション プールが意図せず終了してしまう報告例もあるため、<br>意図せずラピッド フェール保護機能が働いていた場合には、以下もご確認いただければと思います。</p><p>　　IIS 観点でアンチ ウイルス スキャン対象から除外したいフォルダー<br>　　<a href="https://jpdsi.github.io/blog/web-apps/iis-exclude-antivirus-scanning/">https://jpdsi.github.io/blog/web-apps/iis-exclude-antivirus-scanning/</a></p><h2 id="3-ラピッド-フェール保護の設定について"><a href="#3-ラピッド-フェール保護の設定について" class="headerlink" title=" 3. ラピッド フェール保護の設定について"></a><u> 3. ラピッド フェール保護の設定について</u></h2><p>ラピッド フェール保護機能を無効化、または冒頭に記載の “一定時間” と “一定回数” は以下で変更可能です。</p><blockquote><p>場所 : [IIS マネージャー]-[アプリケーション プール]-[(対象のアプリケーション プール)]-[詳細設定]-[ラピッド フェール保護]<br>項目 : [エラー間隔 (分)]、および [最大エラー数]</p></blockquote><p>例えば、頻発しているエラーを既に把握している場合（エラーの発生を許容している場合）、<br>アプリケーション プールが停止に至らないよう “一定時間” と “一定回数” を引き上げることが出来ます。<br>「10分間に100回のエラーがあった場合に停止する」ように設定する場合には、以下を指定します。</p><blockquote><p>エラー間隔(分)：10<br>最大エラー数：100</p></blockquote><p>　　Failure Settings for an Application Pool<br>　　<a href="https://docs.microsoft.com/en-us/iis/configuration/system.applicationhost/applicationpools/add/failure" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/iis/configuration/system.applicationhost/applicationpools/add/failure</a></p><p>今回は以上です。 それでは、また次回！</p><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。 もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは。&lt;/p&gt;
&lt;p&gt;IIS サポート チームです！&lt;/p&gt;
&lt;p&gt;今回は、IIS サポート チームへのお問い合わせの中で、比較的お問い合わせ数が多い&lt;br&gt;ラピッド フェール保護機能（Rapid Fail Protection）について Blog 記事を執筆します。
      
    
    </summary>
    
    
    
      <category term="Internet Information Services" scheme="https://jpdsi.github.io/blog/tags/Internet-Information-Services/"/>
    
      <category term="Rapid Fail Protection" scheme="https://jpdsi.github.io/blog/tags/Rapid-Fail-Protection/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET Core SignalR から Azure SignalR Service への移行</title>
    <link href="https://jpdsi.github.io/blog/web-apps/MigrationAzureSignalR/"/>
    <id>https://jpdsi.github.io/blog/web-apps/MigrationAzureSignalR/</id>
    <published>2020-02-25T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:02.922Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。</p><p>IIS / ASP.NET サポート チームです！<br>Azure SignalR Service に関するブログです。</p><p>今回は ASP.NET Core SignalR から Azure SignalR Service への移行手順をご紹介いたします。</p><hr><h2 id="1-Azure-SignalR-Service-について"><a href="#1-Azure-SignalR-Service-について" class="headerlink" title="1. Azure SignalR Service について"></a>1. Azure SignalR Service について</h2><p>まずはその前に、Azure SignalR Service について簡単に記載させていただきます。</p><h3 id="Azure-SignalR-Service-の概要"><a href="#Azure-SignalR-Service-の概要" class="headerlink" title="Azure SignalR Service の概要"></a>Azure SignalR Service の概要</h3><p>Azure SignalR Serviceは、ASP.NET Core SignalRフレームワーク上に構築されており、<br>リアルタイムのWeb機能を実現するという点についてはASP.NET Core SignalRと大きな違いはございません。</p><p>主な特徴としてはAzure SignalR Serviceを使用する場合、クライアントはアプリケーションサーバーではなくAzure SignalR Serviceに接続することです。<br>この接続は次のような手順で行われます。</p><ol><li>クライアントはサーバーへ接続のネゴシエーション要求を送る</li><li>サーバーはアクセストークンとURLとともにAzure SignalR Serviceにリダイレクトする</li><li>クライアントはAzure SignalR Serviceと永続的な接続を確立する</li></ol><img src="/blog/web-apps/MigrationAzureSignalR/azuresignalr.png" class=""><p>参考 : Azure SignalR サービスとは<br><a href="https://docs.microsoft.com/ja-jp/azure/azure-signalr/signalr-overview" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/azure-signalr/signalr-overview</a></p><p>参考 : ASP.NET Core SignalR のホストとスケーリング - Azure SignalR Service (上記の画像引用)<br><a href="https://docs.microsoft.com/ja-jp/aspnet/core/signalr/scale?view=aspnetcore-3.1#azure-signalr-service" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/aspnet/core/signalr/scale?view=aspnetcore-3.1#azure-signalr-service</a></p><h3 id="Azure-SignalR-Service-のメリット"><a href="#Azure-SignalR-Service-のメリット" class="headerlink" title="Azure SignalR Service のメリット"></a>Azure SignalR Service のメリット</h3><p>通常の ASP.NET Core SignalRと比較した場合のAzure SignalR Serviceのメリットをまとめると次のようになります。</p><ul><li>Azure SignalR Serviceがクライアント接続を担い、サーバーが永続的なクライアント接続を行わないため、<ul><li>接続関連のリソース消費量はほかの一般的なWebアプリと同程度に抑えられる</li><li>接続の信頼性が Signalr Service により保証される</li></ul></li><li>Azure SignalR Serviceには様々なクライアントに対応した SDK が用意されているため、<br>暗号化、認証の実装等は SDK や Azure の機能を利用して構成することで、アプリケーション実装の開発に専念することができる</li><li>Azure SignalR Serviceがクライアント接続を担うため、<ul><li>大規模なクライアント接続を処理できる</li><li>接続数に応じてAzure SignalR Serviceが自動的にスケールアウトされる</li><li>スケーリングの際のWebsocket接続の負荷分散処理をサーバー側で行う必要がない</li></ul></li><li>上記のようなバックプレーン管理の必要がないためWebアプリケーションが簡素化され、ホスティングのコストを削減することができる</li><li>Azure Functionsと併用してサーバーレス環境でリアルタイム通信を提供することも可能</li></ul><hr><h2 id="2-Azure-SignalR-Service-への移行手順"><a href="#2-Azure-SignalR-Service-への移行手順" class="headerlink" title="2.  Azure SignalR Service への移行手順"></a>2.  Azure SignalR Service への移行手順</h2><p>それでは本題の移行についてです。</p><p>今回は以下のホワイトボードのサンプルを ASP.NET Core SignalR から Azure SignalR Service へ移行する手順をご紹介します。</p><p>  GitHub – aspnet/SignalR-samples - WhiteBoard<br>  <a href="https://github.com/aspnet/SignalR-samples/tree/master/WhiteBoard" target="_blank" rel="noopener">https://github.com/aspnet/SignalR-samples/tree/master/WhiteBoard</a></p><h3 id="A-前提"><a href="#A-前提" class="headerlink" title="A.    前提"></a>A.    前提</h3><ul><li>有効な Azure サブスクリプションやアカウントを持っている</li><li>開発環境に Visual Studio 2019 や該当するバージョンの .NET Core SDK が入っている</li></ul><h3 id="B-Azure-SignalR-リソースの作成"><a href="#B-Azure-SignalR-リソースの作成" class="headerlink" title="B.    Azure SignalR リソースの作成"></a>B.    Azure SignalR リソースの作成</h3><ol><li>Azure portal (<a href="https://portal.azure.com/" target="_blank" rel="noopener">https://portal.azure.com/</a>) にサインインする</li><li>Azure Portal 上のリソースの作成を選択</li><li>[Marketplaceを検索]テキストボックスに”SignalR Service”と入力</li><li>SignalR Serviceの画面で[作成]を選択</li><li>必要事項を入力し、作成を選択 (デプロイには時間がかかる場合があります)</li><li>デプロイが完了したら、作成したリソースに移動し、[設定]の下の[Keys]を選択<br>PrimaryのCONNECTION STRINGをクリップボードにコピーする</li></ol><img src="/blog/web-apps/MigrationAzureSignalR/keys.png" class=""><h3 id="C-ASP-NET-Core-アプリケーションに-Azure-SignalR-を追加"><a href="#C-ASP-NET-Core-アプリケーションに-Azure-SignalR-を追加" class="headerlink" title="C.    ASP.NET Core アプリケーションに Azure SignalR を追加"></a>C.    ASP.NET Core アプリケーションに Azure SignalR を追加</h3><ol><li>プロジェクトに Microsoft.Azure.SignalR の NuGet パッケージを追加</li></ol><p>(参考情報)</p><ul><li><a href="https://docs.microsoft.com/ja-jp/nuget/quickstart/install-and-use-a-package-in-visual-studio" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/nuget/quickstart/install-and-use-a-package-in-visual-studio</a></li><li><a href="https://docs.microsoft.com/ja-jp/nuget/quickstart/install-and-use-a-package-using-the-dotnet-cli" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/nuget/quickstart/install-and-use-a-package-using-the-dotnet-cli</a></li></ul><ol start="2"><li><p>接続文字列の設定<br>“appsettings.json” というファイルを作成し、以下を書き込む<br>”YourConnectionString” の部分はBの手順6で確認したCONNECTION STRING に置き換える。</p><img src="/blog/web-apps/MigrationAzureSignalR/appsettings.png" class=""></li><li><p>Startup.csを開く<br>ConfigureServices メソッドで Azure SignalR Service を使うように更新するため、services.AddSignalR().AddAzureSignalR() メソッドを呼び出す。</p><img src="/blog/web-apps/MigrationAzureSignalR/addazuresignalr.png" class=""></li></ol><p>Configure メソッドにapp.UseAuthorization() を追加する。</p> <img src="/blog/web-apps/MigrationAzureSignalR/useauthorization.png" class=""><p>その他参考情報 : クイック スタート:SignalR Service を使用してチャット ルームを作成する<br><a href="https://docs.microsoft.com/ja-jp/azure/azure-signalr/signalr-quickstart-dotnet-core#add-azure-signalr-to-the-web-app" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/azure/azure-signalr/signalr-quickstart-dotnet-core#add-azure-signalr-to-the-web-app</a></p><p>今回は以上です。 それでは、また次回！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは。&lt;/p&gt;
&lt;p&gt;IIS / ASP.NET サポート チームです！&lt;br&gt;Azure SignalR Service に関するブログです。&lt;/p&gt;
&lt;p&gt;今回は ASP.NET Core SignalR から Azure SignalR Service への移行
      
    
    </summary>
    
    
    
      <category term="Internet Information Services" scheme="https://jpdsi.github.io/blog/tags/Internet-Information-Services/"/>
    
      <category term="ASP.NET" scheme="https://jpdsi.github.io/blog/tags/ASP-NET/"/>
    
      <category term="Azure SignalR Service" scheme="https://jpdsi.github.io/blog/tags/Azure-SignalR-Service/"/>
    
  </entry>
  
  <entry>
    <title>IIS 観点でアンチ ウイルス スキャン対象から除外したいフォルダー</title>
    <link href="https://jpdsi.github.io/blog/web-apps/iis-exclude-antivirus-scanning/"/>
    <id>https://jpdsi.github.io/blog/web-apps/iis-exclude-antivirus-scanning/</id>
    <published>2020-02-17T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:02.703Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本記事は Technet Blog の更新停止に伴い、もとの <a href="https://docs.microsoft.com/ja-jp/archive/blogs/jpiis/iis_antivirus" target="_blank" rel="noopener">記事</a> からの複写となります。<br>元の記事の最新の更新情報については、本内容をご参照ください。</p></blockquote><p>今回は IIS の観点より、アンチ ウイルス スキャン対象から除外すべきフォルダーについてご紹介します。</p><p>アンチ ウィルス ソフトのようなセキュリティ関連ソフトや、バックアップ ソフト等の予期しない動作によって、IIS が動作するために必要なモジュールやファイルの処理時に影響が発生し、後述の事例のような現象が発生する場合があります。</p><p>そのため、IIS に関する以下のフォルダーに対し、各種ソフトウェアの除外設定を実施いただく事を推奨しております。</p><h2 id="■-IIS-の観点でスキャン対象から除外を推奨するフォルダー"><a href="#■-IIS-の観点でスキャン対象から除外を推奨するフォルダー" class="headerlink" title="■ IIS の観点でスキャン対象から除外を推奨するフォルダー"></a>■ IIS の観点でスキャン対象から除外を推奨するフォルダー</h2><ul><li>IIS のインストール フォルダー<br>%SystemRoot%\System32\inetsrv およびその配下</li><li>IIS のログ、圧縮、構成ファイル格納フォルダー<br>%SystemDrive%\inetpub およびその配下</li><li>HTTPERR ログ フォルダー<br>%SystemRoot%\System32\LogFiles\HTTPERR およびその配下</li><li>.NET Framework フォルダー<br>%SystemRoot%\Microsoft.NET\Framework&lt;.NET Framework のバージョン&gt; およびその配下<br>%SystemRoot%\Microsoft.NET\Framework64&lt;.NET Framework のバージョン&gt; およびその配下<br>※前者が 32bit アプリケーション用のフォルダー、後者が 64bit アプリケーション用のフォルダーです</li><li>アプリケーションが配置されているフォルダー</li></ul><p>Web アプリケーション格納フォルダーおよび Web アプリケーションにて、ログの出力や一時的なファイルを保存するフォルダーなどが存在する場合は、あわせてウィルス スキャンの対象から除外することを推奨しています。</p><hr><p>以下、各フォルダーについて記載します。</p><h3 id="IIS-のインストール-フォルダー"><a href="#IIS-のインストール-フォルダー" class="headerlink" title="IIS のインストール フォルダー"></a>IIS のインストール フォルダー</h3><p>IIS が動作するために必要なモジュールや、構成ファイルなどの情報が当該フォルダーに含まれています。<br>必要なモジュールや構成ファイルへのアクセスが阻害されるようなことがあった場合、IIS が正常に動作しない可能性があるため、除外をお勧めしています。</p><h3 id="IIS-のログ、圧縮、構成ファイル格納フォルダ"><a href="#IIS-のログ、圧縮、構成ファイル格納フォルダ" class="headerlink" title="IIS のログ、圧縮、構成ファイル格納フォルダ"></a>IIS のログ、圧縮、構成ファイル格納フォルダ</h3><p>IIS が処理をする上で利用する一時的なファイルの保管場所として利用するフォルダーです。<br>当該フォルダーへのアクセスが阻害されるようなことがあった場合、同様に IIS が正常に動作しない可能性があるため、除外をお勧めしています。</p><h3 id="HTTPERR-ログ-フォルダー"><a href="#HTTPERR-ログ-フォルダー" class="headerlink" title="HTTPERR ログ フォルダー"></a>HTTPERR ログ フォルダー</h3><p>HTTP の要求を受け付ける、http.sys がエラーを出力するフォルダーです。<br>エラーの内容がトラブルシュート時に利用できることがあるため、アクセスが阻害されてエラーが記録されないことを避けるために、除外をお勧めしています。</p><h3 id="ASP-NET-コンパイル-フォルダー-ASP-NET-をご利用の場合"><a href="#ASP-NET-コンパイル-フォルダー-ASP-NET-をご利用の場合" class="headerlink" title="ASP.NET コンパイル フォルダー (ASP.NET をご利用の場合)"></a>ASP.NET コンパイル フォルダー (ASP.NET をご利用の場合)</h3><p>ASP.NET がアプリケーションをコンパイルして生成されたアセンブリ (dll) を保持するためのフォルダーです。<br>該当のフォルダー内のファイルがウィルス スキャン等によって何らかの変更が加えられた場合、アプリケーションの再起動が発生するため、除外をお勧めしています。</p><h3 id="アプリケーションが配置されているフォルダー"><a href="#アプリケーションが配置されているフォルダー" class="headerlink" title="アプリケーションが配置されているフォルダー"></a>アプリケーションが配置されているフォルダー</h3><p>IIS で公開されるコンテンツへのアクセス時に阻害されるようなことがあった場合、コンテンツが正常に応答できず、クライアント側でエラーとなる可能性があるため、除外をお勧めしています。</p><h2 id="■-セキュリティ関連ソフトの影響により発生する事例"><a href="#■-セキュリティ関連ソフトの影響により発生する事例" class="headerlink" title="■ セキュリティ関連ソフトの影響により発生する事例"></a>■ セキュリティ関連ソフトの影響により発生する事例</h2><h3 id="1-アプリケーション-ドメインの再起動"><a href="#1-アプリケーション-ドメインの再起動" class="headerlink" title="1) アプリケーション ドメインの再起動"></a>1) アプリケーション ドメインの再起動</h3><p>アプリケーション ドメインの再起動は、web.config などの構成ファイルの変更や、bin フォルダー配下のファイルの編集をトリガーとして行われます。<br>再起動されると次回アクセス時にアセンブリのロード等が再度行われるため、他のタイミングよりリクエストの処理に時間がかかることがあります。</p><p>ASP.NET にてヘルス モニタリングのイベントを有効にしている場合、以下のイベント ID : 1305 が記録されます。</p><h5 id="へルス-モニタリングを有効にする構成"><a href="#へルス-モニタリングを有効にする構成" class="headerlink" title="へルス モニタリングを有効にする構成"></a>へルス モニタリングを有効にする構成</h5><figure class="highlight xml"><figcaption><span>web.config</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">healthMonitoring</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">rules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">"myLifeTimeLogs"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">eventName</span>=<span class="string">"Application Lifetime Events"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">provider</span>=<span class="string">"EventLogProvider"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">rules</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">healthMonitoring</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="イベント-ログ"><a href="#イベント-ログ" class="headerlink" title="イベント ログ"></a>イベント ログ</h5><blockquote><p>ログの名前: Application<br>ソース: ASP.NET 4.0.30319.0<br>日付: 2018/08/17 11:34:21<br>イベント ID: 1305<br>タスクのカテゴリ: Web Event<br>レベル: 情報<br>キーワード: クラシック<br>説明: Event code: 1002 Event message: アプリケーションをシャットダウンしています。<br>原因: 構成が変更されました。</p></blockquote><p>しかしながら、セキュリティ関連ソフトの影響により、構成ファイルの変更が誤検知され、アプリケーション ドメインが意図せず再起動してしまう場合があります。</p><p>そのような場合、何もアプリケーションに変更を加えていないにも関わらず、たまにアクセスに時間がかかることがあるといった現象として見えることがあります。</p><h3 id="2-構成ファイル作成の際にアクセス拒否が発生"><a href="#2-構成ファイル作成の際にアクセス拒否が発生" class="headerlink" title="2) 構成ファイル作成の際にアクセス拒否が発生"></a>2) 構成ファイル作成の際にアクセス拒否が発生</h3><p>IIS や OS を再起動した後の初回アクセス等のタイミングで、普段は問題ないものの、たまに以下のイベント ID : 5189 が記録され、構成ファイルを作成しようとした際にアクセス拒否が発生する場合があります。 </p><h5 id="イベント-ログ-1"><a href="#イベント-ログ-1" class="headerlink" title="イベント ログ"></a>イベント ログ</h5><blockquote><p>ログの名前: System<br>ソース: Microsoft-Windows-WAS<br>日付: 2018/08/17 11:34:21<br>イベント ID: 5189<br>タスクのカテゴリ: なし<br>レベル: エラー<br>キーワード: クラシック<br>ユーザー: N/A<br>コンピューター: contoso.local<br>説明: Windows プロセス アクティブ化サービスが、アプリケーション プール ‘DefaultAppPool’ 用のアプリケーション プール構成ファイルを生成できませんでした。エラーの種類は ‘7’ です。この問題を解決するには、applicationhost.config ファイルが正しいことを確認し、最近行った構成の変更を再度確定してください。データ フィールドには、エラー番号が表示されています。</p></blockquote><p>アプリケーション プール用の構成ファイル (既定では %SystemDrive%\inetpub\temp\appPools フォルダー) を作成しようとしたものの、アクセスが拒否されたために失敗したことで、該当のイベントが記録されます。</p><p>アクセス拒否は一般的に当該ファイルにアクセス権がない場合に発生し、アクセス権がない場合は常時エラーとなります。</p><p>しかしながら、本エラーが単発で記録される場合には一時的にアクセスが阻害された可能性があり、そのような場合にはセキュリティ関連ソフトの影響が考えられます。</p><h3 id="3-アプリケーション-プールのプロセスが突然終了"><a href="#3-アプリケーション-プールのプロセスが突然終了" class="headerlink" title="3) アプリケーション プールのプロセスが突然終了"></a>3) アプリケーション プールのプロセスが突然終了</h3><p>普段は問題なく動作しているものの、たまに以下のイベント ID : 5009 が記録され、プロセスが予期せず終了する場合があります。</p><h5 id="イベント-ログ-2"><a href="#イベント-ログ-2" class="headerlink" title="イベント ログ"></a>イベント ログ</h5><blockquote><p>ログの名前: System<br>ソース: Microsoft-Windows-WAS<br>日付: 2018/08/17 11:34:21<br>イベント ID: 5009<br>タスクのカテゴリ: なし<br>レベル: 警告<br>キーワード: クラシック<br>ユーザー: N/A<br>コンピューター: contoso.local<br>説明: アプリケーション プール ‘DefaultAppPool’ を提供しているプロセスが突然終了しました。プロセス id は ‘1660’ でした。プロセス終了コードは ‘0xfffffffe’ でした。</p></blockquote><p>イベントに記録されている終了コード 0xfffffffe は “CLEAN_WORKER_PROCESS_EXIT_CODE” を示し、異常終了を示すものではなく、正常にワーカー プロセスが終了された場合に記録されます。</p><p>Application Error イベント等も特に記録されていない場合、IIS にロードされているモジュールが何らかの要因により自発的に停止した、と考えられます。</p><p>このような場合、セキュリティ関連ソフトの動作によって IIS が動作するために必要なモジュールやファイルの処理に影響が発生し、プロセスの突然終了につながる可能性があります。</p><hr><p>上記事例以外にも、セキュリティ関連ソフトの影響により、予期しない動作となる可能性がありますため、除外設定についてご検討いただけますと幸いです。</p><p>※ただし、アンチ ウィルス ソフトの種類によってはスキャンの除外対象のフォルダーやファイルに対してもアクセスが発生してしまう場合もあります。<br>アンインストールを行わなければそのアプリケーションの動作の影響を抑えることができなかったという事例もあります。<br>除外や停止のみでは改善されない場合は、アンインストールにより事象が改善されるかもご確認いただけますと幸いです。</p><h2 id="■-参考情報"><a href="#■-参考情報" class="headerlink" title="■ 参考情報"></a>■ 参考情報</h2><p>ASP.NET アプリケーションでのウイルス対策スキャンから除外するフォルダー<br><a href="https://support.microsoft.com/ja-jp/help/3126034/folders-to-exclude-from-antivirus-scanning-in-asp-net-apps" target="_blank" rel="noopener">https://support.microsoft.com/ja-jp/help/3126034/folders-to-exclude-from-antivirus-scanning-in-asp-net-apps</a></p><p>fltmc.exe の使い方<br><a href="https://docs.microsoft.com/ja-jp/archive/blogs/jpwdkblog/fltmc-exe" target="_blank" rel="noopener">https://docs.microsoft.com/ja-jp/archive/blogs/jpwdkblog/fltmc-exe</a></p><p>※fltmc.exeを用いてセキュリティ関連ソフト等のフィルター ドライバーのインストール状況を確認できます。</p><p>それでは、また！</p><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。<br>もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本記事は Technet Blog の更新停止に伴い、もとの &lt;a href=&quot;https://docs.microsoft.com/ja-jp/archive/blogs/jpiis/iis_antivirus&quot; target=&quot;_blank&quot; 
      
    
    </summary>
    
    
    
      <category term="Internet Information Services" scheme="https://jpdsi.github.io/blog/tags/Internet-Information-Services/"/>
    
  </entry>
  
  <entry>
    <title>Internet Explorer および Microsoft Edge での Flash の今後の対応について</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/flash/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/flash/</id>
    <published>2020-02-02T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:01.847Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本記事は Technet Blog の更新停止に伴い、もとの <a href="https://docs.microsoft.com/ja-jp/archive/blogs/jpieblog/flash-roadmap" target="_blank" rel="noopener">記事</a> に加筆／修正を加えた内容です。<br>元の記事の最新の更新情報については、本内容をご参照ください。</p></blockquote><p>こんにちは。<br>たまにお問い合わせとしていただく Internet Explorer および Microsoft Edge での Flash の今後の対応について改めてご紹介します。</p><h2 id="今後のロードマップ"><a href="#今後のロードマップ" class="headerlink" title="今後のロードマップ"></a>今後のロードマップ</h2><p>Adobe Flash のサポート終了のロードマップは、以前下記の資料にて今後のロードマップについてお知らせしていました。</p><blockquote><p>The End of an Era – Next Steps for Adobe Flash<br><a href="https://blogs.windows.com/msedgedev/2017/07/25/flash-on-windows-timeline/" target="_blank" rel="noopener">https://blogs.windows.com/msedgedev/2017/07/25/flash-on-windows-timeline/</a></p></blockquote><p>その後、2019 年 8 月 30 日に下記の情報をお知らせしています。</p><blockquote><p>Update on removing Flash from Microsoft Edge and Internet Explorer<br><a href="https://blogs.windows.com/msedgedev/2019/08/30/update-removing-flash-microsoft-edge-internet-explorer/" target="_blank" rel="noopener">https://blogs.windows.com/msedgedev/2019/08/30/update-removing-flash-microsoft-edge-internet-explorer/</a></p></blockquote><p>当初の予定から大きくは変わらず、今年 2020 年末には完全に廃止される予定です。<br>この方針は、マイクロソフトが独自に進めているのではなく、開発元の Adobe 社が中心となりブラウザー各社連携をとり進められています。<br>来年 2021 年には、どのブラウザーをご利用の場合でも Flash が実行できなくなることが予想されますため、html5 などの代替テクノロジーへの移行のご検討を何卒よろしくお願いします。</p><p>なお、新しい Chromium 版の Microsoft Edge は、Chromium をベースとするほかのブラウザーと同様のタイムラインで、既定での無効化および廃止の対応が行われる見込みです。このため、EdgeHTML 版の Microsoft Edge や Internet Explorer での対応予定とは異なる可能性が十分に考えられます。<br>代替テクノロジーへの移行を予定されている場合は、<a href="https://www.blog.google/products/chrome/" target="_blank" rel="noopener">Google 社の情報</a> も併せてご確認ください。</p><hr><p>以降は、Internet Explorer および EdgeHTML 版の Microsoft Edge での Flash 無効化に向けたロードマップです。</p><h3 id="■-2017-年末から-2018-年にかけて"><a href="#■-2017-年末から-2018-年にかけて" class="headerlink" title="■ 2017 年末から 2018 年にかけて"></a><span style="color: #cccccc;">■ 2017 年末から 2018 年にかけて</span></h3><span style="color: #cccccc;">Windows 10 Creators Update (v1703) 以降の Microsoft Edge では、初めて訪れる Web サイトでの Flash コンテンツの実行の許可を求め、許可した Web サイトの再訪問時には求められません。また、Internet Explorer では Flash の実行に関しては特別な制御は行われておりません。</span><h3 id="■-2018-年後半にかけて"><a href="#■-2018-年後半にかけて" class="headerlink" title="■ 2018 年後半にかけて"></a><span style="color: #cccccc;">■ 2018 年後半にかけて</span></h3><span style="color: #cccccc;">Microsoft Edge 上で Flash が含まれる Web サイトを閲覧するたびに実行の許可を求める動作となります。Internet Explorer においては引き続き Flash の実行は許可され、特別な制御は行われません。</span><h3 id="■-2019-年後半にかけて"><a href="#■-2019-年後半にかけて" class="headerlink" title="■ 2019 年後半にかけて"></a><span style="color: #cccccc;">■ 2019 年後半にかけて</h3><span style="color: #cccccc;">Microsoft Edge および Internet Explorer 上での Flash が既定で無効となります。ただし、Flash を実行できるよう構成を変更することも可能です。Flash を実行できるよう構成したい場合、Microsoft Edge については、[2018 年後半にかけて] と同様に、Flash が含まれる Web サイトを閲覧するたびに実行の許可が求められる動作となります。</span><h4 id="補足"><a href="#補足" class="headerlink" title="補足"></a>補足</h4><p>上記の資料のとおり、2019 年中については 2018 年までの動作から変更はおこなれませんでした。<br>つまり、Internet Explorer では Flash の既定での無効化の対応は実施されていません。</p><h3 id="■-2020-年末"><a href="#■-2020-年末" class="headerlink" title="■ 2020 年末"></a>■ 2020 年末</h3><p>サポートされるすべての Windows 上の Microsoft Edge (EdgeHTML 版、Chromium 版ともに) および Internet Explorer で Flash を実行することができなくなります。<br>Flash を再び実行できるように構成することもできなくなる予定です。</p><p>なお、どのようにこの対応が展開されるのか？いつそれが行われるのか？ 2021 年以降も Flash を使い続ける方法があるのか？というお問い合わせをいただくことがありますが、恐れ入りますが、現段階でご紹介できる情報は上記の内容のみです。<br>今後の予定についてお伝えできる情報が明確になった時点で改めて本情報を更新いたします。</p><p>本日の記事は以上となります。<br>本情報はあくまでも現時点での予定となりますため、今後何らかの影響により本予定も変更となる可能性が十分にありえます。<br>そのため、Web サイト側での対応を計画されている場合には、十分に余裕をもった計画とされることをお勧めいたします。</p><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。<br>もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本記事は Technet Blog の更新停止に伴い、もとの &lt;a href=&quot;https://docs.microsoft.com/ja-jp/archive/blogs/jpieblog/flash-roadmap&quot; target=&quot;_blan
      
    
    </summary>
    
    
    
      <category term="Internet Explorer" scheme="https://jpdsi.github.io/blog/tags/Internet-Explorer/"/>
    
      <category term="Flash" scheme="https://jpdsi.github.io/blog/tags/Flash/"/>
    
  </entry>
  
  <entry>
    <title>新しいバージョンの Microsoft Edge のインストール後も Microsoft Edge レガシーを利用する方法</title>
    <link href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/side-by-side/"/>
    <id>https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/side-by-side/</id>
    <published>2020-01-31T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:02.439Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。</p><p><a href="https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/Deploy-Edge/">こちらの記事</a> で、『古い Microsoft Edge (EdgeHTML) と新しい Microsoft Edge (Chromium ベース) の両方を使いたいときはどうすればいいですか？』という質問に対して、実際の設定の様子をお伝えするとしていましたが、以下にまとめますのでご覧ください！</p><br /><br /><p>まず、何もしないで新しいバージョンの Edge をインストールした場合は、古いバージョンの Edge は隠された状態になります。</p><p><a href="https://docs.microsoft.com/en-us/deployedge/microsoft-edge-sysupdate-access-old-edge" target="_blank" rel="noopener">こちらのドキュメント</a> にあるように、<a href="https://docs.microsoft.com/ja-jp/deployedge/microsoft-edge-update-policies#allowsxs" target="_blank" rel="noopener">Microsoft Edge でのブラウザーの同時実行エクスペリエンスを許可するというポリシー</a> を <strong>事前に有効にした状態で</strong> 新しいバージョンの Edge をインストールすると、両方のバージョンの Edge が利用できるようになります。</p><p>では実際にやってみます。</p><br /><br /><h2 id="管理用テンプレートのダウンロード"><a href="#管理用テンプレートのダウンロード" class="headerlink" title="管理用テンプレートのダウンロード"></a>管理用テンプレートのダウンロード</h2><p><a href="https://www.microsoft.com/en-us/edge/business/download" target="_blank" rel="noopener">こちら</a> から管理用テンプレートをダウンロードします。</p><img src="/blog/internet-explorer-microsoft-edge/side-by-side/getpolicyfile.png" class=""><p>ダウンロードしたファイル (MicrosoftEdgePolicyTemplates) を任意の場所に展開し、以下のファイルをコピーします。</p><table><thead><tr><th align="left"></th><th align="left">File1</th></tr></thead><tbody><tr><td align="left">コピー元</td><td align="left">MicrosoftEdgePolicyTemplates\windows\admx\msedge.admx</td></tr><tr><td align="left">コピー先</td><td align="left">C:\Windows\PolicyDefinitions\msedge.admx</td></tr></tbody></table><table><thead><tr><th align="left"></th><th align="left">File2</th></tr></thead><tbody><tr><td align="left">コピー元</td><td align="left">MicrosoftEdgePolicyTemplates\windows\admx\msedgeupdate.admx</td></tr><tr><td align="left">コピー先</td><td align="left">C:\Windows\PolicyDefinitions\msedgeupdate.admx</td></tr></tbody></table><table><thead><tr><th align="left"></th><th align="left">File3</th></tr></thead><tbody><tr><td align="left">コピー元</td><td align="left">MicrosoftEdgePolicyTemplates\windows\admx\ja-JP\msedge.admx</td></tr><tr><td align="left">コピー先</td><td align="left">C:\Windows\PolicyDefinitions\ja-JP\msedge.admx</td></tr></tbody></table><table><thead><tr><th align="left"></th><th align="left">File4</th></tr></thead><tbody><tr><td align="left">コピー元</td><td align="left">MicrosoftEdgePolicyTemplates\windows\admx\ja-JP\msedgeupdate.admx</td></tr><tr><td align="left">コピー先</td><td align="left">C:\Windows\PolicyDefinitions\ja-JP\msedgeupdate.admx</td></tr></tbody></table><br /><br /><h2 id="ポリシーを構成"><a href="#ポリシーを構成" class="headerlink" title="ポリシーを構成"></a>ポリシーを構成</h2><p>Windows + R キーで <strong>ファイル名を指定して実行</strong> を開き、gpedit.msc (ポリシー エディター) を起動します。</p><p>コンピューターの構成 - 管理用テンプレート - Microsoft Edge の更新 - アプリケーション を開きます。</p><img src="/blog/internet-explorer-microsoft-edge/side-by-side/AllowMicrosoftEdgeSideBySideBrowserExperience.png" class=""><p><strong>Microsoft Edge でのブラウザーの同時実行エクスペリエンスを許可する</strong> ポリシーを有効にします。</p><img src="/blog/internet-explorer-microsoft-edge/side-by-side/configurepolicy.png" class=""><br /><br /><h2 id="新しい-Edge-をインストール"><a href="#新しい-Edge-をインストール" class="headerlink" title="新しい Edge をインストール"></a>新しい Edge をインストール</h2><p>特に気にするポイントはありません。</p><br /><br /><h2 id="新旧ふたつの-Edge-が起動することを確認"><a href="#新旧ふたつの-Edge-が起動することを確認" class="headerlink" title="新旧ふたつの Edge が起動することを確認"></a>新旧ふたつの Edge が起動することを確認</h2><img src="/blog/internet-explorer-microsoft-edge/side-by-side/sidebyside.png" class=""><br /><br /><p>大変申し訳ありませんが、上記の方法で新旧の Edge を共存させた場合、古い Edge が通常通りに起動できない場合があります。<br>現在、修正に向けて対応が進められていますが、以下のように古い Edge のアイコンを右クリックし「新しいウィンドウ」から起動することはできますので、こちらで暫定回避をお願いします。</p><img src="/blog/internet-explorer-microsoft-edge/side-by-side/newwindow.png" class=""><br /><br /><hr><h2 id="ポリシーを構成する前に新しい-Edge-をインストールしてしまったときは？"><a href="#ポリシーを構成する前に新しい-Edge-をインストールしてしまったときは？" class="headerlink" title="ポリシーを構成する前に新しい Edge をインストールしてしまったときは？"></a>ポリシーを構成する前に新しい Edge をインストールしてしまったときは？</h2><p>こちらも <a href="https://docs.microsoft.com/en-us/deployedge/microsoft-edge-sysupdate-access-old-edge#best-practice-guidance" target="_blank" rel="noopener">ドキュメント</a> に説明がありますが、<strong>Microsoft Edge でのブラウザーの同時実行エクスペリエンスを許可する</strong> ポリシーを <strong>有効</strong> に設定してから <strong>もう一度インストーラーを実行 (修復インストール)</strong> することで、古い Edge も起動できるようになります。</p><img src="/blog/internet-explorer-microsoft-edge/side-by-side/recover.png" class=""><br /><br /><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。<br>もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://jpdsi.github.io/blog/internet-explorer-microsoft-edge/Deploy-Edge/&quot;&gt;こちらの記事&lt;/a&gt; で、『古い Microsoft Edge (EdgeH
      
    
    </summary>
    
    
    
      <category term="Microsoft Edge" scheme="https://jpdsi.github.io/blog/tags/Microsoft-Edge/"/>
    
      <category term="Chromium" scheme="https://jpdsi.github.io/blog/tags/Chromium/"/>
    
  </entry>
  
  <entry>
    <title>IIS の調査にパフォーマンス系のログ情報について (Perfview)</title>
    <link href="https://jpdsi.github.io/blog/web-apps/LogCollection3/"/>
    <id>https://jpdsi.github.io/blog/web-apps/LogCollection3/</id>
    <published>2020-01-30T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:02.817Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。</p><p>IIS サポート チームです！</p><p>以前、IIS 上でのトラブル シューティングに役立つログの採取方法について、以下の 2 つの記事を書いてますが、現象の性質によってはこのログ以外の情報が必要となるログがございます。</p><p>　IIS の調査に必要な基本的なログ情報について<br>　<a href="https://jpdsi.github.io/blog/web-apps/LogCollection1/">https://jpdsi.github.io/blog/web-apps/LogCollection1/</a></p><p>　IIS の調査に必要な通信系のログ情報について<br>　<a href="https://jpdsi.github.io/blog/web-apps/LogCollection2/">https://jpdsi.github.io/blog/web-apps/LogCollection2/</a></p><p>今回は、IIS のパフォーマンス系に関する現象の調査に役立つログをご紹介いたします。</p><br/><hr><h1 id="PerfView"><a href="#PerfView" class="headerlink" title="PerfView"></a><u>PerfView</u></h1><p>このログはCPU 高負荷やメモリに関するパフォーマンスの分析を行うのに有効なツールです。<br>事象再現時に、このログを取得することで原因究明の材料として役立てることが可能です。</p><p>  PerfView - Overview<br>  <a href="https://github.com/Microsoft/perfview#perfview-overview" target="_blank" rel="noopener">https://github.com/Microsoft/perfview#perfview-overview</a></p><p>本ブログでは下記の 2 つのパターンについてそれぞれの採取手順を紹介いたします。<br>なお、事前準備は 2 ついずれも共通で実施が必要なものとなりますので、”事前準備” と “いずれかのパターンの手順” を順に実施します。</p><ul><li>A. CPU 高負荷時に自動取得する場合</li><li>B. ハング (応答なし) や応答遅延で再現時に手動採取する場合</li></ul><br/><hr><h2 id="事前準備"><a href="#事前準備" class="headerlink" title="事前準備"></a>事前準備</h2><ol start="0"><li><p>PerfView は .NET Framework 4.0 を利用して開発されているため、.NET Framework 4.0 以降がインストールされている必要がございます。<br>対象の環境にて .NET Framework 4.x の機能が有効化されていない場合は有効化してください。</p></li><li><p>下記ページより PerfView.exe をダウンロードします。<br>(Shortcut to Download the Latest PerfView.exe の部分にリンクがあります)</p><p>Downloading PerfView<br><a href="https://github.com/Microsoft/perfview/blob/master/documentation/Downloading.md" target="_blank" rel="noopener">https://github.com/Microsoft/perfview/blob/master/documentation/Downloading.md</a></p></li><li><p>対象サーバーにて任意のフォルダに展開します。<br>（PerfView.exe と同じフォルダにデータが出力されます。データ サイズは採取時間にもよりますが、数10MB ～ 数100MBほどとなります）</p></li><li><p>サーバー マネージャーの役割サービスの追加で、[Web サーバー] - [状態と診断] - [トレース] がインストールされていなければ、インストールします。<br>インストールの際は、IIS の再起動が発生します。</p></li></ol><br/><p>採取目的に応じて、下記の A、B のいずれかの該当する手順に移動します。</p><hr><h2 id="A-CPU-高負荷時に自動取得する場合"><a href="#A-CPU-高負荷時に自動取得する場合" class="headerlink" title="A. CPU 高負荷時に自動取得する場合"></a>A. CPU 高負荷時に自動取得する場合</h2><h4 id="注意事項"><a href="#注意事項" class="headerlink" title="注意事項"></a>注意事項</h4><p>以下の事前準備を行うことで、CPU 高負荷時に自動で Perfview のログを採取することが可能です。</p><p>PerfView のログについてはユーザーがログオンしている間に常時採取できるものになります。</p><p>そのため、ユーザーはログオフせずにロックさせておき、OS の再起動が実施された場合は再度コマンドの実行を行うように構成してください。</p><p>また、ツールを常時動作させることでサーバ上の動作に大きな影響をあたえるツールではないことを確認しておりますものの、<br>実際に検証環境などで採取の設定を行っても影響がないか、十分に検証いただいた上でご検討ください。</p><h4 id="手順"><a href="#手順" class="headerlink" title="手順"></a>手順</h4><ol start="4"><li>管理者コマンドプロンプトを起動し、PerfView を展開したフォルダへ移動します。</li><li>コマンドプロンプトにて以下のコマンドを実行します。</li></ol><blockquote><p>PerfView.exe collect /nogui /ThreadTime /CircularMB=2000 “/StopOnPerfCounter=Processor:% Processor Time:_Total&gt;90” /MinSecForTrigger:30 /DelayAfterTriggerSec:60</p></blockquote><ol start="6"><li>新しいコマンドプロンプトウィンドウが表示され、10秒ごとに「Collecting …」というログが流れ始めます。待機頂く際にそのログが流れ始めた事をご確認ください。</li></ol><h5 id="手順-5-の補足"><a href="#手順-5-の補足" class="headerlink" title="手順 5 の補足"></a>手順 5 の補足</h5><p>トレースの停止条件について、補足いたします。<br>上記手順でご案内した方法では、Processor% Processor Time(_Total) のパフォーマンスカウンターが30秒間、90%以上を記録した場合に、さらにその60秒後にトレースを停止します。<br>それぞれのオプションの意味は以下の通りです。</p><p>[/StopOnPerfCounter=Processor:% Processor Time:_Total&gt;90]<br>Processor% Processor Time(_Total) のパフォーマンスカウンターが90%越えた場合を停止の条件とする。</p><p>[/MinSecForTrigger:30]<br>パフォーマンスカウンターの停止条件が最低30秒間継続した場合にトリガーする。</p><p>[/DelayAfterTriggerSec:60]<br>パフォーマンスカウンターによる停止がトリガーされてからトレースを60秒後に停止する。<br>※ なお、当該システムにて、まず perfview をオプションなしで実行して頂きますと、使用許諾契約が表示されます。そちらを Accept（受諾）して頂きますと、ツールが使用可能になります。もしコマンドラインから受諾する場合には、以下のコマンドをご利用ください 。</p><blockquote><p>PerfView.exe collect /nogui /ThreadTime /CircularMB=2000 /AcceptEULA “/StopOnPerfCounter=Processor:% Processor Time:_Total&gt;90” /MinSecForTrigger:30 /DelayAfterTriggerSec:60</p></blockquote><br/><ol start="7"><li>現象が発生し、トレースが自動で停止するのを待ちます。</li><li>トレースが停止するとPerfView.exeのフォルダでログの圧縮等が行われます (場合によっては数十秒から数分掛かります)。<br>「Press enter to close window」と表示された時点で圧縮が完了していますので、そちらが表示されましたら、Enter を押下し、ウィンドウを閉じます。 </li><li>同フォルダに生成された PerfViewData.etl.zip と PerfViewData.log.txt をご確認ください。</li></ol><br/><h2 id="B-ハング-応答なし-や応答遅延で再現時に手動採取する場合"><a href="#B-ハング-応答なし-や応答遅延で再現時に手動採取する場合" class="headerlink" title="B. ハング (応答なし) や応答遅延で再現時に手動採取する場合"></a>B. ハング (応答なし) や応答遅延で再現時に手動採取する場合</h2><p>ハングや応答遅延時に手動で採取する場合、サーバー上でツールを起動し、事象を再現させた後、ツールを停止するという手順となります。</p><h4 id="手順-1"><a href="#手順-1" class="headerlink" title="手順"></a>手順</h4><p>—– 起動と設定 —–</p><ol start="4"><li>管理者コマンド プロンプトを起動し、PerfView を展開したフォルダへ移動します。</li></ol><p>—– 情報採取—–</p><ol start="5"><li>コマンド プロンプトにて以下のコマンドを実行します。新しいコマンド プロンプト ウィンドウが表示され、<br>10秒ごとに「Collecting …」というログが流れ始めます。(（6) にて待機頂く際にそのログが流れ始めた事をご確認ください）</li></ol><blockquote><p>perfview /nogui /ThreadTime /CircularMB=2000 collect</p></blockquote><p>※ なお、当該システムにて、まず perfview をオプションなしで実行して頂きますと、使用許諾契約が表示されます。そちらを Accept（受諾）して頂きますと、ツールが使用可能になります。もしコマンドラインから受諾する場合には、以下のコマンドをご利用ください。</p><blockquote><p>perfview /nogui /ThreadTime /CircularMB=2000 /AcceptEULA collect</p></blockquote><ol start="6"><li>クライアントから再度リクエストを送り、事象を再現させます。<br>少し待機した後、事象が発生していることを確認したら、事象発生中のトレースを最低30秒程度、可能であれば1分以上の採取をご検討ください。</li></ol><p>—– 採取停止 —–</p><ol start="7"><li>手順 5 で新しく起動したコマンド プロンプト ウィンドウにて S キーを押下します。</li><li>ログの圧縮等が行われます。「Press enter to close window」と表示された時点で圧縮が完了しています。Enter を押下し、ウィンドウを閉じます。</li><li>同フォルダに生成された PerfViewData.etl.zip と PerfViewData.log.txt をお送りください。</li></ol><br/><p>今回は以上です。 それでは、また次回！</p><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。 もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは。&lt;/p&gt;
&lt;p&gt;IIS サポート チームです！&lt;/p&gt;
&lt;p&gt;以前、IIS 上でのトラブル シューティングに役立つログの採取方法について、以下の 2 つの記事を書いてますが、現象の性質によってはこのログ以外の情報が必要となるログがございます。&lt;/p&gt;
&lt;p&gt;　I
      
    
    </summary>
    
    
    
      <category term="Internet Information Services" scheme="https://jpdsi.github.io/blog/tags/Internet-Information-Services/"/>
    
      <category term="ログ採取" scheme="https://jpdsi.github.io/blog/tags/%E3%83%AD%E3%82%B0%E6%8E%A1%E5%8F%96/"/>
    
  </entry>
  
  <entry>
    <title>IIS の調査に必要な FTP の情報について</title>
    <link href="https://jpdsi.github.io/blog/web-apps/LogCollection5/"/>
    <id>https://jpdsi.github.io/blog/web-apps/LogCollection5/</id>
    <published>2020-01-27T15:00:00.000Z</published>
    <updated>2020-04-20T05:13:02.876Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。</p><p>IIS サポート チームです！</p><p>以前、以下の Blog 記事において 4 つの基本的なログ情報について執筆しています。</p><p>  IIS の調査に必要な基本的なログ情報について<br>  <a href="https://jpdsi.github.io/blog/web-apps/LogCollection1/">https://jpdsi.github.io/blog/web-apps/LogCollection1/</a></p><p>しかし、問題が FTP に関係する場合には、実は上記とは異なる以下のログの採取が必要となります。</p><ol><li><strong>アクセス権情報</strong></li><li><strong>イベント ログ</strong></li><li><strong>FTP アクセス ログ</strong></li><li><strong>IIS 構成情報</strong></li></ol><p>FTP に関係する現象というのは、例えば 550 エラーが発生する場合や、または<br>これまで実現できていた FTP コマンドが期待通りに動作しない等です。</p><p>また、ログをご提供いただきましたら、まずは現象発生時刻周辺を確認するため、<br>ログのご提供と同時に、以下を併せてお知らせいただけますと嬉しいです！</p><ul><li><strong>現象発生時刻（時分秒）</strong></li><li><strong>現象が発生したディレクトリのパス</strong></li></ul><hr><h2 id="1-アクセス権情報"><a href="#1-アクセス権情報" class="headerlink" title="1. アクセス権情報"></a>1. アクセス権情報</h2><p>アクセス権情報とは、現象が発生していたディレクトリのアクセス権の情報を確認するため、各ディレクトリに対して管理者権限で下記のコマンドを実行した結果 (出力されたテキスト ファイル) となります。</p><blockquote><p>icacls /T (対象のディレクトリのフルパス) &gt; (実行結果を出力するファイルのフルパス)</p></blockquote><p>例) 対象のディレクトリが c:\inetpub\ftproot\sub、実行結果を出力するファイルのフルパスを c:\temp\icaclsNG.txt とする場合</p><blockquote><p>icacls /T c:\inetpub\ftproot\sub &gt; c:\temp\icaclsNG.txt</p></blockquote><h2 id="2-イベント-ログ"><a href="#2-イベント-ログ" class="headerlink" title="2. イベント ログ"></a>2. イベント ログ</h2><ol><li>Windows Server 上にてイベント ビューアーを起動します（コマンド: eventvwr）</li><li>[Windows ログ] を展開します</li><li>以下をそれぞれ右クリックし、[すべてのイベントを名前をつけて保存] を選択します    </li></ol><ul><li>Application（アプリケーション）</li><li>システム</li><li>セキュリティ</li></ul><h2 id="3-FTP-アクセス-ログ"><a href="#3-FTP-アクセス-ログ" class="headerlink" title="3. FTP アクセス ログ"></a>3. FTP アクセス ログ</h2><p>FTP アクセス ログは既定で %SystemDrive%\inetpub\logs\LogFiles\FTPSVCn (n はサイト識別子) フォルダーに u_exYYMMDD.log として保存されます。</p><p>調査には、現象が発生した日時および復旧した日時のログを含む FTP アクセスログが必要となります。<br>なお、ログは UTC 時間で記録されますので、日本時間から -9 時間ずれて記録されます。</p><h2 id="4-IIS-構成情報"><a href="#4-IIS-構成情報" class="headerlink" title="4. IIS 構成情報"></a>4. IIS 構成情報</h2><p>IIS の構成情報は %SystemRoot%\system32\inetsrv\config\applicationHost.config となります。</p><p>今回は以上です。 それでは、また次回！</p><hr><p>なお、本ブログは弊社の公式見解ではなく、予告なく変更される場合があります。 もし公式な見解が必要な場合は、弊社ドキュメント (<a href="https://docs.microsoft.com/" target="_blank" rel="noopener">https://docs.microsoft.com/</a> や <a href="https://support.microsoft.com" target="_blank" rel="noopener">https://support.microsoft.com</a>) をご参照いただく、もしくは私共サポートまでお問い合わせください。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;こんにちは。&lt;/p&gt;
&lt;p&gt;IIS サポート チームです！&lt;/p&gt;
&lt;p&gt;以前、以下の Blog 記事において 4 つの基本的なログ情報について執筆しています。&lt;/p&gt;
&lt;p&gt;  IIS の調査に必要な基本的なログ情報について&lt;br&gt;  &lt;a href=&quot;https://j
      
    
    </summary>
    
    
    
      <category term="Internet Information Services" scheme="https://jpdsi.github.io/blog/tags/Internet-Information-Services/"/>
    
      <category term="ログ採取" scheme="https://jpdsi.github.io/blog/tags/%E3%83%AD%E3%82%B0%E6%8E%A1%E5%8F%96/"/>
    
  </entry>
  
</feed>
